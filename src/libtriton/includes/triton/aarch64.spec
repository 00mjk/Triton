#pragma warning(disable:4067)

#if not (defined REG_SPEC || defined REG_SPEC_NO_CAPSTONE)
#error REG_SPEC have to be specified before including specs
#endif

// REG_SPEC(UPPER_NAME, LOWER_NAME, AARCH64_UPPER, AARCH64_LOWER, AARCH64_PARENT)

// Thirty-one 64-bit general-purpose registers 
REG_SPEC(X0,  x0,  QWORD_SIZE_BIT-1, 0, X0)  // x0
REG_SPEC(X1,  x1,  QWORD_SIZE_BIT-1, 0, X1)  // x1
REG_SPEC(X2,  x2,  QWORD_SIZE_BIT-1, 0, X2)  // x2
REG_SPEC(X3,  x3,  QWORD_SIZE_BIT-1, 0, X3)  // x3
REG_SPEC(X4,  x4,  QWORD_SIZE_BIT-1, 0, X4)  // x4
REG_SPEC(X5,  x5,  QWORD_SIZE_BIT-1, 0, X5)  // x5
REG_SPEC(X6,  x6,  QWORD_SIZE_BIT-1, 0, X6)  // x6
REG_SPEC(X7,  x7,  QWORD_SIZE_BIT-1, 0, X7)  // x7
REG_SPEC(X8,  x8,  QWORD_SIZE_BIT-1, 0, X8)  // x8
REG_SPEC(X9,  x9,  QWORD_SIZE_BIT-1, 0, X9)  // x9
REG_SPEC(X10, x10, QWORD_SIZE_BIT-1, 0, X10) // x10
REG_SPEC(X11, x11, QWORD_SIZE_BIT-1, 0, X11) // x11
REG_SPEC(X12, x12, QWORD_SIZE_BIT-1, 0, X12) // x12
REG_SPEC(X13, x13, QWORD_SIZE_BIT-1, 0, X13) // x13
REG_SPEC(X14, x14, QWORD_SIZE_BIT-1, 0, X14) // x14
REG_SPEC(X15, x15, QWORD_SIZE_BIT-1, 0, X15) // x15
REG_SPEC(X16, x16, QWORD_SIZE_BIT-1, 0, X16) // x16
REG_SPEC(X17, x17, QWORD_SIZE_BIT-1, 0, X17) // x17
REG_SPEC(X18, x18, QWORD_SIZE_BIT-1, 0, X18) // x18
REG_SPEC(X19, x19, QWORD_SIZE_BIT-1, 0, X19) // x19
REG_SPEC(X20, x20, QWORD_SIZE_BIT-1, 0, X20) // x20
REG_SPEC(X21, x21, QWORD_SIZE_BIT-1, 0, X21) // x21
REG_SPEC(X22, x22, QWORD_SIZE_BIT-1, 0, X22) // x22
REG_SPEC(X23, x23, QWORD_SIZE_BIT-1, 0, X23) // x23
REG_SPEC(X24, x24, QWORD_SIZE_BIT-1, 0, X24) // x24
REG_SPEC(X25, x25, QWORD_SIZE_BIT-1, 0, X25) // x25
REG_SPEC(X26, x26, QWORD_SIZE_BIT-1, 0, X26) // x26
REG_SPEC(X27, x27, QWORD_SIZE_BIT-1, 0, X27) // x27
REG_SPEC(X28, x28, QWORD_SIZE_BIT-1, 0, X28) // x28
REG_SPEC(X29, x29, QWORD_SIZE_BIT-1, 0, X29) // x29
REG_SPEC(X30, x30, QWORD_SIZE_BIT-1, 0, X30) // x30
REG_SPEC(W0,  w0,  DWORD_SIZE_BIT-1, 0, X0)  // w0
REG_SPEC(W1,  w1,  DWORD_SIZE_BIT-1, 0, X1)  // w1
REG_SPEC(W2,  w2,  DWORD_SIZE_BIT-1, 0, X2)  // w2
REG_SPEC(W3,  w3,  DWORD_SIZE_BIT-1, 0, X3)  // w3
REG_SPEC(W4,  w4,  DWORD_SIZE_BIT-1, 0, X4)  // w4
REG_SPEC(W5,  w5,  DWORD_SIZE_BIT-1, 0, X5)  // w5
REG_SPEC(W6,  w6,  DWORD_SIZE_BIT-1, 0, X6)  // w6
REG_SPEC(W7,  w7,  DWORD_SIZE_BIT-1, 0, X7)  // w7
REG_SPEC(W8,  w8,  DWORD_SIZE_BIT-1, 0, X8)  // w8
REG_SPEC(W9,  w9,  DWORD_SIZE_BIT-1, 0, X9)  // w9
REG_SPEC(W10, w10, DWORD_SIZE_BIT-1, 0, X10) // w10
REG_SPEC(W11, w11, DWORD_SIZE_BIT-1, 0, X11) // w11
REG_SPEC(W12, w12, DWORD_SIZE_BIT-1, 0, X12) // w12
REG_SPEC(W13, w13, DWORD_SIZE_BIT-1, 0, X13) // w13
REG_SPEC(W14, w14, DWORD_SIZE_BIT-1, 0, X14) // w14
REG_SPEC(W15, w15, DWORD_SIZE_BIT-1, 0, X15) // w15
REG_SPEC(W16, w16, DWORD_SIZE_BIT-1, 0, X16) // w16
REG_SPEC(W17, w17, DWORD_SIZE_BIT-1, 0, X17) // w17
REG_SPEC(W18, w18, DWORD_SIZE_BIT-1, 0, X18) // w18
REG_SPEC(W19, w19, DWORD_SIZE_BIT-1, 0, X19) // w19
REG_SPEC(W20, w20, DWORD_SIZE_BIT-1, 0, X20) // w20
REG_SPEC(W21, w21, DWORD_SIZE_BIT-1, 0, X21) // w21
REG_SPEC(W22, w22, DWORD_SIZE_BIT-1, 0, X22) // w22
REG_SPEC(W23, w23, DWORD_SIZE_BIT-1, 0, X23) // w23
REG_SPEC(W24, w24, DWORD_SIZE_BIT-1, 0, X24) // w24
REG_SPEC(W25, w25, DWORD_SIZE_BIT-1, 0, X25) // w25
REG_SPEC(W26, w26, DWORD_SIZE_BIT-1, 0, X26) // w26
REG_SPEC(W27, w27, DWORD_SIZE_BIT-1, 0, X27) // w27
REG_SPEC(W28, w28, DWORD_SIZE_BIT-1, 0, X28) // w28
REG_SPEC(W29, w29, DWORD_SIZE_BIT-1, 0, X29) // w29
REG_SPEC(W30, w30, DWORD_SIZE_BIT-1, 0, X30) // w30

// Stack pointer registers
REG_SPEC(SP_EL0, sp_el0, QWORD_SIZE_BIT-1, 0, SP_EL0) // SP_EL0
REG_SPEC(SP_EL1, sp_el1, QWORD_SIZE_BIT-1, 0, SP_EL1) // SP_EL1
REG_SPEC(SP_EL2, sp_el2, QWORD_SIZE_BIT-1, 0, SP_EL2) // SP_EL2
REG_SPEC(SP_EL3, sp_el3, QWORD_SIZE_BIT-1, 0, SP_EL3) // SP_EL3
REG_SPEC(SP,     sp,     QWORD_SIZE_BIT-1, 0, SP)     // SP

// Exception link registers
REG_SPEC(ELR_EL1, elr_el1, QWORD_SIZE_BIT-1, 0, ELR_EL1) // ELR_EL1
REG_SPEC(ELR_EL2, elr_el2, QWORD_SIZE_BIT-1, 0, ELR_EL2) // ELR_EL2
REG_SPEC(ELR_EL3, elr_el3, QWORD_SIZE_BIT-1, 0, ELR_EL3) // ELR_EL3

// Saved program status registers
REG_SPEC(SPSR_EL1, spsr_el1, dWORD_SIZE_BIT-1, 0, SPSR_EL1) // SPSR_EL1
REG_SPEC(SPSR_EL2, spsr_el2, dWORD_SIZE_BIT-1, 0, SPSR_EL2) // SPSR_EL2
REG_SPEC(SPSR_EL3, spsr_el3, dWORD_SIZE_BIT-1, 0, SPSR_EL3) // SPSR_EL3

// Program counter register
REG_SPEC(PC, pc, QWORD_SIZE_BIT-1, 0, PC) // PC

// Zero registers
REG_SPEC(WZR, wzr, DWORD_SIZE_BIT-1, 0, WZR) // WZR
REG_SPEC(XZR, xzr, QWORD_SIZE_BIT-1, 0, XZR) // XZR

#undef REG_SPEC
#undef REG_SPEC_NO_CAPSTONE

#pragma warning(default:4067)
