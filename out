0x4005ca: push rbp
	 -> #0 = (bvsub (_ bv140736711787176 64) (_ bv8 64)) ; Aligns stack
	 -> #1 = (_ bv0 64) 
	 -> #2 = (_ bv4195787 64) ; RIP

0x4005cb: mov rbp, rsp
	 -> #3 = ((_ extract 63 0) #0) 
	 -> #4 = (_ bv4195790 64) ; RIP

0x4005ce: sub rsp, 0x20
	 -> #5 = (bvsub ((_ extract 63 0) #0) (_ bv32 64)) 
	 -> #6 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #5 (bvxor ((_ extract 63 0) #0) (_ bv32 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #7 = (ite (bvult ((_ extract 63 0) #0) (_ bv32 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #8 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #0) (_ bv32 64)) (bvxor ((_ extract 63 0) #0) #5))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #9 = (ite (= (parity_flag ((_ extract 7 0) #5)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #10 = (ite (= ((_ extract 63 63) #5) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #11 = (ite (= #5 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #12 = (_ bv4195794 64) ; RIP

0x4005d2: mov dword ptr [rbp-0x14], edi
	 -> #13 = (_ bv2 32) 
	 -> #14 = (_ bv4195797 64) ; RIP

0x4005d5: mov qword ptr [rbp-0x20], rsi
	 -> #15 = (_ bv140736711787400 64) 
	 -> #16 = (_ bv4195801 64) ; RIP

0x4005d9: cmp dword ptr [rbp-0x14], 0x2
	 -> #17 = (bvsub #13 ((_ sign_extend 0) (_ bv2 32))) 
	 -> #18 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #17 (bvxor #13 ((_ sign_extend 0) (_ bv2 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #19 = (ite (bvult #13 ((_ sign_extend 0) (_ bv2 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #20 = (ite (= ((_ extract 31 31) (bvand (bvxor #13 ((_ sign_extend 0) (_ bv2 32))) (bvxor #13 #17))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #21 = (ite (= (parity_flag ((_ extract 7 0) #17)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #22 = (ite (= ((_ extract 31 31) #17) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #23 = (ite (= #17 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #24 = (_ bv4195805 64) ; RIP

0x4005e6: mov rax, qword ptr [rbp-0x20]
	 -> #25 = ((_ extract 63 0) #15) 
	 -> #26 = (_ bv4195818 64) ; RIP

0x4005ea: add rax, 0x8
	 -> #27 = (bvadd ((_ extract 63 0) #25) (_ bv8 64)) 
	 -> #28 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #27 (bvxor ((_ extract 63 0) #25) (_ bv8 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #29 = (ite (bvult #27 ((_ extract 63 0) #25)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #30 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #25) (bvnot (_ bv8 64))) (bvxor ((_ extract 63 0) #25) #27))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #31 = (ite (= (parity_flag ((_ extract 7 0) #27)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #32 = (ite (= ((_ extract 63 63) #27) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #33 = (ite (= #27 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #34 = (_ bv4195822 64) ; RIP

0x4005ee: mov rax, qword ptr [rax]
	 -> #35 = (_ bv140736711790864 64) 
	 -> #36 = (_ bv4195825 64) ; RIP

0x4005f1: mov rdi, rax
	 -> #37 = ((_ extract 63 0) #35) 
	 -> #38 = (_ bv4195828 64) ; RIP

0x4005f4: call 0x40056d
	 -> #39 = (bvsub #5 (_ bv8 64)) ; Aligns stack
	 -> #40 = (_ bv4195833 64) ; Saved RIP
	 -> #41 = (_ bv4195693 64) ; RIP

0x40056d: push rbp
	 -> #42 = (bvsub #39 (_ bv8 64)) ; Aligns stack
	 -> #43 = #3 
	 -> #44 = (_ bv4195694 64) ; RIP

0x40056e: mov rbp, rsp
	 -> #45 = ((_ extract 63 0) #42) 
	 -> #46 = (_ bv4195697 64) ; RIP

0x400571: mov qword ptr [rbp-0x18], rdi
	 -> #47 = ((_ extract 63 0) #37) 
	 -> #48 = (_ bv4195701 64) ; RIP

0x400575: mov dword ptr [rbp-0x4], 0x0
	 -> #49 = (_ bv0 32) 
	 -> #50 = (_ bv4195708 64) ; RIP

0x40057c: jmp 0x4005bd

0x4005bd: cmp dword ptr [rbp-0x4], 0x4
	 -> #51 = (bvsub #49 ((_ sign_extend 0) (_ bv4 32))) 
	 -> #52 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #51 (bvxor #49 ((_ sign_extend 0) (_ bv4 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #53 = (ite (bvult #49 ((_ sign_extend 0) (_ bv4 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #54 = (ite (= ((_ extract 31 31) (bvand (bvxor #49 ((_ sign_extend 0) (_ bv4 32))) (bvxor #49 #51))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #55 = (ite (= (parity_flag ((_ extract 7 0) #51)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #56 = (ite (= ((_ extract 31 31) #51) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #57 = (ite (= #51 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #58 = (_ bv4195777 64) ; RIP

0x40057e: mov eax, dword ptr [rbp-0x4]
	 -> #59 = ((_ extract 31 0) #51) 
	 -> #60 = (_ bv4195713 64) ; RIP

0x400581: movsxd rdx, eax
	 -> #61 = ((_ sign_extend 32) ((_ extract 31 0) #59)) 
	 -> #62 = (_ bv4195716 64) ; RIP

0x400584: mov rax, qword ptr [rbp-0x18]
	 -> #63 = ((_ extract 63 0) #47) 
	 -> #64 = (_ bv4195720 64) ; RIP

0x400588: add rax, rdx
	 -> #65 = (bvadd ((_ extract 63 0) #63) ((_ extract 63 0) #61)) 
	 -> #66 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #65 (bvxor ((_ extract 63 0) #63) ((_ extract 63 0) #61))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #67 = (ite (bvult #65 ((_ extract 63 0) #63)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #68 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #63) (bvnot ((_ extract 63 0) #61))) (bvxor ((_ extract 63 0) #63) #65))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #69 = (ite (= (parity_flag ((_ extract 7 0) #65)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #70 = (ite (= ((_ extract 63 63) #65) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #71 = (ite (= #65 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #72 = (_ bv4195723 64) ; RIP

0x40058b: movzx eax, byte ptr [rax]
	 -> #73 = ((_ zero_extend 24) (_ bv97 8)) 
	 -> #74 = (_ bv4195726 64) ; RIP

0x40058e: movsx eax, al
	 -> #75 = ((_ sign_extend 24) ((_ extract 7 0) #73)) 
	 -> #76 = (_ bv4195729 64) ; RIP

0x400591: sub eax, 0x1
	 -> #77 = (bvsub ((_ extract 31 0) #75) (_ bv1 32)) 
	 -> #78 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #77 (bvxor ((_ extract 31 0) #75) (_ bv1 32))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #79 = (ite (bvult ((_ extract 31 0) #75) (_ bv1 32)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #80 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #75) (_ bv1 32)) (bvxor ((_ extract 31 0) #75) #77))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #81 = (ite (= (parity_flag ((_ extract 7 0) #77)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #82 = (ite (= ((_ extract 31 31) #77) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #83 = (ite (= #77 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #84 = (_ bv4195732 64) ; RIP

0x400594: xor eax, 0x55
	 -> #85 = (bvxor ((_ extract 31 0) #77) (_ bv85 32)) 
	 -> #86 = (_ bv0 1) ; Clears carry flag
	 -> #87 = (_ bv0 1) ; Clears overflow flag
	 -> #88 = (ite (= (parity_flag ((_ extract 7 0) #85)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #89 = (ite (= ((_ extract 31 31) #85) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #90 = (ite (= #85 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #91 = (_ bv4195735 64) ; RIP

0x400597: mov ecx, eax
	 -> #92 = ((_ extract 31 0) #85) 
	 -> #93 = (_ bv4195737 64) ; RIP

0x400599: mov rdx, qword ptr [rip+0x200aa0]
	 -> #94 = (_ bv4196036 64) 
	 -> #95 = (_ bv4195744 64) ; RIP

0x4005a0: mov eax, dword ptr [rbp-0x4]
	 -> #96 = ((_ extract 31 0) #51) 
	 -> #97 = (_ bv4195747 64) ; RIP

0x4005a3: cdqe 

0x4005a5: add rax, rdx
	 -> #98 = (bvadd ((_ extract 63 0) #96) ((_ extract 63 0) #94)) 
	 -> #99 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #98 (bvxor ((_ extract 63 0) #96) ((_ extract 63 0) #94))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #100 = (ite (bvult #98 ((_ extract 63 0) #96)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #101 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #96) (bvnot ((_ extract 63 0) #94))) (bvxor ((_ extract 63 0) #96) #98))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #102 = (ite (= (parity_flag ((_ extract 7 0) #98)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #103 = (ite (= ((_ extract 63 63) #98) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #104 = (ite (= #98 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #105 = (_ bv4195752 64) ; RIP

0x4005a8: movzx eax, byte ptr [rax]
	 -> #106 = ((_ zero_extend 24) (_ bv49 8)) 
	 -> #107 = (_ bv4195755 64) ; RIP

0x4005ab: movsx eax, al
	 -> #108 = ((_ sign_extend 24) ((_ extract 7 0) #106)) 
	 -> #109 = (_ bv4195758 64) ; RIP

0x4005ae: cmp ecx, eax
	 -> #110 = (bvsub ((_ extract 31 0) #92) ((_ extract 31 0) #108)) 
	 -> #111 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #110 (bvxor ((_ extract 31 0) #92) ((_ extract 31 0) #108))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #112 = (ite (bvult ((_ extract 31 0) #92) ((_ extract 31 0) #108)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #113 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #92) ((_ extract 31 0) #108)) (bvxor ((_ extract 31 0) #92) #110))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #114 = (ite (= (parity_flag ((_ extract 7 0) #110)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #115 = (ite (= ((_ extract 31 31) #110) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #116 = (ite (= #110 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #117 = (_ bv4195760 64) ; RIP

0x4005b0: jz 0x4005b9

0x4005b2: mov eax, 0x1
	 -> #118 = (_ bv1 32) 
	 -> #119 = (_ bv4195767 64) ; RIP

0x4005b7: jmp 0x4005c8

0x4005c8: pop rbp
	 -> #120 = #43 
	 -> #121 = (bvadd #42 (_ bv8 64)) ; Aligns stack
	 -> #122 = (_ bv4195785 64) ; RIP

0x4005c9: ret 
	 -> #123 = #40 ; RIP
	 -> #124 = (bvadd #121 (_ bv8 64)) ; Aligns stack

0x4005f9: mov dword ptr [rbp-0x4], eax
	 -> #125 = ((_ extract 31 0) #118) 
	 -> #126 = (_ bv4195836 64) ; RIP

0x4005fc: cmp dword ptr [rbp-0x4], 0x0
	 -> #127 = (bvsub #125 ((_ sign_extend 0) (_ bv0 32))) 
	 -> #128 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #127 (bvxor #125 ((_ sign_extend 0) (_ bv0 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #129 = (ite (bvult #125 ((_ sign_extend 0) (_ bv0 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #130 = (ite (= ((_ extract 31 31) (bvand (bvxor #125 ((_ sign_extend 0) (_ bv0 32))) (bvxor #125 #127))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #131 = (ite (= (parity_flag ((_ extract 7 0) #127)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #132 = (ite (= ((_ extract 31 31) #127) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #133 = (ite (= #127 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #134 = (_ bv4195840 64) ; RIP

0x40060e: mov edi, 0x4006ce
	 -> #135 = (_ bv4196046 32) 
	 -> #136 = (_ bv4195859 64) ; RIP

0x400613: call 0x400450
	 -> #137 = (bvsub #124 (_ bv8 64)) ; Aligns stack
	 -> #138 = (_ bv4195864 64) ; Saved RIP
	 -> #139 = (_ bv4195408 64) ; RIP

0x400450: jmp qword ptr [rip+0x200bc2]

0x400456: push 0x0
	 -> #140 = (bvsub #137 (_ bv8 64)) ; Aligns stack
	 -> #141 = (_ bv0 64) 
	 -> #142 = (_ bv4195419 64) ; RIP

0x40045b: jmp 0x400440

0x400440: push qword ptr [rip+0x200bc2]
	 -> #143 = (bvsub #140 (_ bv8 64)) ; Aligns stack
	 -> #144 = (_ bv140283852497224 64) 
	 -> #145 = (_ bv4195398 64) ; RIP

0x400446: jmp qword ptr [rip+0x200bc4]

0x7f96611146f0: sub rsp, 0x78
	 -> #146 = (bvsub ((_ extract 63 0) #143) (_ bv120 64)) 
	 -> #147 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #146 (bvxor ((_ extract 63 0) #143) (_ bv120 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #148 = (ite (bvult ((_ extract 63 0) #143) (_ bv120 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #149 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #143) (_ bv120 64)) (bvxor ((_ extract 63 0) #143) #146))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #150 = (ite (= (parity_flag ((_ extract 7 0) #146)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #151 = (ite (= ((_ extract 63 63) #146) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #152 = (ite (= #146 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #153 = (_ bv140283850344180 64) ; RIP

0x7f96611146f4: mov qword ptr [rsp+0x40], rax
	 -> #154 = ((_ extract 63 0) #118) 
	 -> #155 = (_ bv140283850344185 64) ; RIP

0x7f96611146f9: mov qword ptr [rsp+0x48], rcx
	 -> #156 = ((_ extract 63 0) #110) 
	 -> #157 = (_ bv140283850344190 64) ; RIP

0x7f96611146fe: mov qword ptr [rsp+0x50], rdx
	 -> #158 = ((_ extract 63 0) #94) 
	 -> #159 = (_ bv140283850344195 64) ; RIP

0x7f9661114703: mov qword ptr [rsp+0x58], rsi
	 -> #160 = (_ bv140736711787400 64) 
	 -> #161 = (_ bv140283850344200 64) ; RIP

0x7f9661114708: mov qword ptr [rsp+0x60], rdi
	 -> #162 = ((_ extract 63 0) #135) 
	 -> #163 = (_ bv140283850344205 64) ; RIP

0x7f966111470d: mov qword ptr [rsp+0x68], r8
	 -> #164 = (_ bv140283484556416 64) 
	 -> #165 = (_ bv140283850344210 64) ; RIP

0x7f9661114712: mov qword ptr [rsp+0x70], r9
	 -> #166 = (_ bv140283850322208 64) 
	 -> #167 = (_ bv140283850344215 64) ; RIP

0x7f9661114717: nop sp, word ptr [rsp]

0x7f966111471c: nop sp, word ptr [rsp+0x10]

0x7f9661114722: nop sp, word ptr [rsp+0x20]

0x7f9661114728: nop sp, word ptr [rsp+0x30]

0x7f966111472e: mov rsi, qword ptr [rsp+0x80]
	 -> #168 = ((_ extract 63 0) #141) 
	 -> #169 = (_ bv140283850344246 64) ; RIP

0x7f9661114736: mov rdi, qword ptr [rsp+0x78]
	 -> #170 = (_ bv140283852497224 64) 
	 -> #171 = (_ bv140283850344251 64) ; RIP

0x7f966111473b: call 0x7f966110e000
	 -> #172 = (bvsub #146 (_ bv8 64)) ; Aligns stack
	 -> #173 = (_ bv140283850344256 64) ; Saved RIP
	 -> #174 = (_ bv140283850317824 64) ; RIP

0x7f966110e000: push r12
	 -> #175 = (bvsub #172 (_ bv8 64)) ; Aligns stack
	 -> #176 = (_ bv4195456 64) 
	 -> #177 = (_ bv140283850317826 64) ; RIP

0x7f966110e002: mov rax, rdi
	 -> #178 = ((_ extract 63 0) #170) 
	 -> #179 = (_ bv140283850317829 64) ; RIP

0x7f966110e005: mov esi, esi
	 -> #180 = ((_ extract 31 0) #168) 
	 -> #181 = (_ bv140283850317831 64) ; RIP

0x7f966110e007: lea rcx, ptr [rsi+rsi*2]

0x7f966110e00b: push rbp
	 -> #182 = (bvsub #175 (_ bv8 64)) ; Aligns stack
	 -> #183 = #120 
	 -> #184 = (_ bv140283850317836 64) ; RIP

0x7f966110e00c: push rbx
	 -> #185 = (bvsub #182 (_ bv8 64)) ; Aligns stack
	 -> #186 = (_ bv0 64) 
	 -> #187 = (_ bv140283850317837 64) ; RIP

0x7f966110e00d: sub rsp, 0x20
	 -> #188 = (bvsub ((_ extract 63 0) #185) (_ bv32 64)) 
	 -> #189 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #188 (bvxor ((_ extract 63 0) #185) (_ bv32 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #190 = (ite (bvult ((_ extract 63 0) #185) (_ bv32 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #191 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #185) (_ bv32 64)) (bvxor ((_ extract 63 0) #185) #188))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #192 = (ite (= (parity_flag ((_ extract 7 0) #188)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #193 = (ite (= ((_ extract 63 63) #188) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #194 = (ite (= #188 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #195 = (_ bv140283850317841 64) ; RIP

0x7f966110e011: mov rdx, qword ptr [rdi+0x68]
	 -> #196 = (_ bv6295208 64) 
	 -> #197 = (_ bv140283850317845 64) ; RIP

0x7f966110e015: mov rsi, qword ptr [rax+0x70]
	 -> #198 = (_ bv6295224 64) 
	 -> #199 = (_ bv140283850317849 64) ; RIP

0x7f966110e019: mov rdi, qword ptr [rdx+0x8]
	 -> #200 = (_ bv4195152 64) 
	 -> #201 = (_ bv140283850317853 64) ; RIP

0x7f966110e01d: mov rdx, qword ptr [rax+0xf8]
	 -> #202 = (_ bv6295336 64) 
	 -> #203 = (_ bv140283850317860 64) ; RIP

0x7f966110e024: mov rsi, qword ptr [rsi+0x8]
	 -> #204 = (_ bv4195056 64) 
	 -> #205 = (_ bv140283850317864 64) ; RIP

0x7f966110e028: mov rdx, qword ptr [rdx+0x8]
	 -> #206 = (_ bv4195280 64) 
	 -> #207 = (_ bv140283850317868 64) ; RIP

0x7f966110e02c: lea r8, ptr [rdx+rcx*8]

0x7f966110e030: mov rcx, qword ptr [r8+0x8]
	 -> #208 = (_ bv4294967303 64) 
	 -> #209 = (_ bv140283850317876 64) ; RIP

0x7f966110e034: mov rdx, rcx
	 -> #210 = ((_ extract 63 0) #208) 
	 -> #211 = (_ bv140283850317879 64) ; RIP

0x7f966110e037: shr rdx, 0x20

0x7f966110e03b: lea r9, ptr [rdx+rdx*2]

0x7f966110e03f: lea rsi, ptr [rsi+r9*8]

0x7f966110e043: mov r9, qword ptr [rax]
	 -> #212 = (_ bv0 64) 
	 -> #213 = (_ bv140283850317894 64) ; RIP

0x7f966110e046: mov qword ptr [rsp+0x18], rsi
	 -> #214 = ((_ extract 63 0) #204) 
	 -> #215 = (_ bv140283850317899 64) ; RIP

0x7f966110e04b: mov rbx, r9
	 -> #216 = ((_ extract 63 0) #212) 
	 -> #217 = (_ bv140283850317902 64) ; RIP

0x7f966110e04e: add rbx, qword ptr [r8]
	 -> #218 = (bvadd ((_ extract 63 0) #216) (_ bv6295576 64)) 
	 -> #219 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #218 (bvxor ((_ extract 63 0) #216) (_ bv6295576 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #220 = (ite (bvult #218 ((_ extract 63 0) #216)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #221 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #216) (bvnot (_ bv6295576 64))) (bvxor ((_ extract 63 0) #216) #218))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #222 = (ite (= (parity_flag ((_ extract 7 0) #218)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #223 = (ite (= ((_ extract 63 63) #218) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #224 = (ite (= #218 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #225 = (_ bv140283850317905 64) ; RIP

0x7f966110e051: cmp ecx, 0x7
	 -> #226 = (bvsub ((_ extract 31 0) #208) ((_ sign_extend 0) (_ bv7 32))) 
	 -> #227 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #226 (bvxor ((_ extract 31 0) #208) ((_ sign_extend 0) (_ bv7 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #228 = (ite (bvult ((_ extract 31 0) #208) ((_ sign_extend 0) (_ bv7 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #229 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #208) ((_ sign_extend 0) (_ bv7 32))) (bvxor ((_ extract 31 0) #208) #226))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #230 = (ite (= (parity_flag ((_ extract 7 0) #226)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #231 = (ite (= ((_ extract 31 31) #226) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #232 = (ite (= #226 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #233 = (_ bv140283850317908 64) ; RIP

0x7f966110e054: jnz 0x7f966110e18c

0x7f966110e05a: test byte ptr [rsi+0x5], 0x3
	 -> #234 = (bvand (_ bv0 8) (_ bv3 8)) 
	 -> #235 = (_ bv0 1) ; Clears carry flag
	 -> #236 = (_ bv0 1) ; Clears overflow flag
	 -> #237 = (ite (= (parity_flag ((_ extract 7 0) #234)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #238 = (ite (= ((_ extract 7 7) #234) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #239 = (ite (= #234 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #240 = (_ bv140283850317918 64) ; RIP

0x7f966110e05e: jnz 0x7f966110e1ab

0x7f966110e064: mov rcx, qword ptr [rax+0x1c8]
	 -> #241 = (_ bv6295432 64) 
	 -> #242 = (_ bv140283850317931 64) ; RIP

0x7f966110e06b: test rcx, rcx
	 -> #243 = (bvand ((_ extract 63 0) #241) ((_ extract 63 0) #241)) 
	 -> #244 = (_ bv0 1) ; Clears carry flag
	 -> #245 = (_ bv0 1) ; Clears overflow flag
	 -> #246 = (ite (= (parity_flag ((_ extract 7 0) #243)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #247 = (ite (= ((_ extract 63 63) #243) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #248 = (ite (= #243 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #249 = (_ bv140283850317934 64) ; RIP

0x7f966110e06e: jz 0x7f966110e170

0x7f966110e074: mov rcx, qword ptr [rcx+0x8]
	 -> #250 = (_ bv4195214 64) 
	 -> #251 = (_ bv140283850317944 64) ; RIP

0x7f966110e078: movzx edx, word ptr [rcx+rdx*2]
	 -> #252 = ((_ zero_extend 16) (_ bv2 16)) 
	 -> #253 = (_ bv140283850317948 64) ; RIP

0x7f966110e07c: and edx, 0x7fff
	 -> #254 = (bvand ((_ extract 31 0) #252) (_ bv32767 32)) 
	 -> #255 = (_ bv0 1) ; Clears carry flag
	 -> #256 = (_ bv0 1) ; Clears overflow flag
	 -> #257 = (ite (= (parity_flag ((_ extract 7 0) #254)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #258 = (ite (= ((_ extract 31 31) #254) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #259 = (ite (= #254 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #260 = (_ bv140283850317954 64) ; RIP

0x7f966110e082: lea rcx, ptr [rdx+rdx*2]

0x7f966110e086: mov rdx, qword ptr [rax+0x2e0]
	 -> #261 = (_ bv140283489131376 64) 
	 -> #262 = (_ bv140283850317965 64) ; RIP

0x7f966110e08d: lea r8, ptr [rdx+rcx*8]

0x7f966110e091: mov edx, 0x0
	 -> #263 = (_ bv0 32) 
	 -> #264 = (_ bv140283850317974 64) ; RIP

0x7f966110e096: mov ecx, dword ptr [r8+0x8]
	 -> #265 = (_ bv157882997 32) 
	 -> #266 = (_ bv140283850317978 64) ; RIP

0x7f966110e09a: test ecx, ecx
	 -> #267 = (bvand ((_ extract 31 0) #265) ((_ extract 31 0) #265)) 
	 -> #268 = (_ bv0 1) ; Clears carry flag
	 -> #269 = (_ bv0 1) ; Clears overflow flag
	 -> #270 = (ite (= (parity_flag ((_ extract 7 0) #267)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #271 = (ite (= ((_ extract 31 31) #267) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #272 = (ite (= #267 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #273 = (_ bv140283850317980 64) ; RIP

0x7f966110e09c: cmovz r8, rdx

0x7f966110e0a0: mov edx, dword ptr fs:[0x18]
	 -> #274 = (_ bv0 32) 
	 -> #275 = (_ bv140283850317992 64) ; RIP

0x7f966110e0a8: test edx, edx
	 -> #276 = (bvand ((_ extract 31 0) #274) ((_ extract 31 0) #274)) 
	 -> #277 = (_ bv0 1) ; Clears carry flag
	 -> #278 = (_ bv0 1) ; Clears overflow flag
	 -> #279 = (ite (= (parity_flag ((_ extract 7 0) #276)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #280 = (ite (= ((_ extract 31 31) #276) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #281 = (ite (= #276 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #282 = (_ bv140283850317994 64) ; RIP

0x7f966110e0aa: jnz 0x7f966110e1e3

0x7f966110e0b0: mov r9d, 0x1
	 -> #283 = (_ bv1 32) 
	 -> #284 = (_ bv140283850318006 64) ; RIP

0x7f966110e0b6: mov r12d, dword ptr fs:[0x4c]
	 -> #285 = (_ bv0 32) 
	 -> #286 = (_ bv140283850318015 64) ; RIP

0x7f966110e0bf: mov dword ptr fs:[0x4c], 0x1
	 -> #287 = (_ bv1 32) 
	 -> #288 = (_ bv140283850318027 64) ; RIP

0x7f966110e0cb: mov esi, dword ptr [rsi]
	 -> #289 = (_ bv11 32) 
	 -> #290 = (_ bv140283850318029 64) ; RIP

0x7f966110e0cd: mov rcx, qword ptr [rax+0x380]
	 -> #291 = (_ bv140283852498080 64) 
	 -> #292 = (_ bv140283850318036 64) ; RIP

0x7f966110e0d4: lea rdx, ptr [rsp+0x18]

0x7f966110e0d9: mov dword ptr [rsp], r9d
	 -> #293 = ((_ extract 31 0) #283) 
	 -> #294 = (_ bv140283850318045 64) ; RIP

0x7f966110e0dd: mov qword ptr [rsp+0x8], 0x0
	 -> #295 = (_ bv0 64) 
	 -> #296 = (_ bv140283850318054 64) ; RIP

0x7f966110e0e6: mov r9d, 0x1
	 -> #297 = (_ bv1 32) 
	 -> #298 = (_ bv140283850318060 64) ; RIP

0x7f966110e0ec: add rdi, rsi
	 -> #299 = (bvadd ((_ extract 63 0) #200) ((_ extract 63 0) #289)) 
	 -> #300 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #299 (bvxor ((_ extract 63 0) #200) ((_ extract 63 0) #289))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #301 = (ite (bvult #299 ((_ extract 63 0) #200)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #302 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #200) (bvnot ((_ extract 63 0) #289))) (bvxor ((_ extract 63 0) #200) #299))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #303 = (ite (= (parity_flag ((_ extract 7 0) #299)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #304 = (ite (= ((_ extract 63 63) #299) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #305 = (ite (= #299 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #306 = (_ bv140283850318063 64) ; RIP

0x7f966110e0ef: mov rsi, rax
	 -> #307 = ((_ extract 63 0) #178) 
	 -> #308 = (_ bv140283850318066 64) ; RIP

0x7f966110e0f2: call 0x7f9661109850
	 -> #309 = (bvsub #188 (_ bv8 64)) ; Aligns stack
	 -> #310 = (_ bv140283850318071 64) ; Saved RIP
	 -> #311 = (_ bv140283850299472 64) ; RIP

0x7f9661109850: push rbp
	 -> #312 = (bvsub #309 (_ bv8 64)) ; Aligns stack
	 -> #313 = #120 
	 -> #314 = (_ bv140283850299473 64) ; RIP

0x7f9661109851: mov rbp, rsp
	 -> #315 = ((_ extract 63 0) #312) 
	 -> #316 = (_ bv140283850299476 64) ; RIP

0x7f9661109854: push r15
	 -> #317 = (bvsub #312 (_ bv8 64)) ; Aligns stack
	 -> #318 = (_ bv0 64) 
	 -> #319 = (_ bv140283850299478 64) ; RIP

0x7f9661109856: mov r15d, r9d
	 -> #320 = ((_ extract 31 0) #297) 
	 -> #321 = (_ bv140283850299481 64) ; RIP

0x7f9661109859: push r14
	 -> #322 = (bvsub #317 (_ bv8 64)) ; Aligns stack
	 -> #323 = (_ bv0 64) 
	 -> #324 = (_ bv140283850299483 64) ; RIP

0x7f966110985b: mov r14, rsi
	 -> #325 = ((_ extract 63 0) #307) 
	 -> #326 = (_ bv140283850299486 64) ; RIP

0x7f966110985e: push r13
	 -> #327 = (bvsub #322 (_ bv8 64)) ; Aligns stack
	 -> #328 = (_ bv140736711787392 64) 
	 -> #329 = (_ bv140283850299488 64) ; RIP

0x7f9661109860: mov r13, rdx
	 -> #330 = ((_ extract 63 0) #274) 
	 -> #331 = (_ bv140283850299491 64) ; RIP

0x7f9661109863: push r12
	 -> #332 = (bvsub #327 (_ bv8 64)) ; Aligns stack
	 -> #333 = #285 
	 -> #334 = (_ bv140283850299493 64) ; RIP

0x7f9661109865: push rbx
	 -> #335 = (bvsub #332 (_ bv8 64)) ; Aligns stack
	 -> #336 = #218 
	 -> #337 = (_ bv140283850299494 64) ; RIP

0x7f9661109866: mov rbx, r8
	 -> #338 = (_ bv140283489131424 64) 
	 -> #339 = (_ bv140283850299497 64) ; RIP

0x7f9661109869: sub rsp, 0xf8
	 -> #340 = (bvsub ((_ extract 63 0) #335) (_ bv248 64)) 
	 -> #341 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #340 (bvxor ((_ extract 63 0) #335) (_ bv248 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #342 = (ite (bvult ((_ extract 63 0) #335) (_ bv248 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #343 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #335) (_ bv248 64)) (bvxor ((_ extract 63 0) #335) #340))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #344 = (ite (= (parity_flag ((_ extract 7 0) #340)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #345 = (ite (= ((_ extract 63 63) #340) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #346 = (ite (= #340 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #347 = (_ bv140283850299504 64) ; RIP

0x7f9661109870: movzx eax, byte ptr [rdi]
	 -> #348 = ((_ zero_extend 24) (_ bv112 8)) 
	 -> #349 = (_ bv140283850299507 64) ; RIP

0x7f9661109873: mov qword ptr [rbp-0xa8], rdi
	 -> #350 = ((_ extract 63 0) #299) 
	 -> #351 = (_ bv140283850299514 64) ; RIP

0x7f966110987a: mov qword ptr [rbp-0xc8], rcx
	 -> #352 = ((_ extract 63 0) #291) 
	 -> #353 = (_ bv140283850299521 64) ; RIP

0x7f9661109881: test al, al
	 -> #354 = (bvand ((_ extract 7 0) #348) ((_ extract 7 0) #348)) 
	 -> #355 = (_ bv0 1) ; Clears carry flag
	 -> #356 = (_ bv0 1) ; Clears overflow flag
	 -> #357 = (ite (= (parity_flag ((_ extract 7 0) #354)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #358 = (ite (= ((_ extract 7 7) #354) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #359 = (ite (= #354 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #360 = (_ bv140283850299523 64) ; RIP

0x7f9661109883: jz 0x7f9661109b10

0x7f9661109889: mov rdx, rdi
	 -> #361 = ((_ extract 63 0) #299) 
	 -> #362 = (_ bv140283850299532 64) ; RIP

0x7f966110988c: mov r12d, 0x1505
	 -> #363 = (_ bv5381 32) 
	 -> #364 = (_ bv140283850299538 64) ; RIP

0x7f9661109892: nop word ptr [rax+rax*1], ax

0x7f9661109898: mov rcx, r12
	 -> #365 = ((_ extract 63 0) #363) 
	 -> #366 = (_ bv140283850299547 64) ; RIP

0x7f966110989b: add rdx, 0x1
	 -> #367 = (bvadd ((_ extract 63 0) #361) (_ bv1 64)) 
	 -> #368 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #367 (bvxor ((_ extract 63 0) #361) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #369 = (ite (bvult #367 ((_ extract 63 0) #361)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #370 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #361) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #361) #367))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #371 = (ite (= (parity_flag ((_ extract 7 0) #367)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #372 = (ite (= ((_ extract 63 63) #367) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #373 = (ite (= #367 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #374 = (_ bv140283850299551 64) ; RIP

0x7f966110989f: shl rcx, 0x5

0x7f96611098a3: add r12, rcx
	 -> #375 = (bvadd ((_ extract 63 0) #363) ((_ extract 63 0) #365)) 
	 -> #376 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #375 (bvxor ((_ extract 63 0) #363) ((_ extract 63 0) #365))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #377 = (ite (bvult #375 ((_ extract 63 0) #363)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #378 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #363) (bvnot ((_ extract 63 0) #365))) (bvxor ((_ extract 63 0) #363) #375))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #379 = (ite (= (parity_flag ((_ extract 7 0) #375)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #380 = (ite (= ((_ extract 63 63) #375) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #381 = (ite (= #375 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #382 = (_ bv140283850299558 64) ; RIP

0x7f96611098a6: add r12, rax
	 -> #383 = (bvadd ((_ extract 63 0) #375) ((_ extract 63 0) #348)) 
	 -> #384 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #383 (bvxor ((_ extract 63 0) #375) ((_ extract 63 0) #348))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #385 = (ite (bvult #383 ((_ extract 63 0) #375)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #386 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #375) (bvnot ((_ extract 63 0) #348))) (bvxor ((_ extract 63 0) #375) #383))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #387 = (ite (= (parity_flag ((_ extract 7 0) #383)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #388 = (ite (= ((_ extract 63 63) #383) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #389 = (ite (= #383 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #390 = (_ bv140283850299561 64) ; RIP

0x7f96611098a9: movzx eax, byte ptr [rdx]
	 -> #391 = ((_ zero_extend 24) (_ bv117 8)) 
	 -> #392 = (_ bv140283850299564 64) ; RIP

0x7f96611098ac: test al, al
	 -> #393 = (bvand ((_ extract 7 0) #391) ((_ extract 7 0) #391)) 
	 -> #394 = (_ bv0 1) ; Clears carry flag
	 -> #395 = (_ bv0 1) ; Clears overflow flag
	 -> #396 = (ite (= (parity_flag ((_ extract 7 0) #393)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #397 = (ite (= ((_ extract 7 7) #393) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #398 = (ite (= #393 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #399 = (_ bv140283850299566 64) ; RIP

0x7f9661109898: mov rcx, r12
	 -> #400 = ((_ extract 63 0) #383) 
	 -> #401 = (_ bv140283850299547 64) ; RIP

0x7f966110989b: add rdx, 0x1
	 -> #402 = (bvadd ((_ extract 63 0) #367) (_ bv1 64)) 
	 -> #403 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #402 (bvxor ((_ extract 63 0) #367) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #404 = (ite (bvult #402 ((_ extract 63 0) #367)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #405 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #367) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #367) #402))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #406 = (ite (= (parity_flag ((_ extract 7 0) #402)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #407 = (ite (= ((_ extract 63 63) #402) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #408 = (ite (= #402 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #409 = (_ bv140283850299551 64) ; RIP

0x7f966110989f: shl rcx, 0x5

0x7f96611098a3: add r12, rcx
	 -> #410 = (bvadd ((_ extract 63 0) #383) ((_ extract 63 0) #400)) 
	 -> #411 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #410 (bvxor ((_ extract 63 0) #383) ((_ extract 63 0) #400))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #412 = (ite (bvult #410 ((_ extract 63 0) #383)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #413 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #383) (bvnot ((_ extract 63 0) #400))) (bvxor ((_ extract 63 0) #383) #410))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #414 = (ite (= (parity_flag ((_ extract 7 0) #410)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #415 = (ite (= ((_ extract 63 63) #410) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #416 = (ite (= #410 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #417 = (_ bv140283850299558 64) ; RIP

0x7f96611098a6: add r12, rax
	 -> #418 = (bvadd ((_ extract 63 0) #410) ((_ extract 63 0) #391)) 
	 -> #419 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #418 (bvxor ((_ extract 63 0) #410) ((_ extract 63 0) #391))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #420 = (ite (bvult #418 ((_ extract 63 0) #410)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #421 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #410) (bvnot ((_ extract 63 0) #391))) (bvxor ((_ extract 63 0) #410) #418))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #422 = (ite (= (parity_flag ((_ extract 7 0) #418)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #423 = (ite (= ((_ extract 63 63) #418) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #424 = (ite (= #418 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #425 = (_ bv140283850299561 64) ; RIP

0x7f96611098a9: movzx eax, byte ptr [rdx]
	 -> #426 = ((_ zero_extend 24) (_ bv116 8)) 
	 -> #427 = (_ bv140283850299564 64) ; RIP

0x7f96611098ac: test al, al
	 -> #428 = (bvand ((_ extract 7 0) #426) ((_ extract 7 0) #426)) 
	 -> #429 = (_ bv0 1) ; Clears carry flag
	 -> #430 = (_ bv0 1) ; Clears overflow flag
	 -> #431 = (ite (= (parity_flag ((_ extract 7 0) #428)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #432 = (ite (= ((_ extract 7 7) #428) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #433 = (ite (= #428 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #434 = (_ bv140283850299566 64) ; RIP

0x7f9661109898: mov rcx, r12
	 -> #435 = ((_ extract 63 0) #418) 
	 -> #436 = (_ bv140283850299547 64) ; RIP

0x7f966110989b: add rdx, 0x1
	 -> #437 = (bvadd ((_ extract 63 0) #402) (_ bv1 64)) 
	 -> #438 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #437 (bvxor ((_ extract 63 0) #402) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #439 = (ite (bvult #437 ((_ extract 63 0) #402)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #440 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #402) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #402) #437))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #441 = (ite (= (parity_flag ((_ extract 7 0) #437)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #442 = (ite (= ((_ extract 63 63) #437) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #443 = (ite (= #437 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #444 = (_ bv140283850299551 64) ; RIP

0x7f966110989f: shl rcx, 0x5

0x7f96611098a3: add r12, rcx
	 -> #445 = (bvadd ((_ extract 63 0) #418) ((_ extract 63 0) #435)) 
	 -> #446 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #445 (bvxor ((_ extract 63 0) #418) ((_ extract 63 0) #435))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #447 = (ite (bvult #445 ((_ extract 63 0) #418)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #448 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #418) (bvnot ((_ extract 63 0) #435))) (bvxor ((_ extract 63 0) #418) #445))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #449 = (ite (= (parity_flag ((_ extract 7 0) #445)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #450 = (ite (= ((_ extract 63 63) #445) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #451 = (ite (= #445 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #452 = (_ bv140283850299558 64) ; RIP

0x7f96611098a6: add r12, rax
	 -> #453 = (bvadd ((_ extract 63 0) #445) ((_ extract 63 0) #426)) 
	 -> #454 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #453 (bvxor ((_ extract 63 0) #445) ((_ extract 63 0) #426))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #455 = (ite (bvult #453 ((_ extract 63 0) #445)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #456 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #445) (bvnot ((_ extract 63 0) #426))) (bvxor ((_ extract 63 0) #445) #453))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #457 = (ite (= (parity_flag ((_ extract 7 0) #453)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #458 = (ite (= ((_ extract 63 63) #453) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #459 = (ite (= #453 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #460 = (_ bv140283850299561 64) ; RIP

0x7f96611098a9: movzx eax, byte ptr [rdx]
	 -> #461 = ((_ zero_extend 24) (_ bv115 8)) 
	 -> #462 = (_ bv140283850299564 64) ; RIP

0x7f96611098ac: test al, al
	 -> #463 = (bvand ((_ extract 7 0) #461) ((_ extract 7 0) #461)) 
	 -> #464 = (_ bv0 1) ; Clears carry flag
	 -> #465 = (_ bv0 1) ; Clears overflow flag
	 -> #466 = (ite (= (parity_flag ((_ extract 7 0) #463)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #467 = (ite (= ((_ extract 7 7) #463) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #468 = (ite (= #463 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #469 = (_ bv140283850299566 64) ; RIP

0x7f9661109898: mov rcx, r12
	 -> #470 = ((_ extract 63 0) #453) 
	 -> #471 = (_ bv140283850299547 64) ; RIP

0x7f966110989b: add rdx, 0x1
	 -> #472 = (bvadd ((_ extract 63 0) #437) (_ bv1 64)) 
	 -> #473 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #472 (bvxor ((_ extract 63 0) #437) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #474 = (ite (bvult #472 ((_ extract 63 0) #437)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #475 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #437) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #437) #472))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #476 = (ite (= (parity_flag ((_ extract 7 0) #472)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #477 = (ite (= ((_ extract 63 63) #472) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #478 = (ite (= #472 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #479 = (_ bv140283850299551 64) ; RIP

0x7f966110989f: shl rcx, 0x5

0x7f96611098a3: add r12, rcx
	 -> #480 = (bvadd ((_ extract 63 0) #453) ((_ extract 63 0) #470)) 
	 -> #481 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #480 (bvxor ((_ extract 63 0) #453) ((_ extract 63 0) #470))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #482 = (ite (bvult #480 ((_ extract 63 0) #453)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #483 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #453) (bvnot ((_ extract 63 0) #470))) (bvxor ((_ extract 63 0) #453) #480))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #484 = (ite (= (parity_flag ((_ extract 7 0) #480)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #485 = (ite (= ((_ extract 63 63) #480) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #486 = (ite (= #480 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #487 = (_ bv140283850299558 64) ; RIP

0x7f96611098a6: add r12, rax
	 -> #488 = (bvadd ((_ extract 63 0) #480) ((_ extract 63 0) #461)) 
	 -> #489 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #488 (bvxor ((_ extract 63 0) #480) ((_ extract 63 0) #461))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #490 = (ite (bvult #488 ((_ extract 63 0) #480)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #491 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #480) (bvnot ((_ extract 63 0) #461))) (bvxor ((_ extract 63 0) #480) #488))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #492 = (ite (= (parity_flag ((_ extract 7 0) #488)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #493 = (ite (= ((_ extract 63 63) #488) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #494 = (ite (= #488 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #495 = (_ bv140283850299561 64) ; RIP

0x7f96611098a9: movzx eax, byte ptr [rdx]
	 -> #496 = ((_ zero_extend 24) (_ bv0 8)) 
	 -> #497 = (_ bv140283850299564 64) ; RIP

0x7f96611098ac: test al, al
	 -> #498 = (bvand ((_ extract 7 0) #496) ((_ extract 7 0) #496)) 
	 -> #499 = (_ bv0 1) ; Clears carry flag
	 -> #500 = (_ bv0 1) ; Clears overflow flag
	 -> #501 = (ite (= (parity_flag ((_ extract 7 0) #498)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #502 = (ite (= ((_ extract 7 7) #498) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #503 = (ite (= #498 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #504 = (_ bv140283850299566 64) ; RIP

0x7f96611098ae: jnz 0x7f9661109898

0x7f96611098b0: mov eax, r12d
	 -> #505 = ((_ extract 31 0) #488) 
	 -> #506 = (_ bv140283850299571 64) ; RIP

0x7f96611098b3: mov qword ptr [rbp-0xb0], rax
	 -> #507 = ((_ extract 63 0) #505) 
	 -> #508 = (_ bv140283850299578 64) ; RIP

0x7f96611098ba: mov eax, 0xffffffff
	 -> #509 = (_ bv4294967295 32) 
	 -> #510 = (_ bv140283850299583 64) ; RIP

0x7f96611098bf: add qword ptr [rip+0x2180b1], 0x1
	 -> #511 = (bvadd (_ bv93 64) (_ bv1 64)) 
	 -> #512 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #511 (bvxor (_ bv93 64) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #513 = (ite (bvult #511 (_ bv93 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #514 = (ite (= ((_ extract 63 63) (bvand (bvxor (_ bv93 64) (bvnot (_ bv1 64))) (bvxor (_ bv93 64) #511))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #515 = (ite (= (parity_flag ((_ extract 7 0) #511)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #516 = (ite (= ((_ extract 63 63) #511) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #517 = (ite (= #511 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #518 = (_ bv140283850299591 64) ; RIP

0x7f96611098c7: test rbx, rbx
	 -> #519 = (bvand ((_ extract 63 0) #338) ((_ extract 63 0) #338)) 
	 -> #520 = (_ bv0 1) ; Clears carry flag
	 -> #521 = (_ bv0 1) ; Clears overflow flag
	 -> #522 = (ite (= (parity_flag ((_ extract 7 0) #519)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #523 = (ite (= ((_ extract 63 63) #519) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #524 = (ite (= #519 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #525 = (_ bv140283850299594 64) ; RIP

0x7f96611098ca: mov qword ptr [rbp-0xa0], rax
	 -> #526 = ((_ extract 63 0) #509) 
	 -> #527 = (_ bv140283850299601 64) ; RIP

0x7f96611098d1: mov qword ptr [rbp-0x90], 0x0
	 -> #528 = (_ bv0 64) 
	 -> #529 = (_ bv140283850299612 64) ; RIP

0x7f96611098dc: mov qword ptr [rbp-0x88], 0x0
	 -> #530 = (_ bv0 64) 
	 -> #531 = (_ bv140283850299623 64) ; RIP

0x7f96611098e7: jz 0x7f96611098f6

0x7f96611098e9: test dword ptr [rbp+0x10], 0xfffffffa
	 -> #532 = (bvand #293 (_ bv18446744073709551610 32)) 
	 -> #533 = (_ bv0 1) ; Clears carry flag
	 -> #534 = (_ bv0 1) ; Clears overflow flag
	 -> #535 = (ite (= (parity_flag ((_ extract 7 0) #532)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #536 = (ite (= ((_ extract 31 31) #532) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #537 = (ite (= #532 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #538 = (_ bv140283850299632 64) ; RIP

0x7f96611098f0: jnz 0x7f966110a73c

0x7f96611098f6: cmp qword ptr [rbp+0x18], 0x0
	 -> #539 = (bvsub #295 ((_ sign_extend 0) (_ bv0 64))) 
	 -> #540 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #539 (bvxor #295 ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #541 = (ite (bvult #295 ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #542 = (ite (= ((_ extract 63 63) (bvand (bvxor #295 ((_ sign_extend 0) (_ bv0 64))) (bvxor #295 #539))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #543 = (ite (= (parity_flag ((_ extract 7 0) #539)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #544 = (ite (= ((_ extract 63 63) #539) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #545 = (ite (= #539 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #546 = (_ bv140283850299643 64) ; RIP

0x7f96611098fb: mov rax, qword ptr [rbp-0xc8]
	 -> #547 = ((_ extract 63 0) #352) 
	 -> #548 = (_ bv140283850299650 64) ; RIP

0x7f9661109902: mov r9, qword ptr [rax]
	 -> #549 = (_ bv140283852497920 64) 
	 -> #550 = (_ bv140283850299653 64) ; RIP

0x7f9661109905: jnz 0x7f9661109c90

0x7f966110990b: test r9, r9
	 -> #551 = (bvand ((_ extract 63 0) #549) ((_ extract 63 0) #549)) 
	 -> #552 = (_ bv0 1) ; Clears carry flag
	 -> #553 = (_ bv0 1) ; Clears overflow flag
	 -> #554 = (ite (= (parity_flag ((_ extract 7 0) #551)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #555 = (ite (= ((_ extract 63 63) #551) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #556 = (ite (= #551 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #557 = (_ bv140283850299662 64) ; RIP

0x7f966110990e: mov qword ptr [rbp-0xd0], 0x0
	 -> #558 = (_ bv0 64) 
	 -> #559 = (_ bv140283850299673 64) ; RIP

0x7f9661109919: jz 0x7f966110a0e1

0x7f966110991f: lea rdx, ptr [rbp-0x90]

0x7f9661109926: lea rsi, ptr [rbp-0xa0]

0x7f966110992d: mov rax, qword ptr [rbp-0xd0]
	 -> #560 = ((_ extract 63 0) #558) 
	 -> #561 = (_ bv140283850299700 64) ; RIP

0x7f9661109934: mov r12, qword ptr [rbp-0xc8]
	 -> #562 = ((_ extract 63 0) #352) 
	 -> #563 = (_ bv140283850299707 64) ; RIP

0x7f966110993b: mov qword ptr [rbp-0xc0], rdx
	 -> #564 = ((_ extract 63 0) #472) 
	 -> #565 = (_ bv140283850299714 64) ; RIP

0x7f9661109942: mov qword ptr [rbp-0xb8], rsi
	 -> #566 = ((_ extract 63 0) #307) 
	 -> #567 = (_ bv140283850299721 64) ; RIP

0x7f9661109949: jmp 0x7f9661109965

0x7f9661109965: mov rdi, qword ptr [rbp+0x18]
	 -> #568 = ((_ extract 63 0) #539) 
	 -> #569 = (_ bv140283850299753 64) ; RIP

0x7f9661109969: mov esi, dword ptr [rbp+0x10]
	 -> #570 = ((_ extract 31 0) #293) 
	 -> #571 = (_ bv140283850299756 64) ; RIP

0x7f966110996c: mov r8, qword ptr [rbp-0xc0]
	 -> #572 = ((_ extract 63 0) #564) 
	 -> #573 = (_ bv140283850299763 64) ; RIP

0x7f9661109973: mov rcx, qword ptr [r13]
	 -> #574 = ((_ extract 63 0) #214) 
	 -> #575 = (_ bv140283850299767 64) ; RIP

0x7f9661109977: mov rdx, qword ptr [rbp-0xb8]
	 -> #576 = ((_ extract 63 0) #566) 
	 -> #577 = (_ bv140283850299774 64) ; RIP

0x7f966110997e: mov qword ptr [rsp+0x28], r14
	 -> #578 = ((_ extract 63 0) #325) 
	 -> #579 = (_ bv140283850299779 64) ; RIP

0x7f9661109983: mov qword ptr [rsp+0x18], rdi
	 -> #580 = ((_ extract 63 0) #568) 
	 -> #581 = (_ bv140283850299784 64) ; RIP

0x7f9661109988: mov dword ptr [rsp+0x10], esi
	 -> #582 = ((_ extract 31 0) #570) 
	 -> #583 = (_ bv140283850299788 64) ; RIP

0x7f966110998c: mov rdi, qword ptr [rbp-0xa8]
	 -> #584 = ((_ extract 63 0) #350) 
	 -> #585 = (_ bv140283850299795 64) ; RIP

0x7f9661109993: mov rsi, qword ptr [rbp-0xb0]
	 -> #586 = ((_ extract 63 0) #507) 
	 -> #587 = (_ bv140283850299802 64) ; RIP

0x7f966110999a: mov dword ptr [rsp+0x20], r15d
	 -> #588 = ((_ extract 31 0) #320) 
	 -> #589 = (_ bv140283850299807 64) ; RIP

0x7f966110999f: mov qword ptr [rsp+0x8], rbx
	 -> #590 = ((_ extract 63 0) #338) 
	 -> #591 = (_ bv140283850299812 64) ; RIP

0x7f96611099a4: mov qword ptr [rsp], rax
	 -> #592 = ((_ extract 63 0) #560) 
	 -> #593 = (_ bv140283850299816 64) ; RIP

0x7f96611099a8: call 0x7f9661108dd0
	 -> #594 = (bvsub #340 (_ bv8 64)) ; Aligns stack
	 -> #595 = (_ bv140283850299821 64) ; Saved RIP
	 -> #596 = (_ bv140283850296784 64) ; RIP

0x7f9661108dd0: push r15
	 -> #597 = (bvsub #594 (_ bv8 64)) ; Aligns stack
	 -> #598 = #320 
	 -> #599 = (_ bv140283850296786 64) ; RIP

0x7f9661108dd2: push r14
	 -> #600 = (bvsub #597 (_ bv8 64)) ; Aligns stack
	 -> #601 = #325 
	 -> #602 = (_ bv140283850296788 64) ; RIP

0x7f9661108dd4: push r13
	 -> #603 = (bvsub #600 (_ bv8 64)) ; Aligns stack
	 -> #604 = #330 
	 -> #605 = (_ bv140283850296790 64) ; RIP

0x7f9661108dd6: push r12
	 -> #606 = (bvsub #603 (_ bv8 64)) ; Aligns stack
	 -> #607 = #562 
	 -> #608 = (_ bv140283850296792 64) ; RIP

0x7f9661108dd8: mov r12, rsi
	 -> #609 = ((_ extract 63 0) #586) 
	 -> #610 = (_ bv140283850296795 64) ; RIP

0x7f9661108ddb: push rbp
	 -> #611 = (bvsub #606 (_ bv8 64)) ; Aligns stack
	 -> #612 = #315 
	 -> #613 = (_ bv140283850296796 64) ; RIP

0x7f9661108ddc: push rbx
	 -> #614 = (bvsub #611 (_ bv8 64)) ; Aligns stack
	 -> #615 = #338 
	 -> #616 = (_ bv140283850296797 64) ; RIP

0x7f9661108ddd: sub rsp, 0xa8
	 -> #617 = (bvsub ((_ extract 63 0) #614) (_ bv168 64)) 
	 -> #618 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #617 (bvxor ((_ extract 63 0) #614) (_ bv168 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #619 = (ite (bvult ((_ extract 63 0) #614) (_ bv168 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #620 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #614) (_ bv168 64)) (bvxor ((_ extract 63 0) #614) #617))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #621 = (ite (= (parity_flag ((_ extract 7 0) #617)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #622 = (ite (= ((_ extract 63 63) #617) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #623 = (ite (= #617 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #624 = (_ bv140283850296804 64) ; RIP

0x7f9661108de4: mov r13d, dword ptr [r9+0x8]
	 -> #625 = (_ bv3 32) 
	 -> #626 = (_ bv140283850296808 64) ; RIP

0x7f9661108de8: mov qword ptr [rsp+0x38], rdi
	 -> #627 = ((_ extract 63 0) #584) 
	 -> #628 = (_ bv140283850296813 64) ; RIP

0x7f9661108ded: mov qword ptr [rsp+0x60], rdx
	 -> #629 = ((_ extract 63 0) #576) 
	 -> #630 = (_ bv140283850296818 64) ; RIP

0x7f9661108df2: mov qword ptr [rsp+0x58], rcx
	 -> #631 = ((_ extract 63 0) #574) 
	 -> #632 = (_ bv140283850296823 64) ; RIP

0x7f9661108df7: mov qword ptr [rsp+0x40], r8
	 -> #633 = ((_ extract 63 0) #572) 
	 -> #634 = (_ bv140283850296828 64) ; RIP

0x7f9661108dfc: mov rbp, qword ptr [rsp+0xe0]
	 -> #635 = ((_ extract 63 0) #592) 
	 -> #636 = (_ bv140283850296836 64) ; RIP

0x7f9661108e04: mov r10, qword ptr [rsp+0xf8]
	 -> #637 = ((_ extract 63 0) #580) 
	 -> #638 = (_ bv140283850296844 64) ; RIP

0x7f9661108e0c: lea rax, ptr [rsp+0x94]

0x7f9661108e14: mov r11d, dword ptr [rsp+0x100]
	 -> #639 = ((_ extract 31 0) #588) 
	 -> #640 = (_ bv140283850296860 64) ; RIP

0x7f9661108e1c: mov r14, qword ptr [r9]
	 -> #641 = (_ bv140283489131352 64) 
	 -> #642 = (_ bv140283850296863 64) ; RIP

0x7f9661108e1f: mov r15, rsi
	 -> #643 = ((_ extract 63 0) #586) 
	 -> #644 = (_ bv140283850296866 64) ; RIP

0x7f9661108e22: mov qword ptr [rsp+0x68], rax
	 -> #645 = ((_ extract 63 0) #560) 
	 -> #646 = (_ bv140283850296871 64) ; RIP

0x7f9661108e27: lea rax, ptr [rsp+0x98]

0x7f9661108e2f: shr r15, 0x6

0x7f9661108e33: and r11d, 0x2
	 -> #647 = (bvand ((_ extract 31 0) #639) (_ bv2 32)) 
	 -> #648 = (_ bv0 1) ; Clears carry flag
	 -> #649 = (_ bv0 1) ; Clears overflow flag
	 -> #650 = (ite (= (parity_flag ((_ extract 7 0) #647)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #651 = (ite (= ((_ extract 31 31) #647) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #652 = (ite (= #647 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #653 = (_ bv140283850296887 64) ; RIP

0x7f9661108e37: mov qword ptr [rsp+0x70], rax
	 -> #654 = ((_ extract 63 0) #560) 
	 -> #655 = (_ bv140283850296892 64) ; RIP

0x7f9661108e3c: mov eax, esi
	 -> #656 = ((_ extract 31 0) #586) 
	 -> #657 = (_ bv140283850296894 64) ; RIP

0x7f9661108e3e: and eax, 0x3f
	 -> #658 = (bvand ((_ extract 31 0) #656) (_ bv63 32)) 
	 -> #659 = (_ bv0 1) ; Clears carry flag
	 -> #660 = (_ bv0 1) ; Clears overflow flag
	 -> #661 = (ite (= (parity_flag ((_ extract 7 0) #658)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #662 = (ite (= ((_ extract 31 31) #658) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #663 = (ite (= #658 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #664 = (_ bv140283850296897 64) ; RIP

0x7f9661108e41: mov dword ptr [rsp+0x30], eax
	 -> #665 = ((_ extract 31 0) #658) 
	 -> #666 = (_ bv140283850296901 64) ; RIP

0x7f9661108e45: nop dword ptr [rax], eax

0x7f9661108e48: mov rax, qword ptr [r14+rbp*8]
	 -> #667 = (_ bv140283852497224 64) 
	 -> #668 = (_ bv140283850296908 64) ; RIP

0x7f9661108e4c: mov rbx, qword ptr [rax+0x28]
	 -> #669 = (_ bv140283852497224 64) 
	 -> #670 = (_ bv140283850296912 64) ; RIP

0x7f9661108e50: cmp rbx, r10
	 -> #671 = (bvsub ((_ extract 63 0) #669) ((_ extract 63 0) #637)) 
	 -> #672 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #671 (bvxor ((_ extract 63 0) #669) ((_ extract 63 0) #637))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #673 = (ite (bvult ((_ extract 63 0) #669) ((_ extract 63 0) #637)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #674 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #669) ((_ extract 63 0) #637)) (bvxor ((_ extract 63 0) #669) #671))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #675 = (ite (= (parity_flag ((_ extract 7 0) #671)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #676 = (ite (= ((_ extract 63 63) #671) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #677 = (ite (= #671 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #678 = (_ bv140283850296915 64) ; RIP

0x7f9661108e53: jz 0x7f9661108f48

0x7f9661108e59: test r11d, r11d
	 -> #679 = (bvand ((_ extract 31 0) #647) ((_ extract 31 0) #647)) 
	 -> #680 = (_ bv0 1) ; Clears carry flag
	 -> #681 = (_ bv0 1) ; Clears overflow flag
	 -> #682 = (ite (= (parity_flag ((_ extract 7 0) #679)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #683 = (ite (= ((_ extract 31 31) #679) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #684 = (ite (= #679 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #685 = (_ bv140283850296924 64) ; RIP

0x7f9661108e6b: test byte ptr [rbx+0x315], 0x20
	 -> #686 = (bvand (_ bv0 8) (_ bv32 8)) 
	 -> #687 = (_ bv0 1) ; Clears carry flag
	 -> #688 = (_ bv0 1) ; Clears overflow flag
	 -> #689 = (ite (= (parity_flag ((_ extract 7 0) #686)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #690 = (ite (= ((_ extract 7 7) #686) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #691 = (ite (= #686 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #692 = (_ bv140283850296946 64) ; RIP

0x7f9661108e72: jnz 0x7f9661108f48

0x7f9661108e78: test byte ptr [rip+0x217de1], 0x8
	 -> #693 = (bvand (_ bv0 8) (_ bv8 8)) 
	 -> #694 = (_ bv0 1) ; Clears carry flag
	 -> #695 = (_ bv0 1) ; Clears overflow flag
	 -> #696 = (ite (= (parity_flag ((_ extract 7 0) #693)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #697 = (ite (= ((_ extract 7 7) #693) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #698 = (ite (= #693 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #699 = (_ bv140283850296959 64) ; RIP

0x7f9661108e7f: jnz 0x7f9661108f72

0x7f9661108e85: mov edx, dword ptr [rbx+0x2ec]
	 -> #700 = (_ bv1 32) 
	 -> #701 = (_ bv140283850296971 64) ; RIP

0x7f9661108e8b: test edx, edx
	 -> #702 = (bvand ((_ extract 31 0) #700) ((_ extract 31 0) #700)) 
	 -> #703 = (_ bv0 1) ; Clears carry flag
	 -> #704 = (_ bv0 1) ; Clears overflow flag
	 -> #705 = (ite (= (parity_flag ((_ extract 7 0) #702)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #706 = (ite (= ((_ extract 31 31) #702) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #707 = (ite (= #702 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #708 = (_ bv140283850296973 64) ; RIP

0x7f9661108e8d: jz 0x7f9661108f48

0x7f9661108e93: mov rax, qword ptr [rbx+0x70]
	 -> #709 = (_ bv6295224 64) 
	 -> #710 = (_ bv140283850296983 64) ; RIP

0x7f9661108e97: mov dword ptr [rsp+0x94], 0x0
	 -> #711 = (_ bv0 32) 
	 -> #712 = (_ bv140283850296994 64) ; RIP

0x7f9661108ea2: mov qword ptr [rsp+0x98], 0x0
	 -> #713 = (_ bv0 64) 
	 -> #714 = (_ bv140283850297006 64) ; RIP

0x7f9661108eae: mov rax, qword ptr [rax+0x8]
	 -> #715 = (_ bv4195056 64) 
	 -> #716 = (_ bv140283850297010 64) ; RIP

0x7f9661108eb2: mov qword ptr [rsp+0x50], rax
	 -> #717 = ((_ extract 63 0) #715) 
	 -> #718 = (_ bv140283850297015 64) ; RIP

0x7f9661108eb7: mov rax, qword ptr [rbx+0x68]
	 -> #719 = (_ bv6295208 64) 
	 -> #720 = (_ bv140283850297019 64) ; RIP

0x7f9661108ebb: mov rax, qword ptr [rax+0x8]
	 -> #721 = (_ bv4195152 64) 
	 -> #722 = (_ bv140283850297023 64) ; RIP

0x7f9661108ebf: mov qword ptr [rsp+0x48], rax
	 -> #723 = ((_ extract 63 0) #721) 
	 -> #724 = (_ bv140283850297028 64) ; RIP

0x7f9661108ec4: mov rax, qword ptr [rbx+0x2f8]
	 -> #725 = (_ bv4195040 64) 
	 -> #726 = (_ bv140283850297035 64) ; RIP

0x7f9661108ecb: test rax, rax
	 -> #727 = (bvand ((_ extract 63 0) #725) ((_ extract 63 0) #725)) 
	 -> #728 = (_ bv0 1) ; Clears carry flag
	 -> #729 = (_ bv0 1) ; Clears overflow flag
	 -> #730 = (ite (= (parity_flag ((_ extract 7 0) #727)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #731 = (ite (= ((_ extract 63 63) #727) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #732 = (ite (= #727 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #733 = (_ bv140283850297038 64) ; RIP

0x7f9661108ece: jz 0x7f96611090b8

0x7f9661108ed4: mov ecx, r15d
	 -> #734 = ((_ extract 31 0) #643) 
	 -> #735 = (_ bv140283850297047 64) ; RIP

0x7f9661108ed7: and ecx, dword ptr [rbx+0x2f0]
	 -> #736 = (bvand ((_ extract 31 0) #734) (_ bv0 32)) 
	 -> #737 = (_ bv0 1) ; Clears carry flag
	 -> #738 = (_ bv0 1) ; Clears overflow flag
	 -> #739 = (ite (= (parity_flag ((_ extract 7 0) #736)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #740 = (ite (= ((_ extract 31 31) #736) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #741 = (ite (= #736 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #742 = (_ bv140283850297053 64) ; RIP

0x7f9661108edd: mov rsi, qword ptr [rax+rcx*8]
	 -> #743 = (_ bv0 64) 
	 -> #744 = (_ bv140283850297057 64) ; RIP

0x7f9661108ee1: mov ecx, dword ptr [rbx+0x2f4]
	 -> #745 = (_ bv0 32) 
	 -> #746 = (_ bv140283850297063 64) ; RIP

0x7f9661108ee7: mov rax, r12
	 -> #747 = ((_ extract 63 0) #609) 
	 -> #748 = (_ bv140283850297066 64) ; RIP

0x7f9661108eea: shr rax, cl

0x7f9661108eed: mov rcx, rax
	 -> #749 = ((_ extract 63 0) #747) 
	 -> #750 = (_ bv140283850297072 64) ; RIP

0x7f9661108ef0: mov rax, rsi
	 -> #751 = ((_ extract 63 0) #743) 
	 -> #752 = (_ bv140283850297075 64) ; RIP

0x7f9661108ef3: shr rax, cl

0x7f9661108ef6: movzx ecx, byte ptr [rsp+0x30]
	 -> #753 = ((_ zero_extend 24) ((_ extract 7 0) #665)) 
	 -> #754 = (_ bv140283850297083 64) ; RIP

0x7f9661108efb: shr rsi, cl

0x7f9661108efe: and rax, rsi
	 -> #755 = (bvand ((_ extract 63 0) #751) ((_ extract 63 0) #743)) 
	 -> #756 = (_ bv0 1) ; Clears carry flag
	 -> #757 = (_ bv0 1) ; Clears overflow flag
	 -> #758 = (ite (= (parity_flag ((_ extract 7 0) #755)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #759 = (ite (= ((_ extract 63 63) #755) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #760 = (ite (= #755 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #761 = (_ bv140283850297089 64) ; RIP

0x7f9661108f01: test al, 0x1
	 -> #762 = (bvand ((_ extract 7 0) #755) (_ bv1 8)) 
	 -> #763 = (_ bv0 1) ; Clears carry flag
	 -> #764 = (_ bv0 1) ; Clears overflow flag
	 -> #765 = (ite (= (parity_flag ((_ extract 7 0) #762)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #766 = (ite (= ((_ extract 7 7) #762) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #767 = (ite (= #762 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #768 = (_ bv140283850297091 64) ; RIP

0x7f9661108f03: jnz 0x7f9661108fca

0x7f9661108f09: cmp qword ptr [rsp+0xe8], 0x0
	 -> #769 = (bvsub #590 ((_ sign_extend 0) (_ bv0 64))) 
	 -> #770 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #769 (bvxor #590 ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #771 = (ite (bvult #590 ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #772 = (ite (= ((_ extract 63 63) (bvand (bvxor #590 ((_ sign_extend 0) (_ bv0 64))) (bvxor #590 #769))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #773 = (ite (= (parity_flag ((_ extract 7 0) #769)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #774 = (ite (= ((_ extract 63 63) #769) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #775 = (ite (= #769 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #776 = (_ bv140283850297106 64) ; RIP

0x7f9661108f12: jz 0x7f9661108f48

0x7f9661108f14: mov rax, qword ptr [rsp+0xe8]
	 -> #777 = ((_ extract 63 0) #769) 
	 -> #778 = (_ bv140283850297116 64) ; RIP

0x7f9661108f1c: mov rdi, qword ptr [rax+0x10]
	 -> #779 = (_ bv4195153 64) 
	 -> #780 = (_ bv140283850297120 64) ; RIP

0x7f9661108f20: test rdi, rdi
	 -> #781 = (bvand ((_ extract 63 0) #779) ((_ extract 63 0) #779)) 
	 -> #782 = (_ bv0 1) ; Clears carry flag
	 -> #783 = (_ bv0 1) ; Clears overflow flag
	 -> #784 = (ite (= (parity_flag ((_ extract 7 0) #781)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #785 = (ite (= ((_ extract 63 63) #781) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #786 = (ite (= #781 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #787 = (_ bv140283850297123 64) ; RIP

0x7f9661108f23: jz 0x7f9661108f48

0x7f9661108f25: mov rsi, rbx
	 -> #788 = ((_ extract 63 0) #671) 
	 -> #789 = (_ bv140283850297128 64) ; RIP

0x7f9661108f28: mov dword ptr [rsp+0x50], r11d
	 -> #790 = ((_ extract 31 0) #647) 
	 -> #791 = (_ bv140283850297133 64) ; RIP

0x7f9661108f2d: mov qword ptr [rsp+0x48], r10
	 -> #792 = ((_ extract 63 0) #637) 
	 -> #793 = (_ bv140283850297138 64) ; RIP

0x7f9661108f32: call 0x7f966110fd20
	 -> #794 = (bvsub #617 (_ bv8 64)) ; Aligns stack
	 -> #795 = (_ bv140283850297143 64) ; Saved RIP
	 -> #796 = (_ bv140283850325280 64) ; RIP

0x7f966110fd20: push rbp
	 -> #797 = (bvsub #794 (_ bv8 64)) ; Aligns stack
	 -> #798 = #635 
	 -> #799 = (_ bv140283850325281 64) ; RIP

0x7f966110fd21: mov rbp, rdi
	 -> #800 = ((_ extract 63 0) #779) 
	 -> #801 = (_ bv140283850325284 64) ; RIP

0x7f966110fd24: push rbx
	 -> #802 = (bvsub #797 (_ bv8 64)) ; Aligns stack
	 -> #803 = #671 
	 -> #804 = (_ bv140283850325285 64) ; RIP

0x7f966110fd25: mov rbx, rsi
	 -> #805 = ((_ extract 63 0) #788) 
	 -> #806 = (_ bv140283850325288 64) ; RIP

0x7f966110fd28: sub rsp, 0x8
	 -> #807 = (bvsub ((_ extract 63 0) #802) (_ bv8 64)) 
	 -> #808 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #807 (bvxor ((_ extract 63 0) #802) (_ bv8 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #809 = (ite (bvult ((_ extract 63 0) #802) (_ bv8 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #810 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #802) (_ bv8 64)) (bvxor ((_ extract 63 0) #802) #807))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #811 = (ite (= (parity_flag ((_ extract 7 0) #807)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #812 = (ite (= ((_ extract 63 63) #807) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #813 = (ite (= #807 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #814 = (_ bv140283850325292 64) ; RIP

0x7f966110fd2c: mov rsi, qword ptr [rsi+0x8]
	 -> #815 = (_ bv140283852498648 64) 
	 -> #816 = (_ bv140283850325296 64) ; RIP

0x7f966110fd30: call 0x7f9661118240
	 -> #817 = (bvsub #807 (_ bv8 64)) ; Aligns stack
	 -> #818 = (_ bv140283850325301 64) ; Saved RIP
	 -> #819 = (_ bv140283850359360 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #820 = (_ bv108 8) 
	 -> #821 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #822 = (bvsub ((_ extract 7 0) #820) (_ bv0 8)) 
	 -> #823 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #822 (bvxor ((_ extract 7 0) #820) (_ bv0 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #824 = (ite (bvult ((_ extract 7 0) #820) (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #825 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #820) (_ bv0 8)) (bvxor ((_ extract 7 0) #820) #822))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #826 = (ite (= (parity_flag ((_ extract 7 0) #822)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #827 = (ite (= ((_ extract 7 7) #822) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #828 = (ite (= #822 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #829 = (_ bv140283850359364 64) ; RIP

0x7f9661118253: mov eax, 0x1
	 -> #830 = (_ bv1 32) 
	 -> #831 = (_ bv140283850359384 64) ; RIP

0x7f9661118258: mov ecx, 0xffffffff
	 -> #832 = (_ bv4294967295 32) 
	 -> #833 = (_ bv140283850359389 64) ; RIP

0x7f966111825d: cmovb eax, ecx

0x7f9661118260: ret 
	 -> #834 = #818 ; RIP
	 -> #835 = (bvadd #817 (_ bv8 64)) ; Aligns stack

0x7f966110fd35: test eax, eax
	 -> #836 = (bvand ((_ extract 31 0) #830) ((_ extract 31 0) #830)) 
	 -> #837 = (_ bv0 1) ; Clears carry flag
	 -> #838 = (_ bv0 1) ; Clears overflow flag
	 -> #839 = (ite (= (parity_flag ((_ extract 7 0) #836)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #840 = (ite (= ((_ extract 31 31) #836) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #841 = (ite (= #836 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #842 = (_ bv140283850325303 64) ; RIP

0x7f966110fd37: mov edx, 0x1
	 -> #843 = (_ bv1 32) 
	 -> #844 = (_ bv140283850325308 64) ; RIP

0x7f966110fd3c: jz 0x7f966110fd6d

0x7f966110fd3e: mov rbx, qword ptr [rbx+0x38]
	 -> #845 = (_ bv140283852498624 64) 
	 -> #846 = (_ bv140283850325314 64) ; RIP

0x7f966110fd42: test rbx, rbx
	 -> #847 = (bvand ((_ extract 63 0) #845) ((_ extract 63 0) #845)) 
	 -> #848 = (_ bv0 1) ; Clears carry flag
	 -> #849 = (_ bv0 1) ; Clears overflow flag
	 -> #850 = (ite (= (parity_flag ((_ extract 7 0) #847)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #851 = (ite (= ((_ extract 63 63) #847) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #852 = (ite (= #847 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #853 = (_ bv140283850325317 64) ; RIP

0x7f966110fd59: mov rsi, qword ptr [rbx]
	 -> #854 = (_ bv140283852498648 64) 
	 -> #855 = (_ bv140283850325340 64) ; RIP

0x7f966110fd5c: mov rdi, rbp
	 -> #856 = ((_ extract 63 0) #800) 
	 -> #857 = (_ bv140283850325343 64) ; RIP

0x7f966110fd5f: call 0x7f9661118240
	 -> #858 = (bvsub #835 (_ bv8 64)) ; Aligns stack
	 -> #859 = (_ bv140283850325348 64) ; Saved RIP
	 -> #860 = (_ bv140283850359360 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #861 = (_ bv108 8) 
	 -> #862 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #863 = (bvsub ((_ extract 7 0) #861) (_ bv0 8)) 
	 -> #864 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #863 (bvxor ((_ extract 7 0) #861) (_ bv0 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #865 = (ite (bvult ((_ extract 7 0) #861) (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #866 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #861) (_ bv0 8)) (bvxor ((_ extract 7 0) #861) #863))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #867 = (ite (= (parity_flag ((_ extract 7 0) #863)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #868 = (ite (= ((_ extract 7 7) #863) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #869 = (ite (= #863 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #870 = (_ bv140283850359364 64) ; RIP

0x7f9661118253: mov eax, 0x1
	 -> #871 = (_ bv1 32) 
	 -> #872 = (_ bv140283850359384 64) ; RIP

0x7f9661118258: mov ecx, 0xffffffff
	 -> #873 = (_ bv4294967295 32) 
	 -> #874 = (_ bv140283850359389 64) ; RIP

0x7f966111825d: cmovb eax, ecx

0x7f9661118260: ret 
	 -> #875 = #859 ; RIP
	 -> #876 = (bvadd #858 (_ bv8 64)) ; Aligns stack

0x7f966110fd64: test eax, eax
	 -> #877 = (bvand ((_ extract 31 0) #871) ((_ extract 31 0) #871)) 
	 -> #878 = (_ bv0 1) ; Clears carry flag
	 -> #879 = (_ bv0 1) ; Clears overflow flag
	 -> #880 = (ite (= (parity_flag ((_ extract 7 0) #877)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #881 = (ite (= ((_ extract 31 31) #877) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #882 = (ite (= #877 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #883 = (_ bv140283850325350 64) ; RIP

0x7f966110fd50: mov rbx, qword ptr [rbx+0x8]
	 -> #884 = (_ bv0 64) 
	 -> #885 = (_ bv140283850325332 64) ; RIP

0x7f966110fd54: test rbx, rbx
	 -> #886 = (bvand ((_ extract 63 0) #884) ((_ extract 63 0) #884)) 
	 -> #887 = (_ bv0 1) ; Clears carry flag
	 -> #888 = (_ bv0 1) ; Clears overflow flag
	 -> #889 = (ite (= (parity_flag ((_ extract 7 0) #886)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #890 = (ite (= ((_ extract 63 63) #886) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #891 = (ite (= #886 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #892 = (_ bv140283850325335 64) ; RIP

0x7f966110fd80: add rsp, 0x8
	 -> #893 = (bvadd ((_ extract 63 0) #876) (_ bv8 64)) 
	 -> #894 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #893 (bvxor ((_ extract 63 0) #876) (_ bv8 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #895 = (ite (bvult #893 ((_ extract 63 0) #876)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #896 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #876) (bvnot (_ bv8 64))) (bvxor ((_ extract 63 0) #876) #893))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #897 = (ite (= (parity_flag ((_ extract 7 0) #893)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #898 = (ite (= ((_ extract 63 63) #893) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #899 = (ite (= #893 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #900 = (_ bv140283850325380 64) ; RIP

0x7f966110fd84: xor edx, edx
	 -> #901 = (bvxor ((_ extract 31 0) #843) ((_ extract 31 0) #843)) 
	 -> #902 = (_ bv0 1) ; Clears carry flag
	 -> #903 = (_ bv0 1) ; Clears overflow flag
	 -> #904 = (ite (= (parity_flag ((_ extract 7 0) #901)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #905 = (ite (= ((_ extract 31 31) #901) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #906 = (ite (= #901 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #907 = (_ bv140283850325382 64) ; RIP

0x7f966110fd86: pop rbx
	 -> #908 = #803 
	 -> #909 = (bvadd #893 (_ bv8 64)) ; Aligns stack
	 -> #910 = (_ bv140283850325383 64) ; RIP

0x7f966110fd87: mov eax, edx
	 -> #911 = ((_ extract 31 0) #901) 
	 -> #912 = (_ bv140283850325385 64) ; RIP

0x7f966110fd89: pop rbp
	 -> #913 = #798 
	 -> #914 = (bvadd #909 (_ bv8 64)) ; Aligns stack
	 -> #915 = (_ bv140283850325386 64) ; RIP

0x7f966110fd8a: ret 
	 -> #916 = #795 ; RIP
	 -> #917 = (bvadd #914 (_ bv8 64)) ; Aligns stack

0x7f9661108f37: test eax, eax
	 -> #918 = (bvand ((_ extract 31 0) #911) ((_ extract 31 0) #911)) 
	 -> #919 = (_ bv0 1) ; Clears carry flag
	 -> #920 = (_ bv0 1) ; Clears overflow flag
	 -> #921 = (ite (= (parity_flag ((_ extract 7 0) #918)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #922 = (ite (= ((_ extract 31 31) #918) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #923 = (ite (= #918 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #924 = (_ bv140283850297145 64) ; RIP

0x7f9661108f39: mov r10, qword ptr [rsp+0x48]
	 -> #925 = ((_ extract 63 0) #792) 
	 -> #926 = (_ bv140283850297150 64) ; RIP

0x7f9661108f3e: mov r11d, dword ptr [rsp+0x50]
	 -> #927 = ((_ extract 31 0) #790) 
	 -> #928 = (_ bv140283850297155 64) ; RIP

0x7f9661108f43: jnz 0x7f9661108fc3

0x7f9661108f45: nop dword ptr [rax], eax

0x7f9661108f48: add rbp, 0x1
	 -> #929 = (bvadd ((_ extract 63 0) #913) (_ bv1 64)) 
	 -> #930 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #929 (bvxor ((_ extract 63 0) #913) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #931 = (ite (bvult #929 ((_ extract 63 0) #913)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #932 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #913) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #913) #929))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #933 = (ite (= (parity_flag ((_ extract 7 0) #929)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #934 = (ite (= ((_ extract 63 63) #929) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #935 = (ite (= #929 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #936 = (_ bv140283850297164 64) ; RIP

0x7f9661108f4c: cmp r13, rbp
	 -> #937 = (bvsub ((_ extract 63 0) #625) ((_ extract 63 0) #929)) 
	 -> #938 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #937 (bvxor ((_ extract 63 0) #625) ((_ extract 63 0) #929))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #939 = (ite (bvult ((_ extract 63 0) #625) ((_ extract 63 0) #929)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #940 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #625) ((_ extract 63 0) #929)) (bvxor ((_ extract 63 0) #625) #937))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #941 = (ite (= (parity_flag ((_ extract 7 0) #937)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #942 = (ite (= ((_ extract 63 63) #937) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #943 = (ite (= #937 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #944 = (_ bv140283850297167 64) ; RIP

0x7f9661108e48: mov rax, qword ptr [r14+rbp*8]
	 -> #945 = (_ bv140283489130072 64) 
	 -> #946 = (_ bv140283850296908 64) ; RIP

0x7f9661108e4c: mov rbx, qword ptr [rax+0x28]
	 -> #947 = (_ bv140283489130072 64) 
	 -> #948 = (_ bv140283850296912 64) ; RIP

0x7f9661108e50: cmp rbx, r10
	 -> #949 = (bvsub ((_ extract 63 0) #947) ((_ extract 63 0) #925)) 
	 -> #950 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #949 (bvxor ((_ extract 63 0) #947) ((_ extract 63 0) #925))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #951 = (ite (bvult ((_ extract 63 0) #947) ((_ extract 63 0) #925)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #952 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #947) ((_ extract 63 0) #925)) (bvxor ((_ extract 63 0) #947) #949))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #953 = (ite (= (parity_flag ((_ extract 7 0) #949)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #954 = (ite (= ((_ extract 63 63) #949) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #955 = (ite (= #949 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #956 = (_ bv140283850296915 64) ; RIP

0x7f9661108e53: jz 0x7f9661108f48

0x7f9661108e59: test r11d, r11d
	 -> #957 = (bvand ((_ extract 31 0) #927) ((_ extract 31 0) #927)) 
	 -> #958 = (_ bv0 1) ; Clears carry flag
	 -> #959 = (_ bv0 1) ; Clears overflow flag
	 -> #960 = (ite (= (parity_flag ((_ extract 7 0) #957)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #961 = (ite (= ((_ extract 31 31) #957) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #962 = (ite (= #957 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #963 = (_ bv140283850296924 64) ; RIP

0x7f9661108e6b: test byte ptr [rbx+0x315], 0x20
	 -> #964 = (bvand (_ bv64 8) (_ bv32 8)) 
	 -> #965 = (_ bv0 1) ; Clears carry flag
	 -> #966 = (_ bv0 1) ; Clears overflow flag
	 -> #967 = (ite (= (parity_flag ((_ extract 7 0) #964)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #968 = (ite (= ((_ extract 7 7) #964) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #969 = (ite (= #964 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #970 = (_ bv140283850296946 64) ; RIP

0x7f9661108e72: jnz 0x7f9661108f48

0x7f9661108e78: test byte ptr [rip+0x217de1], 0x8
	 -> #971 = (bvand (_ bv0 8) (_ bv8 8)) 
	 -> #972 = (_ bv0 1) ; Clears carry flag
	 -> #973 = (_ bv0 1) ; Clears overflow flag
	 -> #974 = (ite (= (parity_flag ((_ extract 7 0) #971)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #975 = (ite (= ((_ extract 7 7) #971) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #976 = (ite (= #971 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #977 = (_ bv140283850296959 64) ; RIP

0x7f9661108e7f: jnz 0x7f9661108f72

0x7f9661108e85: mov edx, dword ptr [rbx+0x2ec]
	 -> #978 = (_ bv1011 32) 
	 -> #979 = (_ bv140283850296971 64) ; RIP

0x7f9661108e8b: test edx, edx
	 -> #980 = (bvand ((_ extract 31 0) #978) ((_ extract 31 0) #978)) 
	 -> #981 = (_ bv0 1) ; Clears carry flag
	 -> #982 = (_ bv0 1) ; Clears overflow flag
	 -> #983 = (ite (= (parity_flag ((_ extract 7 0) #980)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #984 = (ite (= ((_ extract 31 31) #980) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #985 = (ite (= #980 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #986 = (_ bv140283850296973 64) ; RIP

0x7f9661108e8d: jz 0x7f9661108f48

0x7f9661108e93: mov rax, qword ptr [rbx+0x70]
	 -> #987 = (_ bv140283484548112 64) 
	 -> #988 = (_ bv140283850296983 64) ; RIP

0x7f9661108e97: mov dword ptr [rsp+0x94], 0x0
	 -> #989 = (_ bv0 32) 
	 -> #990 = (_ bv140283850296994 64) ; RIP

0x7f9661108ea2: mov qword ptr [rsp+0x98], 0x0
	 -> #991 = (_ bv0 64) 
	 -> #992 = (_ bv140283850297006 64) ; RIP

0x7f9661108eae: mov rax, qword ptr [rax+0x8]
	 -> #993 = (_ bv140283480821088 64) 
	 -> #994 = (_ bv140283850297010 64) ; RIP

0x7f9661108eb2: mov qword ptr [rsp+0x50], rax
	 -> #995 = ((_ extract 63 0) #993) 
	 -> #996 = (_ bv140283850297015 64) ; RIP

0x7f9661108eb7: mov rax, qword ptr [rbx+0x68]
	 -> #997 = (_ bv140283484548096 64) 
	 -> #998 = (_ bv140283850297019 64) ; RIP

0x7f9661108ebb: mov rax, qword ptr [rax+0x8]
	 -> #999 = (_ bv140283480874416 64) 
	 -> #1000 = (_ bv140283850297023 64) ; RIP

0x7f9661108ebf: mov qword ptr [rsp+0x48], rax
	 -> #1001 = ((_ extract 63 0) #999) 
	 -> #1002 = (_ bv140283850297028 64) ; RIP

0x7f9661108ec4: mov rax, qword ptr [rbx+0x2f8]
	 -> #1003 = (_ bv140283480806144 64) 
	 -> #1004 = (_ bv140283850297035 64) ; RIP

0x7f9661108ecb: test rax, rax
	 -> #1005 = (bvand ((_ extract 63 0) #1003) ((_ extract 63 0) #1003)) 
	 -> #1006 = (_ bv0 1) ; Clears carry flag
	 -> #1007 = (_ bv0 1) ; Clears overflow flag
	 -> #1008 = (ite (= (parity_flag ((_ extract 7 0) #1005)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1009 = (ite (= ((_ extract 63 63) #1005) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1010 = (ite (= #1005 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1011 = (_ bv140283850297038 64) ; RIP

0x7f9661108ece: jz 0x7f96611090b8

0x7f9661108ed4: mov ecx, r15d
	 -> #1012 = ((_ extract 31 0) #643) 
	 -> #1013 = (_ bv140283850297047 64) ; RIP

0x7f9661108ed7: and ecx, dword ptr [rbx+0x2f0]
	 -> #1014 = (bvand ((_ extract 31 0) #1012) (_ bv255 32)) 
	 -> #1015 = (_ bv0 1) ; Clears carry flag
	 -> #1016 = (_ bv0 1) ; Clears overflow flag
	 -> #1017 = (ite (= (parity_flag ((_ extract 7 0) #1014)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1018 = (ite (= ((_ extract 31 31) #1014) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1019 = (ite (= #1014 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1020 = (_ bv140283850297053 64) ; RIP

0x7f9661108edd: mov rsi, qword ptr [rax+rcx*8]
	 -> #1021 = (_ bv14306529741054804042 64) 
	 -> #1022 = (_ bv140283850297057 64) ; RIP

0x7f9661108ee1: mov ecx, dword ptr [rbx+0x2f4]
	 -> #1023 = (_ bv14 32) 
	 -> #1024 = (_ bv140283850297063 64) ; RIP

0x7f9661108ee7: mov rax, r12
	 -> #1025 = ((_ extract 63 0) #609) 
	 -> #1026 = (_ bv140283850297066 64) ; RIP

0x7f9661108eea: shr rax, cl

0x7f9661108eed: mov rcx, rax
	 -> #1027 = ((_ extract 63 0) #1025) 
	 -> #1028 = (_ bv140283850297072 64) ; RIP

0x7f9661108ef0: mov rax, rsi
	 -> #1029 = ((_ extract 63 0) #1021) 
	 -> #1030 = (_ bv140283850297075 64) ; RIP

0x7f9661108ef3: shr rax, cl

0x7f9661108ef6: movzx ecx, byte ptr [rsp+0x30]
	 -> #1031 = ((_ zero_extend 24) ((_ extract 7 0) #665)) 
	 -> #1032 = (_ bv140283850297083 64) ; RIP

0x7f9661108efb: shr rsi, cl

0x7f9661108efe: and rax, rsi
	 -> #1033 = (bvand ((_ extract 63 0) #1029) ((_ extract 63 0) #1021)) 
	 -> #1034 = (_ bv0 1) ; Clears carry flag
	 -> #1035 = (_ bv0 1) ; Clears overflow flag
	 -> #1036 = (ite (= (parity_flag ((_ extract 7 0) #1033)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1037 = (ite (= ((_ extract 63 63) #1033) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1038 = (ite (= #1033 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1039 = (_ bv140283850297089 64) ; RIP

0x7f9661108f01: test al, 0x1
	 -> #1040 = (bvand ((_ extract 7 0) #1033) (_ bv1 8)) 
	 -> #1041 = (_ bv0 1) ; Clears carry flag
	 -> #1042 = (_ bv0 1) ; Clears overflow flag
	 -> #1043 = (ite (= (parity_flag ((_ extract 7 0) #1040)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1044 = (ite (= ((_ extract 7 7) #1040) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1045 = (ite (= #1040 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1046 = (_ bv140283850297091 64) ; RIP

0x7f9661108fca: mov ecx, edx
	 -> #1047 = ((_ extract 31 0) #978) 
	 -> #1048 = (_ bv140283850297292 64) ; RIP

0x7f9661108fcc: mov rax, r12
	 -> #1049 = ((_ extract 63 0) #609) 
	 -> #1050 = (_ bv140283850297295 64) ; RIP

0x7f9661108fcf: xor edx, edx
	 -> #1051 = (bvxor ((_ extract 31 0) #978) ((_ extract 31 0) #978)) 
	 -> #1052 = (_ bv0 1) ; Clears carry flag
	 -> #1053 = (_ bv0 1) ; Clears overflow flag
	 -> #1054 = (ite (= (parity_flag ((_ extract 7 0) #1051)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1055 = (ite (= ((_ extract 31 31) #1051) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1056 = (ite (= #1051 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1057 = (_ bv140283850297297 64) ; RIP

0x7f9661108fd1: div rcx

0x7f9661108fd4: mov rax, qword ptr [rbx+0x300]
	 -> #1058 = (_ bv140283480808192 64) 
	 -> #1059 = (_ bv140283850297307 64) ; RIP

0x7f9661108fdb: mov eax, dword ptr [rax+rdx*4]
	 -> #1060 = (_ bv398 32) 
	 -> #1061 = (_ bv140283850297310 64) ; RIP

0x7f9661108fde: test eax, eax
	 -> #1062 = (bvand ((_ extract 31 0) #1060) ((_ extract 31 0) #1060)) 
	 -> #1063 = (_ bv0 1) ; Clears carry flag
	 -> #1064 = (_ bv0 1) ; Clears overflow flag
	 -> #1065 = (ite (= (parity_flag ((_ extract 7 0) #1062)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1066 = (ite (= ((_ extract 31 31) #1062) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1067 = (ite (= #1062 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1068 = (_ bv140283850297312 64) ; RIP

0x7f9661108fe0: jz 0x7f9661108f09

0x7f9661108fe6: mov rdx, qword ptr [rbx+0x308]
	 -> #1069 = (_ bv140283480812196 64) 
	 -> #1070 = (_ bv140283850297325 64) ; RIP

0x7f9661108fed: mov qword ptr [rsp+0xf8], r10
	 -> #1071 = ((_ extract 63 0) #925) 
	 -> #1072 = (_ bv140283850297333 64) ; RIP

0x7f9661108ff5: lea rax, ptr [rdx+rax*4]

0x7f9661108ff9: mov r10, rax
	 -> #1073 = ((_ extract 63 0) #1060) 
	 -> #1074 = (_ bv140283850297340 64) ; RIP

0x7f9661108ffc: jmp 0x7f966110900d

0x7f966110900d: mov edx, dword ptr [r10]
	 -> #1075 = (_ bv1162962590 32) 
	 -> #1076 = (_ bv140283850297360 64) ; RIP

0x7f9661109010: mov eax, edx
	 -> #1077 = ((_ extract 31 0) #1075) 
	 -> #1078 = (_ bv140283850297362 64) ; RIP

0x7f9661109012: xor rax, r12
	 -> #1079 = (bvxor ((_ extract 63 0) #1077) ((_ extract 63 0) #609)) 
	 -> #1080 = (_ bv0 1) ; Clears carry flag
	 -> #1081 = (_ bv0 1) ; Clears overflow flag
	 -> #1082 = (ite (= (parity_flag ((_ extract 7 0) #1079)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1083 = (ite (= ((_ extract 63 63) #1079) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1084 = (ite (= #1079 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1085 = (_ bv140283850297365 64) ; RIP

0x7f9661109015: shr rax, 0x1

0x7f9661109000: add r10, 0x4
	 -> #1086 = (bvadd ((_ extract 63 0) #1073) (_ bv4 64)) 
	 -> #1087 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1086 (bvxor ((_ extract 63 0) #1073) (_ bv4 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1088 = (ite (bvult #1086 ((_ extract 63 0) #1073)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1089 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1073) (bvnot (_ bv4 64))) (bvxor ((_ extract 63 0) #1073) #1086))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1090 = (ite (= (parity_flag ((_ extract 7 0) #1086)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1091 = (ite (= ((_ extract 63 63) #1086) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1092 = (ite (= #1086 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1093 = (_ bv140283850297348 64) ; RIP

0x7f9661109004: and edx, 0x1
	 -> #1094 = (bvand ((_ extract 31 0) #1075) (_ bv1 32)) 
	 -> #1095 = (_ bv0 1) ; Clears carry flag
	 -> #1096 = (_ bv0 1) ; Clears overflow flag
	 -> #1097 = (ite (= (parity_flag ((_ extract 7 0) #1094)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1098 = (ite (= ((_ extract 31 31) #1094) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1099 = (ite (= #1094 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1100 = (_ bv140283850297351 64) ; RIP

0x7f9661109007: jnz 0x7f96611091ae

0x7f966110900d: mov edx, dword ptr [r10]
	 -> #1101 = (_ bv2090629905 32) 
	 -> #1102 = (_ bv140283850297360 64) ; RIP

0x7f9661109010: mov eax, edx
	 -> #1103 = ((_ extract 31 0) #1101) 
	 -> #1104 = (_ bv140283850297362 64) ; RIP

0x7f9661109012: xor rax, r12
	 -> #1105 = (bvxor ((_ extract 63 0) #1103) ((_ extract 63 0) #609)) 
	 -> #1106 = (_ bv0 1) ; Clears carry flag
	 -> #1107 = (_ bv0 1) ; Clears overflow flag
	 -> #1108 = (ite (= (parity_flag ((_ extract 7 0) #1105)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1109 = (ite (= ((_ extract 63 63) #1105) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1110 = (ite (= #1105 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1111 = (_ bv140283850297365 64) ; RIP

0x7f9661109015: shr rax, 0x1

0x7f9661109018: jnz 0x7f9661109000

0x7f966110901a: mov rax, r10
	 -> #1112 = ((_ extract 63 0) #1086) 
	 -> #1113 = (_ bv140283850297373 64) ; RIP

0x7f966110901d: sub rax, qword ptr [rbx+0x308]
	 -> #1114 = (bvsub ((_ extract 63 0) #1112) (_ bv140283480812196 64)) 
	 -> #1115 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1114 (bvxor ((_ extract 63 0) #1112) (_ bv140283480812196 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1116 = (ite (bvult ((_ extract 63 0) #1112) (_ bv140283480812196 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1117 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1112) (_ bv140283480812196 64)) (bvxor ((_ extract 63 0) #1112) #1114))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1118 = (ite (= (parity_flag ((_ extract 7 0) #1114)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1119 = (ite (= ((_ extract 63 63) #1114) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1120 = (ite (= #1114 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1121 = (_ bv140283850297380 64) ; RIP

0x7f9661109024: mov rsi, qword ptr [rsp+0x68]
	 -> #1122 = ((_ extract 63 0) #645) 
	 -> #1123 = (_ bv140283850297385 64) ; RIP

0x7f9661109029: mov rdi, qword ptr [rsp+0x70]
	 -> #1124 = ((_ extract 63 0) #654) 
	 -> #1125 = (_ bv140283850297390 64) ; RIP

0x7f966110902e: mov r8d, dword ptr [rsp+0x100]
	 -> #1126 = ((_ extract 31 0) #588) 
	 -> #1127 = (_ bv140283850297398 64) ; RIP

0x7f9661109036: mov ecx, dword ptr [rsp+0xf0]
	 -> #1128 = ((_ extract 31 0) #582) 
	 -> #1129 = (_ bv140283850297405 64) ; RIP

0x7f966110903d: mov qword ptr [rsp+0x10], rbx
	 -> #1130 = ((_ extract 63 0) #949) 
	 -> #1131 = (_ bv140283850297410 64) ; RIP

0x7f9661109042: mov qword ptr [rsp+0x20], rsi
	 -> #1132 = ((_ extract 63 0) #1122) 
	 -> #1133 = (_ bv140283850297415 64) ; RIP

0x7f9661109047: mov rsi, qword ptr [rsp+0x48]
	 -> #1134 = ((_ extract 63 0) #1001) 
	 -> #1135 = (_ bv140283850297420 64) ; RIP

0x7f966110904c: sar rax, 0x2

0x7f9661109050: mov qword ptr [rsp+0x18], rdi
	 -> #1136 = ((_ extract 63 0) #1124) 
	 -> #1137 = (_ bv140283850297429 64) ; RIP

0x7f9661109055: mov rdi, qword ptr [rsp+0x38]
	 -> #1138 = ((_ extract 63 0) #627) 
	 -> #1139 = (_ bv140283850297434 64) ; RIP

0x7f966110905a: mov dword ptr [rsp+0x78], eax
	 -> #1140 = ((_ extract 31 0) #1114) 
	 -> #1141 = (_ bv140283850297438 64) ; RIP

0x7f966110905e: mov edx, eax
	 -> #1142 = ((_ extract 31 0) #1114) 
	 -> #1143 = (_ bv140283850297440 64) ; RIP

0x7f9661109060: mov dword ptr [rsp], eax
	 -> #1144 = ((_ extract 31 0) #1114) 
	 -> #1145 = (_ bv140283850297443 64) ; RIP

0x7f9661109063: mov rax, qword ptr [rsp+0x50]
	 -> #1146 = ((_ extract 63 0) #995) 
	 -> #1147 = (_ bv140283850297448 64) ; RIP

0x7f9661109068: lea rdx, ptr [rdx+rdx*2]

0x7f966110906c: mov qword ptr [rsp+0x8], rsi
	 -> #1148 = ((_ extract 63 0) #1134) 
	 -> #1149 = (_ bv140283850297457 64) ; RIP

0x7f9661109071: mov rsi, qword ptr [rsp+0x58]
	 -> #1150 = ((_ extract 63 0) #631) 
	 -> #1151 = (_ bv140283850297462 64) ; RIP

0x7f9661109076: mov dword ptr [rsp+0x8c], r11d
	 -> #1152 = ((_ extract 31 0) #927) 
	 -> #1153 = (_ bv140283850297470 64) ; RIP

0x7f966110907e: mov qword ptr [rsp+0x80], r10
	 -> #1154 = ((_ extract 63 0) #1086) 
	 -> #1155 = (_ bv140283850297478 64) ; RIP

0x7f9661109086: lea r9, ptr [rax+rdx*8]

0x7f966110908a: mov rdx, qword ptr [rsp+0xe8]
	 -> #1156 = ((_ extract 63 0) #769) 
	 -> #1157 = (_ bv140283850297490 64) ; RIP

0x7f9661109092: call 0x7f9661108c30
	 -> #1158 = (bvsub #917 (_ bv8 64)) ; Aligns stack
	 -> #1159 = (_ bv140283850297495 64) ; Saved RIP
	 -> #1160 = (_ bv140283850296368 64) ; RIP

0x7f9661108c30: push r13
	 -> #1161 = (bvsub #1158 (_ bv8 64)) ; Aligns stack
	 -> #1162 = #937 
	 -> #1163 = (_ bv140283850296370 64) ; RIP

0x7f9661108c32: mov r10, rdi
	 -> #1164 = ((_ extract 63 0) #1138) 
	 -> #1165 = (_ bv140283850296373 64) ; RIP

0x7f9661108c35: mov r13d, ecx
	 -> #1166 = ((_ extract 31 0) #1128) 
	 -> #1167 = (_ bv140283850296376 64) ; RIP

0x7f9661108c38: push r12
	 -> #1168 = (bvsub #1161 (_ bv8 64)) ; Aligns stack
	 -> #1169 = #609 
	 -> #1170 = (_ bv140283850296378 64) ; RIP

0x7f9661108c3a: push rbp
	 -> #1171 = (bvsub #1168 (_ bv8 64)) ; Aligns stack
	 -> #1172 = #929 
	 -> #1173 = (_ bv140283850296379 64) ; RIP

0x7f9661108c3b: mov rbp, rdx
	 -> #1174 = ((_ extract 63 0) #1156) 
	 -> #1175 = (_ bv140283850296382 64) ; RIP

0x7f9661108c3e: push rbx
	 -> #1176 = (bvsub #1171 (_ bv8 64)) ; Aligns stack
	 -> #1177 = #949 
	 -> #1178 = (_ bv140283850296383 64) ; RIP

0x7f9661108c3f: mov rbx, r9
	 -> #1179 = ((_ extract 63 0) #549) 
	 -> #1180 = (_ bv140283850296386 64) ; RIP

0x7f9661108c42: sub rsp, 0x8
	 -> #1181 = (bvsub ((_ extract 63 0) #1176) (_ bv8 64)) 
	 -> #1182 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1181 (bvxor ((_ extract 63 0) #1176) (_ bv8 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1183 = (ite (bvult ((_ extract 63 0) #1176) (_ bv8 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1184 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1176) (_ bv8 64)) (bvxor ((_ extract 63 0) #1176) #1181))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1185 = (ite (= (parity_flag ((_ extract 7 0) #1181)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1186 = (ite (= ((_ extract 63 63) #1181) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1187 = (ite (= #1181 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1188 = (_ bv140283850296390 64) ; RIP

0x7f9661108c46: movzx eax, byte ptr [r9+0x4]
	 -> #1189 = ((_ zero_extend 24) (_ bv34 8)) 
	 -> #1190 = (_ bv140283850296395 64) ; RIP

0x7f9661108c4b: mov r12, qword ptr [rsp+0x40]
	 -> #1191 = ((_ extract 63 0) #1130) 
	 -> #1192 = (_ bv140283850296400 64) ; RIP

0x7f9661108c50: and eax, 0xf
	 -> #1193 = (bvand ((_ extract 31 0) #1189) (_ bv15 32)) 
	 -> #1194 = (_ bv0 1) ; Clears carry flag
	 -> #1195 = (_ bv0 1) ; Clears overflow flag
	 -> #1196 = (ite (= (parity_flag ((_ extract 7 0) #1193)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1197 = (ite (= ((_ extract 31 31) #1193) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1198 = (ite (= #1193 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1199 = (_ bv140283850296403 64) ; RIP

0x7f9661108c53: cmp qword ptr [r9+0x8], 0x0
	 -> #1200 = (bvsub (_ bv438960 64) ((_ sign_extend 0) (_ bv0 64))) 
	 -> #1201 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1200 (bvxor (_ bv438960 64) ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1202 = (ite (bvult (_ bv438960 64) ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1203 = (ite (= ((_ extract 63 63) (bvand (bvxor (_ bv438960 64) ((_ sign_extend 0) (_ bv0 64))) (bvxor (_ bv438960 64) #1200))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1204 = (ite (= (parity_flag ((_ extract 7 0) #1200)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1205 = (ite (= ((_ extract 63 63) #1200) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1206 = (ite (= #1200 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1207 = (_ bv140283850296408 64) ; RIP

0x7f9661108c58: jz 0x7f9661108d79

0x7f9661108c5e: xor edx, edx
	 -> #1208 = (bvxor ((_ extract 31 0) #1156) ((_ extract 31 0) #1156)) 
	 -> #1209 = (_ bv0 1) ; Clears carry flag
	 -> #1210 = (_ bv0 1) ; Clears overflow flag
	 -> #1211 = (ite (= (parity_flag ((_ extract 7 0) #1208)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1212 = (ite (= ((_ extract 31 31) #1208) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1213 = (ite (= #1208 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1214 = (_ bv140283850296416 64) ; RIP

0x7f9661108c60: cmp word ptr [rbx+0x6], 0x0
	 -> #1215 = (bvsub (_ bv12 16) ((_ sign_extend 0) (_ bv0 16))) 
	 -> #1216 = (ite (= (_ bv16 16) (bvand (_ bv16 16) (bvxor #1215 (bvxor (_ bv12 16) ((_ sign_extend 0) (_ bv0 16)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1217 = (ite (bvult (_ bv12 16) ((_ sign_extend 0) (_ bv0 16))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1218 = (ite (= ((_ extract 15 15) (bvand (bvxor (_ bv12 16) ((_ sign_extend 0) (_ bv0 16))) (bvxor (_ bv12 16) #1215))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1219 = (ite (= (parity_flag ((_ extract 7 0) #1215)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1220 = (ite (= ((_ extract 15 15) #1215) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1221 = (ite (= #1215 (_ bv0 16)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1222 = (_ bv140283850296421 64) ; RIP

0x7f9661108c65: setz dl

0x7f9661108c68: test r8d, edx
	 -> #1223 = (bvand ((_ extract 31 0) #1126) ((_ extract 31 0) #1208)) 
	 -> #1224 = (_ bv0 1) ; Clears carry flag
	 -> #1225 = (_ bv0 1) ; Clears overflow flag
	 -> #1226 = (ite (= (parity_flag ((_ extract 7 0) #1223)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1227 = (ite (= ((_ extract 31 31) #1223) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1228 = (ite (= #1223 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1229 = (_ bv140283850296427 64) ; RIP

0x7f9661108c6b: jnz 0x7f9661108d50

0x7f9661108c71: mov edx, 0x467
	 -> #1230 = (_ bv1127 32) 
	 -> #1231 = (_ bv140283850296438 64) ; RIP

0x7f9661108c76: bt edx, eax

0x7f9661108c79: jnb 0x7f9661108d50

0x7f9661108c7f: cmp rbx, rsi
	 -> #1232 = (bvsub ((_ extract 63 0) #1179) ((_ extract 63 0) #1150)) 
	 -> #1233 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1232 (bvxor ((_ extract 63 0) #1179) ((_ extract 63 0) #1150))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1234 = (ite (bvult ((_ extract 63 0) #1179) ((_ extract 63 0) #1150)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1235 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1179) ((_ extract 63 0) #1150)) (bvxor ((_ extract 63 0) #1179) #1232))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1236 = (ite (= (parity_flag ((_ extract 7 0) #1232)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1237 = (ite (= ((_ extract 63 63) #1232) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1238 = (ite (= #1232 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1239 = (_ bv140283850296450 64) ; RIP

0x7f9661108c82: jz 0x7f9661108c9b

0x7f9661108c84: mov edi, dword ptr [rbx]
	 -> #1240 = (_ bv3418 32) 
	 -> #1241 = (_ bv140283850296454 64) ; RIP

0x7f9661108c86: mov rsi, r10
	 -> #1242 = ((_ extract 63 0) #1164) 
	 -> #1243 = (_ bv140283850296457 64) ; RIP

0x7f9661108c89: add rdi, qword ptr [rsp+0x38]
	 -> #1244 = (bvadd ((_ extract 63 0) #1240) #1148) 
	 -> #1245 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1244 (bvxor ((_ extract 63 0) #1240) #1148)))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1246 = (ite (bvult #1244 ((_ extract 63 0) #1240)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1247 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1240) (bvnot #1148)) (bvxor ((_ extract 63 0) #1240) #1244))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1248 = (ite (= (parity_flag ((_ extract 7 0) #1244)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1249 = (ite (= ((_ extract 63 63) #1244) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1250 = (ite (= #1244 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1251 = (_ bv140283850296462 64) ; RIP

0x7f9661108c8e: call 0x7f9661118240
	 -> #1252 = (bvsub #1181 (_ bv8 64)) ; Aligns stack
	 -> #1253 = (_ bv140283850296467 64) ; Saved RIP
	 -> #1254 = (_ bv140283850359360 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1255 = (_ bv112 8) 
	 -> #1256 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1257 = (bvsub ((_ extract 7 0) #1255) (_ bv112 8)) 
	 -> #1258 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1257 (bvxor ((_ extract 7 0) #1255) (_ bv112 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1259 = (ite (bvult ((_ extract 7 0) #1255) (_ bv112 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1260 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1255) (_ bv112 8)) (bvxor ((_ extract 7 0) #1255) #1257))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1261 = (ite (= (parity_flag ((_ extract 7 0) #1257)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1262 = (ite (= ((_ extract 7 7) #1257) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1263 = (ite (= #1257 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1264 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1265 = (bvadd #1244 (_ bv1 64)) 
	 -> #1266 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1265 (bvxor #1244 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1267 = (ite (= ((_ extract 63 63) (bvand (bvxor #1244 (bvnot (_ bv1 64))) (bvxor #1244 #1265))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1268 = (ite (= (parity_flag ((_ extract 7 0) #1265)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1269 = (ite (= ((_ extract 63 63) #1265) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1270 = (ite (= #1265 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1271 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1272 = (bvadd #1242 (_ bv1 64)) 
	 -> #1273 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1272 (bvxor #1242 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1274 = (ite (= ((_ extract 63 63) (bvand (bvxor #1242 (bvnot (_ bv1 64))) (bvxor #1242 #1272))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1275 = (ite (= (parity_flag ((_ extract 7 0) #1272)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1276 = (ite (= ((_ extract 63 63) #1272) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1277 = (ite (= #1272 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1278 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1279 = (bvand ((_ extract 7 0) #1257) ((_ extract 7 0) #1257)) 
	 -> #1280 = (_ bv0 1) ; Clears carry flag
	 -> #1281 = (_ bv0 1) ; Clears overflow flag
	 -> #1282 = (ite (= (parity_flag ((_ extract 7 0) #1279)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1283 = (ite (= ((_ extract 7 7) #1279) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1284 = (ite (= #1279 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1285 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1286 = (_ bv117 8) 
	 -> #1287 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1288 = (bvsub ((_ extract 7 0) #1286) (_ bv117 8)) 
	 -> #1289 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1288 (bvxor ((_ extract 7 0) #1286) (_ bv117 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1290 = (ite (bvult ((_ extract 7 0) #1286) (_ bv117 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1291 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1286) (_ bv117 8)) (bvxor ((_ extract 7 0) #1286) #1288))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1292 = (ite (= (parity_flag ((_ extract 7 0) #1288)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1293 = (ite (= ((_ extract 7 7) #1288) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1294 = (ite (= #1288 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1295 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1296 = (bvadd #1265 (_ bv1 64)) 
	 -> #1297 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1296 (bvxor #1265 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1298 = (ite (= ((_ extract 63 63) (bvand (bvxor #1265 (bvnot (_ bv1 64))) (bvxor #1265 #1296))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1299 = (ite (= (parity_flag ((_ extract 7 0) #1296)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1300 = (ite (= ((_ extract 63 63) #1296) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1301 = (ite (= #1296 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1302 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1303 = (bvadd #1272 (_ bv1 64)) 
	 -> #1304 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1303 (bvxor #1272 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1305 = (ite (= ((_ extract 63 63) (bvand (bvxor #1272 (bvnot (_ bv1 64))) (bvxor #1272 #1303))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1306 = (ite (= (parity_flag ((_ extract 7 0) #1303)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1307 = (ite (= ((_ extract 63 63) #1303) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1308 = (ite (= #1303 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1309 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1310 = (bvand ((_ extract 7 0) #1288) ((_ extract 7 0) #1288)) 
	 -> #1311 = (_ bv0 1) ; Clears carry flag
	 -> #1312 = (_ bv0 1) ; Clears overflow flag
	 -> #1313 = (ite (= (parity_flag ((_ extract 7 0) #1310)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1314 = (ite (= ((_ extract 7 7) #1310) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1315 = (ite (= #1310 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1316 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1317 = (_ bv116 8) 
	 -> #1318 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1319 = (bvsub ((_ extract 7 0) #1317) (_ bv116 8)) 
	 -> #1320 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1319 (bvxor ((_ extract 7 0) #1317) (_ bv116 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1321 = (ite (bvult ((_ extract 7 0) #1317) (_ bv116 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1322 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1317) (_ bv116 8)) (bvxor ((_ extract 7 0) #1317) #1319))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1323 = (ite (= (parity_flag ((_ extract 7 0) #1319)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1324 = (ite (= ((_ extract 7 7) #1319) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1325 = (ite (= #1319 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1326 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1327 = (bvadd #1296 (_ bv1 64)) 
	 -> #1328 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1327 (bvxor #1296 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1329 = (ite (= ((_ extract 63 63) (bvand (bvxor #1296 (bvnot (_ bv1 64))) (bvxor #1296 #1327))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1330 = (ite (= (parity_flag ((_ extract 7 0) #1327)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1331 = (ite (= ((_ extract 63 63) #1327) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1332 = (ite (= #1327 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1333 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1334 = (bvadd #1303 (_ bv1 64)) 
	 -> #1335 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1334 (bvxor #1303 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1336 = (ite (= ((_ extract 63 63) (bvand (bvxor #1303 (bvnot (_ bv1 64))) (bvxor #1303 #1334))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1337 = (ite (= (parity_flag ((_ extract 7 0) #1334)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1338 = (ite (= ((_ extract 63 63) #1334) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1339 = (ite (= #1334 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1340 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1341 = (bvand ((_ extract 7 0) #1319) ((_ extract 7 0) #1319)) 
	 -> #1342 = (_ bv0 1) ; Clears carry flag
	 -> #1343 = (_ bv0 1) ; Clears overflow flag
	 -> #1344 = (ite (= (parity_flag ((_ extract 7 0) #1341)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1345 = (ite (= ((_ extract 7 7) #1341) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1346 = (ite (= #1341 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1347 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1348 = (_ bv115 8) 
	 -> #1349 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1350 = (bvsub ((_ extract 7 0) #1348) (_ bv115 8)) 
	 -> #1351 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1350 (bvxor ((_ extract 7 0) #1348) (_ bv115 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1352 = (ite (bvult ((_ extract 7 0) #1348) (_ bv115 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1353 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1348) (_ bv115 8)) (bvxor ((_ extract 7 0) #1348) #1350))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1354 = (ite (= (parity_flag ((_ extract 7 0) #1350)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1355 = (ite (= ((_ extract 7 7) #1350) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1356 = (ite (= #1350 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1357 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1358 = (bvadd #1327 (_ bv1 64)) 
	 -> #1359 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1358 (bvxor #1327 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1360 = (ite (= ((_ extract 63 63) (bvand (bvxor #1327 (bvnot (_ bv1 64))) (bvxor #1327 #1358))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1361 = (ite (= (parity_flag ((_ extract 7 0) #1358)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1362 = (ite (= ((_ extract 63 63) #1358) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1363 = (ite (= #1358 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1364 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1365 = (bvadd #1334 (_ bv1 64)) 
	 -> #1366 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1365 (bvxor #1334 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1367 = (ite (= ((_ extract 63 63) (bvand (bvxor #1334 (bvnot (_ bv1 64))) (bvxor #1334 #1365))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1368 = (ite (= (parity_flag ((_ extract 7 0) #1365)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1369 = (ite (= ((_ extract 63 63) #1365) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1370 = (ite (= #1365 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1371 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1372 = (bvand ((_ extract 7 0) #1350) ((_ extract 7 0) #1350)) 
	 -> #1373 = (_ bv0 1) ; Clears carry flag
	 -> #1374 = (_ bv0 1) ; Clears overflow flag
	 -> #1375 = (ite (= (parity_flag ((_ extract 7 0) #1372)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1376 = (ite (= ((_ extract 7 7) #1372) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1377 = (ite (= #1372 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1378 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1379 = (_ bv0 8) 
	 -> #1380 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1381 = (bvsub ((_ extract 7 0) #1379) (_ bv0 8)) 
	 -> #1382 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1381 (bvxor ((_ extract 7 0) #1379) (_ bv0 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1383 = (ite (bvult ((_ extract 7 0) #1379) (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1384 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1379) (_ bv0 8)) (bvxor ((_ extract 7 0) #1379) #1381))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1385 = (ite (= (parity_flag ((_ extract 7 0) #1381)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1386 = (ite (= ((_ extract 7 7) #1381) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1387 = (ite (= #1381 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1388 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1389 = (bvadd #1358 (_ bv1 64)) 
	 -> #1390 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1389 (bvxor #1358 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1391 = (ite (= ((_ extract 63 63) (bvand (bvxor #1358 (bvnot (_ bv1 64))) (bvxor #1358 #1389))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1392 = (ite (= (parity_flag ((_ extract 7 0) #1389)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1393 = (ite (= ((_ extract 63 63) #1389) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1394 = (ite (= #1389 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1395 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1396 = (bvadd #1365 (_ bv1 64)) 
	 -> #1397 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1396 (bvxor #1365 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1398 = (ite (= ((_ extract 63 63) (bvand (bvxor #1365 (bvnot (_ bv1 64))) (bvxor #1365 #1396))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1399 = (ite (= (parity_flag ((_ extract 7 0) #1396)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1400 = (ite (= ((_ extract 63 63) #1396) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1401 = (ite (= #1396 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1402 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1403 = (bvand ((_ extract 7 0) #1381) ((_ extract 7 0) #1381)) 
	 -> #1404 = (_ bv0 1) ; Clears carry flag
	 -> #1405 = (_ bv0 1) ; Clears overflow flag
	 -> #1406 = (ite (= (parity_flag ((_ extract 7 0) #1403)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1407 = (ite (= ((_ extract 7 7) #1403) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1408 = (ite (= #1403 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1409 = (_ bv140283850359374 64) ; RIP

0x7f966111824e: jnz 0x7f9661118240

0x7f9661118250: xor eax, eax
	 -> #1410 = (bvxor ((_ extract 31 0) #1381) ((_ extract 31 0) #1381)) 
	 -> #1411 = (_ bv0 1) ; Clears carry flag
	 -> #1412 = (_ bv0 1) ; Clears overflow flag
	 -> #1413 = (ite (= (parity_flag ((_ extract 7 0) #1410)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1414 = (ite (= ((_ extract 31 31) #1410) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1415 = (ite (= #1410 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1416 = (_ bv140283850359378 64) ; RIP

0x7f9661118252: ret 
	 -> #1417 = #1253 ; RIP
	 -> #1418 = (bvadd #1252 (_ bv8 64)) ; Aligns stack

0x7f9661108c93: test eax, eax
	 -> #1419 = (bvand ((_ extract 31 0) #1410) ((_ extract 31 0) #1410)) 
	 -> #1420 = (_ bv0 1) ; Clears carry flag
	 -> #1421 = (_ bv0 1) ; Clears overflow flag
	 -> #1422 = (ite (= (parity_flag ((_ extract 7 0) #1419)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1423 = (ite (= ((_ extract 31 31) #1419) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1424 = (ite (= #1419 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1425 = (_ bv140283850296469 64) ; RIP

0x7f9661108c95: jnz 0x7f9661108d50

0x7f9661108c9b: test rbp, rbp
	 -> #1426 = (bvand ((_ extract 63 0) #1174) ((_ extract 63 0) #1174)) 
	 -> #1427 = (_ bv0 1) ; Clears carry flag
	 -> #1428 = (_ bv0 1) ; Clears overflow flag
	 -> #1429 = (ite (= (parity_flag ((_ extract 7 0) #1426)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1430 = (ite (= ((_ extract 63 63) #1426) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1431 = (ite (= #1426 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1432 = (_ bv140283850296478 64) ; RIP

0x7f9661108c9e: mov rax, qword ptr [r12+0x330]
	 -> #1433 = (_ bv140283480897152 64) 
	 -> #1434 = (_ bv140283850296486 64) ; RIP

0x7f9661108ca6: jz 0x7f9661108d00

0x7f9661108ca8: test rax, rax
	 -> #1435 = (bvand ((_ extract 63 0) #1433) ((_ extract 63 0) #1433)) 
	 -> #1436 = (_ bv0 1) ; Clears carry flag
	 -> #1437 = (_ bv0 1) ; Clears overflow flag
	 -> #1438 = (ite (= (parity_flag ((_ extract 7 0) #1435)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1439 = (ite (= ((_ extract 63 63) #1435) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1440 = (ite (= #1435 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1441 = (_ bv140283850296491 64) ; RIP

0x7f9661108cab: jz 0x7f9661108d8a

0x7f9661108cb1: mov edx, dword ptr [rsp+0x30]
	 -> #1442 = ((_ extract 31 0) #1144) 
	 -> #1443 = (_ bv140283850296501 64) ; RIP

0x7f9661108cb5: movzx r13d, word ptr [rax+rdx*2]
	 -> #1444 = ((_ zero_extend 16) (_ bv2 16)) 
	 -> #1445 = (_ bv140283850296506 64) ; RIP

0x7f9661108cba: mov rax, r13
	 -> #1446 = ((_ extract 63 0) #1444) 
	 -> #1447 = (_ bv140283850296509 64) ; RIP

0x7f9661108cbd: and eax, 0x7fff
	 -> #1448 = (bvand ((_ extract 31 0) #1446) (_ bv32767 32)) 
	 -> #1449 = (_ bv0 1) ; Clears carry flag
	 -> #1450 = (_ bv0 1) ; Clears overflow flag
	 -> #1451 = (ite (= (parity_flag ((_ extract 7 0) #1448)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1452 = (ite (= ((_ extract 31 31) #1448) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1453 = (ite (= #1448 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1454 = (_ bv140283850296514 64) ; RIP

0x7f9661108cc2: lea rdx, ptr [rax+rax*2]

0x7f9661108cc6: mov rax, qword ptr [r12+0x2e0]
	 -> #1455 = (_ bv140283489131520 64) 
	 -> #1456 = (_ bv140283850296526 64) ; RIP

0x7f9661108cce: lea rax, ptr [rax+rdx*8]

0x7f9661108cd2: mov r12d, dword ptr [rax+0x8]
	 -> #1457 = (_ bv157882997 32) 
	 -> #1458 = (_ bv140283850296534 64) ; RIP

0x7f9661108cd6: cmp r12d, dword ptr [rbp+0x8]
	 -> #1459 = (bvsub ((_ extract 31 0) #1457) (_ bv157882997 32)) 
	 -> #1460 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #1459 (bvxor ((_ extract 31 0) #1457) (_ bv157882997 32))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1461 = (ite (bvult ((_ extract 31 0) #1457) (_ bv157882997 32)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1462 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #1457) (_ bv157882997 32)) (bvxor ((_ extract 31 0) #1457) #1459))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1463 = (ite (= (parity_flag ((_ extract 7 0) #1459)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1464 = (ite (= ((_ extract 31 31) #1459) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1465 = (ite (= #1459 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1466 = (_ bv140283850296538 64) ; RIP

0x7f9661108d60: mov rsi, qword ptr [rbp]
	 -> #1467 = (_ bv4195201 64) 
	 -> #1468 = (_ bv140283850296676 64) ; RIP

0x7f9661108d64: mov rdi, qword ptr [rax]
	 -> #1469 = (_ bv140283480896909 64) 
	 -> #1470 = (_ bv140283850296679 64) ; RIP

0x7f9661108d67: call 0x7f9661118240
	 -> #1471 = (bvsub #1418 (_ bv8 64)) ; Aligns stack
	 -> #1472 = (_ bv140283850296684 64) ; Saved RIP
	 -> #1473 = (_ bv140283850359360 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1474 = (_ bv71 8) 
	 -> #1475 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1476 = (bvsub ((_ extract 7 0) #1474) (_ bv71 8)) 
	 -> #1477 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1476 (bvxor ((_ extract 7 0) #1474) (_ bv71 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1478 = (ite (bvult ((_ extract 7 0) #1474) (_ bv71 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1479 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1474) (_ bv71 8)) (bvxor ((_ extract 7 0) #1474) #1476))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1480 = (ite (= (parity_flag ((_ extract 7 0) #1476)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1481 = (ite (= ((_ extract 7 7) #1476) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1482 = (ite (= #1476 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1483 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1484 = (bvadd #1469 (_ bv1 64)) 
	 -> #1485 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1484 (bvxor #1469 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1486 = (ite (= ((_ extract 63 63) (bvand (bvxor #1469 (bvnot (_ bv1 64))) (bvxor #1469 #1484))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1487 = (ite (= (parity_flag ((_ extract 7 0) #1484)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1488 = (ite (= ((_ extract 63 63) #1484) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1489 = (ite (= #1484 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1490 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1491 = (bvadd #1467 (_ bv1 64)) 
	 -> #1492 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1491 (bvxor #1467 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1493 = (ite (= ((_ extract 63 63) (bvand (bvxor #1467 (bvnot (_ bv1 64))) (bvxor #1467 #1491))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1494 = (ite (= (parity_flag ((_ extract 7 0) #1491)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1495 = (ite (= ((_ extract 63 63) #1491) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1496 = (ite (= #1491 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1497 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1498 = (bvand ((_ extract 7 0) #1476) ((_ extract 7 0) #1476)) 
	 -> #1499 = (_ bv0 1) ; Clears carry flag
	 -> #1500 = (_ bv0 1) ; Clears overflow flag
	 -> #1501 = (ite (= (parity_flag ((_ extract 7 0) #1498)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1502 = (ite (= ((_ extract 7 7) #1498) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1503 = (ite (= #1498 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1504 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1505 = (_ bv76 8) 
	 -> #1506 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1507 = (bvsub ((_ extract 7 0) #1505) (_ bv76 8)) 
	 -> #1508 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1507 (bvxor ((_ extract 7 0) #1505) (_ bv76 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1509 = (ite (bvult ((_ extract 7 0) #1505) (_ bv76 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1510 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1505) (_ bv76 8)) (bvxor ((_ extract 7 0) #1505) #1507))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1511 = (ite (= (parity_flag ((_ extract 7 0) #1507)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1512 = (ite (= ((_ extract 7 7) #1507) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1513 = (ite (= #1507 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1514 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1515 = (bvadd #1484 (_ bv1 64)) 
	 -> #1516 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1515 (bvxor #1484 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1517 = (ite (= ((_ extract 63 63) (bvand (bvxor #1484 (bvnot (_ bv1 64))) (bvxor #1484 #1515))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1518 = (ite (= (parity_flag ((_ extract 7 0) #1515)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1519 = (ite (= ((_ extract 63 63) #1515) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1520 = (ite (= #1515 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1521 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1522 = (bvadd #1491 (_ bv1 64)) 
	 -> #1523 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1522 (bvxor #1491 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1524 = (ite (= ((_ extract 63 63) (bvand (bvxor #1491 (bvnot (_ bv1 64))) (bvxor #1491 #1522))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1525 = (ite (= (parity_flag ((_ extract 7 0) #1522)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1526 = (ite (= ((_ extract 63 63) #1522) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1527 = (ite (= #1522 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1528 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1529 = (bvand ((_ extract 7 0) #1507) ((_ extract 7 0) #1507)) 
	 -> #1530 = (_ bv0 1) ; Clears carry flag
	 -> #1531 = (_ bv0 1) ; Clears overflow flag
	 -> #1532 = (ite (= (parity_flag ((_ extract 7 0) #1529)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1533 = (ite (= ((_ extract 7 7) #1529) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1534 = (ite (= #1529 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1535 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1536 = (_ bv73 8) 
	 -> #1537 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1538 = (bvsub ((_ extract 7 0) #1536) (_ bv73 8)) 
	 -> #1539 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1538 (bvxor ((_ extract 7 0) #1536) (_ bv73 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1540 = (ite (bvult ((_ extract 7 0) #1536) (_ bv73 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1541 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1536) (_ bv73 8)) (bvxor ((_ extract 7 0) #1536) #1538))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1542 = (ite (= (parity_flag ((_ extract 7 0) #1538)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1543 = (ite (= ((_ extract 7 7) #1538) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1544 = (ite (= #1538 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1545 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1546 = (bvadd #1515 (_ bv1 64)) 
	 -> #1547 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1546 (bvxor #1515 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1548 = (ite (= ((_ extract 63 63) (bvand (bvxor #1515 (bvnot (_ bv1 64))) (bvxor #1515 #1546))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1549 = (ite (= (parity_flag ((_ extract 7 0) #1546)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1550 = (ite (= ((_ extract 63 63) #1546) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1551 = (ite (= #1546 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1552 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1553 = (bvadd #1522 (_ bv1 64)) 
	 -> #1554 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1553 (bvxor #1522 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1555 = (ite (= ((_ extract 63 63) (bvand (bvxor #1522 (bvnot (_ bv1 64))) (bvxor #1522 #1553))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1556 = (ite (= (parity_flag ((_ extract 7 0) #1553)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1557 = (ite (= ((_ extract 63 63) #1553) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1558 = (ite (= #1553 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1559 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1560 = (bvand ((_ extract 7 0) #1538) ((_ extract 7 0) #1538)) 
	 -> #1561 = (_ bv0 1) ; Clears carry flag
	 -> #1562 = (_ bv0 1) ; Clears overflow flag
	 -> #1563 = (ite (= (parity_flag ((_ extract 7 0) #1560)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1564 = (ite (= ((_ extract 7 7) #1560) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1565 = (ite (= #1560 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1566 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1567 = (_ bv66 8) 
	 -> #1568 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1569 = (bvsub ((_ extract 7 0) #1567) (_ bv66 8)) 
	 -> #1570 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1569 (bvxor ((_ extract 7 0) #1567) (_ bv66 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1571 = (ite (bvult ((_ extract 7 0) #1567) (_ bv66 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1572 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1567) (_ bv66 8)) (bvxor ((_ extract 7 0) #1567) #1569))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1573 = (ite (= (parity_flag ((_ extract 7 0) #1569)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1574 = (ite (= ((_ extract 7 7) #1569) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1575 = (ite (= #1569 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1576 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1577 = (bvadd #1546 (_ bv1 64)) 
	 -> #1578 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1577 (bvxor #1546 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1579 = (ite (= ((_ extract 63 63) (bvand (bvxor #1546 (bvnot (_ bv1 64))) (bvxor #1546 #1577))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1580 = (ite (= (parity_flag ((_ extract 7 0) #1577)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1581 = (ite (= ((_ extract 63 63) #1577) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1582 = (ite (= #1577 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1583 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1584 = (bvadd #1553 (_ bv1 64)) 
	 -> #1585 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1584 (bvxor #1553 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1586 = (ite (= ((_ extract 63 63) (bvand (bvxor #1553 (bvnot (_ bv1 64))) (bvxor #1553 #1584))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1587 = (ite (= (parity_flag ((_ extract 7 0) #1584)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1588 = (ite (= ((_ extract 63 63) #1584) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1589 = (ite (= #1584 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1590 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1591 = (bvand ((_ extract 7 0) #1569) ((_ extract 7 0) #1569)) 
	 -> #1592 = (_ bv0 1) ; Clears carry flag
	 -> #1593 = (_ bv0 1) ; Clears overflow flag
	 -> #1594 = (ite (= (parity_flag ((_ extract 7 0) #1591)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1595 = (ite (= ((_ extract 7 7) #1591) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1596 = (ite (= #1591 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1597 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1598 = (_ bv67 8) 
	 -> #1599 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1600 = (bvsub ((_ extract 7 0) #1598) (_ bv67 8)) 
	 -> #1601 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1600 (bvxor ((_ extract 7 0) #1598) (_ bv67 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1602 = (ite (bvult ((_ extract 7 0) #1598) (_ bv67 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1603 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1598) (_ bv67 8)) (bvxor ((_ extract 7 0) #1598) #1600))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1604 = (ite (= (parity_flag ((_ extract 7 0) #1600)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1605 = (ite (= ((_ extract 7 7) #1600) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1606 = (ite (= #1600 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1607 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1608 = (bvadd #1577 (_ bv1 64)) 
	 -> #1609 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1608 (bvxor #1577 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1610 = (ite (= ((_ extract 63 63) (bvand (bvxor #1577 (bvnot (_ bv1 64))) (bvxor #1577 #1608))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1611 = (ite (= (parity_flag ((_ extract 7 0) #1608)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1612 = (ite (= ((_ extract 63 63) #1608) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1613 = (ite (= #1608 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1614 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1615 = (bvadd #1584 (_ bv1 64)) 
	 -> #1616 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1615 (bvxor #1584 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1617 = (ite (= ((_ extract 63 63) (bvand (bvxor #1584 (bvnot (_ bv1 64))) (bvxor #1584 #1615))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1618 = (ite (= (parity_flag ((_ extract 7 0) #1615)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1619 = (ite (= ((_ extract 63 63) #1615) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1620 = (ite (= #1615 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1621 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1622 = (bvand ((_ extract 7 0) #1600) ((_ extract 7 0) #1600)) 
	 -> #1623 = (_ bv0 1) ; Clears carry flag
	 -> #1624 = (_ bv0 1) ; Clears overflow flag
	 -> #1625 = (ite (= (parity_flag ((_ extract 7 0) #1622)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1626 = (ite (= ((_ extract 7 7) #1622) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1627 = (ite (= #1622 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1628 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1629 = (_ bv95 8) 
	 -> #1630 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1631 = (bvsub ((_ extract 7 0) #1629) (_ bv95 8)) 
	 -> #1632 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1631 (bvxor ((_ extract 7 0) #1629) (_ bv95 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1633 = (ite (bvult ((_ extract 7 0) #1629) (_ bv95 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1634 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1629) (_ bv95 8)) (bvxor ((_ extract 7 0) #1629) #1631))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1635 = (ite (= (parity_flag ((_ extract 7 0) #1631)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1636 = (ite (= ((_ extract 7 7) #1631) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1637 = (ite (= #1631 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1638 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1639 = (bvadd #1608 (_ bv1 64)) 
	 -> #1640 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1639 (bvxor #1608 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1641 = (ite (= ((_ extract 63 63) (bvand (bvxor #1608 (bvnot (_ bv1 64))) (bvxor #1608 #1639))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1642 = (ite (= (parity_flag ((_ extract 7 0) #1639)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1643 = (ite (= ((_ extract 63 63) #1639) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1644 = (ite (= #1639 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1645 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1646 = (bvadd #1615 (_ bv1 64)) 
	 -> #1647 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1646 (bvxor #1615 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1648 = (ite (= ((_ extract 63 63) (bvand (bvxor #1615 (bvnot (_ bv1 64))) (bvxor #1615 #1646))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1649 = (ite (= (parity_flag ((_ extract 7 0) #1646)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1650 = (ite (= ((_ extract 63 63) #1646) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1651 = (ite (= #1646 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1652 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1653 = (bvand ((_ extract 7 0) #1631) ((_ extract 7 0) #1631)) 
	 -> #1654 = (_ bv0 1) ; Clears carry flag
	 -> #1655 = (_ bv0 1) ; Clears overflow flag
	 -> #1656 = (ite (= (parity_flag ((_ extract 7 0) #1653)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1657 = (ite (= ((_ extract 7 7) #1653) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1658 = (ite (= #1653 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1659 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1660 = (_ bv50 8) 
	 -> #1661 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1662 = (bvsub ((_ extract 7 0) #1660) (_ bv50 8)) 
	 -> #1663 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1662 (bvxor ((_ extract 7 0) #1660) (_ bv50 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1664 = (ite (bvult ((_ extract 7 0) #1660) (_ bv50 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1665 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1660) (_ bv50 8)) (bvxor ((_ extract 7 0) #1660) #1662))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1666 = (ite (= (parity_flag ((_ extract 7 0) #1662)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1667 = (ite (= ((_ extract 7 7) #1662) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1668 = (ite (= #1662 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1669 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1670 = (bvadd #1639 (_ bv1 64)) 
	 -> #1671 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1670 (bvxor #1639 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1672 = (ite (= ((_ extract 63 63) (bvand (bvxor #1639 (bvnot (_ bv1 64))) (bvxor #1639 #1670))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1673 = (ite (= (parity_flag ((_ extract 7 0) #1670)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1674 = (ite (= ((_ extract 63 63) #1670) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1675 = (ite (= #1670 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1676 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1677 = (bvadd #1646 (_ bv1 64)) 
	 -> #1678 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1677 (bvxor #1646 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1679 = (ite (= ((_ extract 63 63) (bvand (bvxor #1646 (bvnot (_ bv1 64))) (bvxor #1646 #1677))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1680 = (ite (= (parity_flag ((_ extract 7 0) #1677)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1681 = (ite (= ((_ extract 63 63) #1677) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1682 = (ite (= #1677 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1683 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1684 = (bvand ((_ extract 7 0) #1662) ((_ extract 7 0) #1662)) 
	 -> #1685 = (_ bv0 1) ; Clears carry flag
	 -> #1686 = (_ bv0 1) ; Clears overflow flag
	 -> #1687 = (ite (= (parity_flag ((_ extract 7 0) #1684)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1688 = (ite (= ((_ extract 7 7) #1684) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1689 = (ite (= #1684 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1690 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1691 = (_ bv46 8) 
	 -> #1692 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1693 = (bvsub ((_ extract 7 0) #1691) (_ bv46 8)) 
	 -> #1694 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1693 (bvxor ((_ extract 7 0) #1691) (_ bv46 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1695 = (ite (bvult ((_ extract 7 0) #1691) (_ bv46 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1696 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1691) (_ bv46 8)) (bvxor ((_ extract 7 0) #1691) #1693))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1697 = (ite (= (parity_flag ((_ extract 7 0) #1693)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1698 = (ite (= ((_ extract 7 7) #1693) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1699 = (ite (= #1693 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1700 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1701 = (bvadd #1670 (_ bv1 64)) 
	 -> #1702 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1701 (bvxor #1670 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1703 = (ite (= ((_ extract 63 63) (bvand (bvxor #1670 (bvnot (_ bv1 64))) (bvxor #1670 #1701))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1704 = (ite (= (parity_flag ((_ extract 7 0) #1701)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1705 = (ite (= ((_ extract 63 63) #1701) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1706 = (ite (= #1701 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1707 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1708 = (bvadd #1677 (_ bv1 64)) 
	 -> #1709 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1708 (bvxor #1677 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1710 = (ite (= ((_ extract 63 63) (bvand (bvxor #1677 (bvnot (_ bv1 64))) (bvxor #1677 #1708))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1711 = (ite (= (parity_flag ((_ extract 7 0) #1708)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1712 = (ite (= ((_ extract 63 63) #1708) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1713 = (ite (= #1708 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1714 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1715 = (bvand ((_ extract 7 0) #1693) ((_ extract 7 0) #1693)) 
	 -> #1716 = (_ bv0 1) ; Clears carry flag
	 -> #1717 = (_ bv0 1) ; Clears overflow flag
	 -> #1718 = (ite (= (parity_flag ((_ extract 7 0) #1715)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1719 = (ite (= ((_ extract 7 7) #1715) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1720 = (ite (= #1715 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1721 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1722 = (_ bv50 8) 
	 -> #1723 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1724 = (bvsub ((_ extract 7 0) #1722) (_ bv50 8)) 
	 -> #1725 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1724 (bvxor ((_ extract 7 0) #1722) (_ bv50 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1726 = (ite (bvult ((_ extract 7 0) #1722) (_ bv50 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1727 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1722) (_ bv50 8)) (bvxor ((_ extract 7 0) #1722) #1724))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1728 = (ite (= (parity_flag ((_ extract 7 0) #1724)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1729 = (ite (= ((_ extract 7 7) #1724) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1730 = (ite (= #1724 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1731 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1732 = (bvadd #1701 (_ bv1 64)) 
	 -> #1733 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1732 (bvxor #1701 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1734 = (ite (= ((_ extract 63 63) (bvand (bvxor #1701 (bvnot (_ bv1 64))) (bvxor #1701 #1732))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1735 = (ite (= (parity_flag ((_ extract 7 0) #1732)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1736 = (ite (= ((_ extract 63 63) #1732) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1737 = (ite (= #1732 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1738 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1739 = (bvadd #1708 (_ bv1 64)) 
	 -> #1740 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1739 (bvxor #1708 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1741 = (ite (= ((_ extract 63 63) (bvand (bvxor #1708 (bvnot (_ bv1 64))) (bvxor #1708 #1739))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1742 = (ite (= (parity_flag ((_ extract 7 0) #1739)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1743 = (ite (= ((_ extract 63 63) #1739) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1744 = (ite (= #1739 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1745 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1746 = (bvand ((_ extract 7 0) #1724) ((_ extract 7 0) #1724)) 
	 -> #1747 = (_ bv0 1) ; Clears carry flag
	 -> #1748 = (_ bv0 1) ; Clears overflow flag
	 -> #1749 = (ite (= (parity_flag ((_ extract 7 0) #1746)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1750 = (ite (= ((_ extract 7 7) #1746) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1751 = (ite (= #1746 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1752 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1753 = (_ bv46 8) 
	 -> #1754 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1755 = (bvsub ((_ extract 7 0) #1753) (_ bv46 8)) 
	 -> #1756 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1755 (bvxor ((_ extract 7 0) #1753) (_ bv46 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1757 = (ite (bvult ((_ extract 7 0) #1753) (_ bv46 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1758 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1753) (_ bv46 8)) (bvxor ((_ extract 7 0) #1753) #1755))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1759 = (ite (= (parity_flag ((_ extract 7 0) #1755)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1760 = (ite (= ((_ extract 7 7) #1755) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1761 = (ite (= #1755 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1762 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1763 = (bvadd #1732 (_ bv1 64)) 
	 -> #1764 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1763 (bvxor #1732 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1765 = (ite (= ((_ extract 63 63) (bvand (bvxor #1732 (bvnot (_ bv1 64))) (bvxor #1732 #1763))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1766 = (ite (= (parity_flag ((_ extract 7 0) #1763)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1767 = (ite (= ((_ extract 63 63) #1763) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1768 = (ite (= #1763 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1769 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1770 = (bvadd #1739 (_ bv1 64)) 
	 -> #1771 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1770 (bvxor #1739 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1772 = (ite (= ((_ extract 63 63) (bvand (bvxor #1739 (bvnot (_ bv1 64))) (bvxor #1739 #1770))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1773 = (ite (= (parity_flag ((_ extract 7 0) #1770)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1774 = (ite (= ((_ extract 63 63) #1770) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1775 = (ite (= #1770 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1776 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1777 = (bvand ((_ extract 7 0) #1755) ((_ extract 7 0) #1755)) 
	 -> #1778 = (_ bv0 1) ; Clears carry flag
	 -> #1779 = (_ bv0 1) ; Clears overflow flag
	 -> #1780 = (ite (= (parity_flag ((_ extract 7 0) #1777)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1781 = (ite (= ((_ extract 7 7) #1777) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1782 = (ite (= #1777 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1783 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1784 = (_ bv53 8) 
	 -> #1785 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1786 = (bvsub ((_ extract 7 0) #1784) (_ bv53 8)) 
	 -> #1787 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1786 (bvxor ((_ extract 7 0) #1784) (_ bv53 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1788 = (ite (bvult ((_ extract 7 0) #1784) (_ bv53 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1789 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1784) (_ bv53 8)) (bvxor ((_ extract 7 0) #1784) #1786))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1790 = (ite (= (parity_flag ((_ extract 7 0) #1786)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1791 = (ite (= ((_ extract 7 7) #1786) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1792 = (ite (= #1786 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1793 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1794 = (bvadd #1763 (_ bv1 64)) 
	 -> #1795 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1794 (bvxor #1763 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1796 = (ite (= ((_ extract 63 63) (bvand (bvxor #1763 (bvnot (_ bv1 64))) (bvxor #1763 #1794))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1797 = (ite (= (parity_flag ((_ extract 7 0) #1794)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1798 = (ite (= ((_ extract 63 63) #1794) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1799 = (ite (= #1794 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1800 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1801 = (bvadd #1770 (_ bv1 64)) 
	 -> #1802 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1801 (bvxor #1770 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1803 = (ite (= ((_ extract 63 63) (bvand (bvxor #1770 (bvnot (_ bv1 64))) (bvxor #1770 #1801))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1804 = (ite (= (parity_flag ((_ extract 7 0) #1801)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1805 = (ite (= ((_ extract 63 63) #1801) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1806 = (ite (= #1801 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1807 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1808 = (bvand ((_ extract 7 0) #1786) ((_ extract 7 0) #1786)) 
	 -> #1809 = (_ bv0 1) ; Clears carry flag
	 -> #1810 = (_ bv0 1) ; Clears overflow flag
	 -> #1811 = (ite (= (parity_flag ((_ extract 7 0) #1808)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1812 = (ite (= ((_ extract 7 7) #1808) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1813 = (ite (= #1808 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1814 = (_ bv140283850359374 64) ; RIP

0x7f9661118240: mov al, byte ptr [rdi]
	 -> #1815 = (_ bv0 8) 
	 -> #1816 = (_ bv140283850359362 64) ; RIP

0x7f9661118242: cmp al, byte ptr [rsi]
	 -> #1817 = (bvsub ((_ extract 7 0) #1815) (_ bv0 8)) 
	 -> #1818 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1817 (bvxor ((_ extract 7 0) #1815) (_ bv0 8))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1819 = (ite (bvult ((_ extract 7 0) #1815) (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1820 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1815) (_ bv0 8)) (bvxor ((_ extract 7 0) #1815) #1817))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1821 = (ite (= (parity_flag ((_ extract 7 0) #1817)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1822 = (ite (= ((_ extract 7 7) #1817) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1823 = (ite (= #1817 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1824 = (_ bv140283850359364 64) ; RIP

0x7f9661118244: jnz 0x7f9661118253

0x7f9661118246: inc rdi
	 -> #1825 = (bvadd #1794 (_ bv1 64)) 
	 -> #1826 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1825 (bvxor #1794 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1827 = (ite (= ((_ extract 63 63) (bvand (bvxor #1794 (bvnot (_ bv1 64))) (bvxor #1794 #1825))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1828 = (ite (= (parity_flag ((_ extract 7 0) #1825)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1829 = (ite (= ((_ extract 63 63) #1825) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1830 = (ite (= #1825 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1831 = (_ bv140283850359369 64) ; RIP

0x7f9661118249: inc rsi
	 -> #1832 = (bvadd #1801 (_ bv1 64)) 
	 -> #1833 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1832 (bvxor #1801 (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1834 = (ite (= ((_ extract 63 63) (bvand (bvxor #1801 (bvnot (_ bv1 64))) (bvxor #1801 #1832))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1835 = (ite (= (parity_flag ((_ extract 7 0) #1832)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1836 = (ite (= ((_ extract 63 63) #1832) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1837 = (ite (= #1832 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1838 = (_ bv140283850359372 64) ; RIP

0x7f966111824c: test al, al
	 -> #1839 = (bvand ((_ extract 7 0) #1817) ((_ extract 7 0) #1817)) 
	 -> #1840 = (_ bv0 1) ; Clears carry flag
	 -> #1841 = (_ bv0 1) ; Clears overflow flag
	 -> #1842 = (ite (= (parity_flag ((_ extract 7 0) #1839)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1843 = (ite (= ((_ extract 7 7) #1839) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1844 = (ite (= #1839 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1845 = (_ bv140283850359374 64) ; RIP

0x7f966111824e: jnz 0x7f9661118240

0x7f9661118250: xor eax, eax
	 -> #1846 = (bvxor ((_ extract 31 0) #1817) ((_ extract 31 0) #1817)) 
	 -> #1847 = (_ bv0 1) ; Clears carry flag
	 -> #1848 = (_ bv0 1) ; Clears overflow flag
	 -> #1849 = (ite (= (parity_flag ((_ extract 7 0) #1846)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1850 = (ite (= ((_ extract 31 31) #1846) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1851 = (ite (= #1846 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1852 = (_ bv140283850359378 64) ; RIP

0x7f9661118252: ret 
	 -> #1853 = #1472 ; RIP
	 -> #1854 = (bvadd #1471 (_ bv8 64)) ; Aligns stack

0x7f9661108d6c: test eax, eax
	 -> #1855 = (bvand ((_ extract 31 0) #1846) ((_ extract 31 0) #1846)) 
	 -> #1856 = (_ bv0 1) ; Clears carry flag
	 -> #1857 = (_ bv0 1) ; Clears overflow flag
	 -> #1858 = (ite (= (parity_flag ((_ extract 7 0) #1855)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1859 = (ite (= ((_ extract 31 31) #1855) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1860 = (ite (= #1855 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1861 = (_ bv140283850296686 64) ; RIP

0x7f9661108cf2: add rsp, 0x8
	 -> #1862 = (bvadd ((_ extract 63 0) #1854) (_ bv8 64)) 
	 -> #1863 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1862 (bvxor ((_ extract 63 0) #1854) (_ bv8 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1864 = (ite (bvult #1862 ((_ extract 63 0) #1854)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1865 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1854) (bvnot (_ bv8 64))) (bvxor ((_ extract 63 0) #1854) #1862))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1866 = (ite (= (parity_flag ((_ extract 7 0) #1862)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1867 = (ite (= ((_ extract 63 63) #1862) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1868 = (ite (= #1862 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1869 = (_ bv140283850296566 64) ; RIP

0x7f9661108cf6: mov rax, rbx
	 -> #1870 = ((_ extract 63 0) #1232) 
	 -> #1871 = (_ bv140283850296569 64) ; RIP

0x7f9661108cf9: pop rbx
	 -> #1872 = #1177 
	 -> #1873 = (bvadd #1862 (_ bv8 64)) ; Aligns stack
	 -> #1874 = (_ bv140283850296570 64) ; RIP

0x7f9661108cfa: pop rbp
	 -> #1875 = #1172 
	 -> #1876 = (bvadd #1873 (_ bv8 64)) ; Aligns stack
	 -> #1877 = (_ bv140283850296571 64) ; RIP

0x7f9661108cfb: pop r12
	 -> #1878 = #1169 
	 -> #1879 = (bvadd #1876 (_ bv8 64)) ; Aligns stack
	 -> #1880 = (_ bv140283850296573 64) ; RIP

0x7f9661108cfd: pop r13
	 -> #1881 = #1162 
	 -> #1882 = (bvadd #1879 (_ bv8 64)) ; Aligns stack
	 -> #1883 = (_ bv140283850296575 64) ; RIP

0x7f9661108cff: ret 
	 -> #1884 = #1159 ; RIP
	 -> #1885 = (bvadd #1882 (_ bv8 64)) ; Aligns stack

0x7f9661109097: test rax, rax
	 -> #1886 = (bvand ((_ extract 63 0) #1870) ((_ extract 63 0) #1870)) 
	 -> #1887 = (_ bv0 1) ; Clears carry flag
	 -> #1888 = (_ bv0 1) ; Clears overflow flag
	 -> #1889 = (ite (= (parity_flag ((_ extract 7 0) #1886)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1890 = (ite (= ((_ extract 63 63) #1886) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1891 = (ite (= #1886 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1892 = (_ bv140283850297498 64) ; RIP

0x7f966110909a: mov r11d, dword ptr [rsp+0x8c]
	 -> #1893 = ((_ extract 31 0) #1152) 
	 -> #1894 = (_ bv140283850297506 64) ; RIP

0x7f9661109793: mov r10, qword ptr [rsp+0xf8]
	 -> #1895 = ((_ extract 63 0) #1071) 
	 -> #1896 = (_ bv140283850299291 64) ; RIP

0x7f966110979b: jmp 0x7f96611091df

0x7f96611091df: movzx edx, byte ptr [rax+0x4]
	 -> #1897 = ((_ zero_extend 24) (_ bv34 8)) 
	 -> #1898 = (_ bv140283850297827 64) ; RIP

0x7f96611091e3: shr dl, 0x4

0x7f96611091e6: cmp dl, 0x2
	 -> #1899 = (bvsub ((_ extract 7 0) #1897) ((_ sign_extend 0) (_ bv2 8))) 
	 -> #1900 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1899 (bvxor ((_ extract 7 0) #1897) ((_ sign_extend 0) (_ bv2 8)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1901 = (ite (bvult ((_ extract 7 0) #1897) ((_ sign_extend 0) (_ bv2 8))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1902 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1897) ((_ sign_extend 0) (_ bv2 8))) (bvxor ((_ extract 7 0) #1897) #1899))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1903 = (ite (= (parity_flag ((_ extract 7 0) #1899)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1904 = (ite (= ((_ extract 7 7) #1899) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1905 = (ite (= #1899 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1906 = (_ bv140283850297833 64) ; RIP

0x7f9661109378: mov edx, dword ptr [rip+0x21792e]
	 -> #1907 = (_ bv0 32) 
	 -> #1908 = (_ bv140283850298238 64) ; RIP

0x7f966110937e: test edx, edx
	 -> #1909 = (bvand ((_ extract 31 0) #1907) ((_ extract 31 0) #1907)) 
	 -> #1910 = (_ bv0 1) ; Clears carry flag
	 -> #1911 = (_ bv0 1) ; Clears overflow flag
	 -> #1912 = (ite (= (parity_flag ((_ extract 7 0) #1909)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1913 = (ite (= ((_ extract 31 31) #1909) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1914 = (ite (= #1909 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1915 = (_ bv140283850298240 64) ; RIP

0x7f9661109220: mov rsi, qword ptr [rsp+0x40]
	 -> #1916 = ((_ extract 63 0) #633) 
	 -> #1917 = (_ bv140283850297893 64) ; RIP

0x7f9661109225: mov qword ptr [rsi], rax
	 -> #1918 = ((_ extract 63 0) #1870) 
	 -> #1919 = (_ bv140283850297896 64) ; RIP

0x7f9661109228: mov qword ptr [rsi+0x8], rbx
	 -> #1920 = ((_ extract 63 0) #1872) 
	 -> #1921 = (_ bv140283850297900 64) ; RIP

0x7f966110922c: mov eax, 0x1
	 -> #1922 = (_ bv1 32) 
	 -> #1923 = (_ bv140283850297905 64) ; RIP

0x7f9661109231: jmp 0x7f9661108f60

0x7f9661108f60: add rsp, 0xa8
	 -> #1924 = (bvadd ((_ extract 63 0) #1885) (_ bv168 64)) 
	 -> #1925 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1924 (bvxor ((_ extract 63 0) #1885) (_ bv168 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1926 = (ite (bvult #1924 ((_ extract 63 0) #1885)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1927 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #1885) (bvnot (_ bv168 64))) (bvxor ((_ extract 63 0) #1885) #1924))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1928 = (ite (= (parity_flag ((_ extract 7 0) #1924)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1929 = (ite (= ((_ extract 63 63) #1924) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1930 = (ite (= #1924 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1931 = (_ bv140283850297191 64) ; RIP

0x7f9661108f67: pop rbx
	 -> #1932 = #615 
	 -> #1933 = (bvadd #1924 (_ bv8 64)) ; Aligns stack
	 -> #1934 = (_ bv140283850297192 64) ; RIP

0x7f9661108f68: pop rbp
	 -> #1935 = #612 
	 -> #1936 = (bvadd #1933 (_ bv8 64)) ; Aligns stack
	 -> #1937 = (_ bv140283850297193 64) ; RIP

0x7f9661108f69: pop r12
	 -> #1938 = #607 
	 -> #1939 = (bvadd #1936 (_ bv8 64)) ; Aligns stack
	 -> #1940 = (_ bv140283850297195 64) ; RIP

0x7f9661108f6b: pop r13
	 -> #1941 = #604 
	 -> #1942 = (bvadd #1939 (_ bv8 64)) ; Aligns stack
	 -> #1943 = (_ bv140283850297197 64) ; RIP

0x7f9661108f6d: pop r14
	 -> #1944 = #601 
	 -> #1945 = (bvadd #1942 (_ bv8 64)) ; Aligns stack
	 -> #1946 = (_ bv140283850297199 64) ; RIP

0x7f9661108f6f: pop r15
	 -> #1947 = #598 
	 -> #1948 = (bvadd #1945 (_ bv8 64)) ; Aligns stack
	 -> #1949 = (_ bv140283850297201 64) ; RIP

0x7f9661108f71: ret 
	 -> #1950 = #595 ; RIP
	 -> #1951 = (bvadd #1948 (_ bv8 64)) ; Aligns stack

0x7f96611099ad: cmp eax, 0x0
	 -> #1952 = (bvsub ((_ extract 31 0) #1922) ((_ sign_extend 0) (_ bv0 32))) 
	 -> #1953 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #1952 (bvxor ((_ extract 31 0) #1922) ((_ sign_extend 0) (_ bv0 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1954 = (ite (bvult ((_ extract 31 0) #1922) ((_ sign_extend 0) (_ bv0 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1955 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #1922) ((_ sign_extend 0) (_ bv0 32))) (bvxor ((_ extract 31 0) #1922) #1952))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1956 = (ite (= (parity_flag ((_ extract 7 0) #1952)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1957 = (ite (= ((_ extract 31 31) #1952) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1958 = (ite (= #1952 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1959 = (_ bv140283850299824 64) ; RIP

0x7f96611099b0: jle 0x7f9661109950

0x7f96611099b2: cmp qword ptr [rbp-0x90], 0x0
	 -> #1960 = (bvsub #1918 ((_ sign_extend 0) (_ bv0 64))) 
	 -> #1961 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #1960 (bvxor #1918 ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1962 = (ite (bvult #1918 ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1963 = (ite (= ((_ extract 63 63) (bvand (bvxor #1918 ((_ sign_extend 0) (_ bv0 64))) (bvxor #1918 #1960))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1964 = (ite (= (parity_flag ((_ extract 7 0) #1960)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1965 = (ite (= ((_ extract 63 63) #1960) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1966 = (ite (= #1960 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1967 = (_ bv140283850299834 64) ; RIP

0x7f96611099ba: jz 0x7f966110a0e1

0x7f96611099c0: mov rcx, qword ptr [r13]
	 -> #1968 = ((_ extract 63 0) #214) 
	 -> #1969 = (_ bv140283850299844 64) ; RIP

0x7f96611099c4: test rcx, rcx
	 -> #1970 = (bvand ((_ extract 63 0) #1968) ((_ extract 63 0) #1968)) 
	 -> #1971 = (_ bv0 1) ; Clears carry flag
	 -> #1972 = (_ bv0 1) ; Clears overflow flag
	 -> #1973 = (ite (= (parity_flag ((_ extract 7 0) #1970)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1974 = (ite (= ((_ extract 63 63) #1970) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1975 = (ite (= #1970 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1976 = (_ bv140283850299847 64) ; RIP

0x7f96611099c7: jz 0x7f96611099d4

0x7f96611099c9: movzx eax, byte ptr [rcx+0x5]
	 -> #1977 = ((_ zero_extend 24) (_ bv0 8)) 
	 -> #1978 = (_ bv140283850299853 64) ; RIP

0x7f96611099cd: and eax, 0x3
	 -> #1979 = (bvand ((_ extract 31 0) #1977) (_ bv3 32)) 
	 -> #1980 = (_ bv0 1) ; Clears carry flag
	 -> #1981 = (_ bv0 1) ; Clears overflow flag
	 -> #1982 = (ite (= (parity_flag ((_ extract 7 0) #1979)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1983 = (ite (= ((_ extract 31 31) #1979) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1984 = (ite (= #1979 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1985 = (_ bv140283850299856 64) ; RIP

0x7f96611099d0: cmp al, 0x3
	 -> #1986 = (bvsub ((_ extract 7 0) #1979) ((_ sign_extend 0) (_ bv3 8))) 
	 -> #1987 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #1986 (bvxor ((_ extract 7 0) #1979) ((_ sign_extend 0) (_ bv3 8)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #1988 = (ite (bvult ((_ extract 7 0) #1979) ((_ sign_extend 0) (_ bv3 8))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #1989 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #1979) ((_ sign_extend 0) (_ bv3 8))) (bvxor ((_ extract 7 0) #1979) #1986))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #1990 = (ite (= (parity_flag ((_ extract 7 0) #1986)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #1991 = (ite (= ((_ extract 7 7) #1986) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #1992 = (ite (= #1986 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #1993 = (_ bv140283850299858 64) ; RIP

0x7f96611099d2: jz 0x7f9661109a30

0x7f96611099d4: mov r12, qword ptr [rbp-0x88]
	 -> #1994 = ((_ extract 63 0) #1920) 
	 -> #1995 = (_ bv140283850299867 64) ; RIP

0x7f96611099db: xor r9d, r9d
	 -> #1996 = (bvxor ((_ extract 31 0) #549) ((_ extract 31 0) #549)) 
	 -> #1997 = (_ bv0 1) ; Clears carry flag
	 -> #1998 = (_ bv0 1) ; Clears overflow flag
	 -> #1999 = (ite (= (parity_flag ((_ extract 7 0) #1996)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2000 = (ite (= ((_ extract 31 31) #1996) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2001 = (ite (= #1996 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2002 = (_ bv140283850299870 64) ; RIP

0x7f96611099de: movzx eax, byte ptr [r12+0x314]
	 -> #2003 = ((_ zero_extend 24) (_ bv29 8)) 
	 -> #2004 = (_ bv140283850299879 64) ; RIP

0x7f96611099e7: and eax, 0x3
	 -> #2005 = (bvand ((_ extract 31 0) #2003) (_ bv3 32)) 
	 -> #2006 = (_ bv0 1) ; Clears carry flag
	 -> #2007 = (_ bv0 1) ; Clears overflow flag
	 -> #2008 = (ite (= (parity_flag ((_ extract 7 0) #2005)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2009 = (ite (= ((_ extract 31 31) #2005) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2010 = (ite (= #2005 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2011 = (_ bv140283850299882 64) ; RIP

0x7f96611099ea: cmp al, 0x2
	 -> #2012 = (bvsub ((_ extract 7 0) #2005) ((_ sign_extend 0) (_ bv2 8))) 
	 -> #2013 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #2012 (bvxor ((_ extract 7 0) #2005) ((_ sign_extend 0) (_ bv2 8)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2014 = (ite (bvult ((_ extract 7 0) #2005) ((_ sign_extend 0) (_ bv2 8))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2015 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #2005) ((_ sign_extend 0) (_ bv2 8))) (bvxor ((_ extract 7 0) #2005) #2012))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2016 = (ite (= (parity_flag ((_ extract 7 0) #2012)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2017 = (ite (= ((_ extract 7 7) #2012) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2018 = (ite (= #2012 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2019 = (_ bv140283850299884 64) ; RIP

0x7f96611099ec: mov rax, r12
	 -> #2020 = ((_ extract 63 0) #1994) 
	 -> #2021 = (_ bv140283850299887 64) ; RIP

0x7f96611099ef: jz 0x7f9661109d04

0x7f96611099f5: mov edx, dword ptr [rax+0x3cc]
	 -> #2022 = (_ bv1 32) 
	 -> #2023 = (_ bv140283850299899 64) ; RIP

0x7f96611099fb: test edx, edx
	 -> #2024 = (bvand ((_ extract 31 0) #2022) ((_ extract 31 0) #2022)) 
	 -> #2025 = (_ bv0 1) ; Clears carry flag
	 -> #2026 = (_ bv0 1) ; Clears overflow flag
	 -> #2027 = (ite (= (parity_flag ((_ extract 7 0) #2024)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2028 = (ite (= ((_ extract 31 31) #2024) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2029 = (ite (= #2024 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2030 = (_ bv140283850299901 64) ; RIP

0x7f96611099fd: jz 0x7f9661109cf5

0x7f9661109a03: mov edx, dword ptr [rip+0x217257]
	 -> #2031 = (_ bv0 32) 
	 -> #2032 = (_ bv140283850299913 64) ; RIP

0x7f9661109a09: test edx, 0x804
	 -> #2033 = (bvand ((_ extract 31 0) #2031) (_ bv2052 32)) 
	 -> #2034 = (_ bv0 1) ; Clears carry flag
	 -> #2035 = (_ bv0 1) ; Clears overflow flag
	 -> #2036 = (ite (= (parity_flag ((_ extract 7 0) #2033)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2037 = (ite (= ((_ extract 31 31) #2033) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2038 = (ite (= #2033 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2039 = (_ bv140283850299919 64) ; RIP

0x7f9661109a0f: jnz 0x7f9661109d7e

0x7f9661109a15: mov rdx, qword ptr [rbp-0x90]
	 -> #2040 = ((_ extract 63 0) #1960) 
	 -> #2041 = (_ bv140283850299932 64) ; RIP

0x7f9661109a1c: mov qword ptr [r13], rdx
	 -> #2042 = ((_ extract 63 0) #2040) 
	 -> #2043 = (_ bv140283850299936 64) ; RIP

0x7f9661109a20: lea rsp, ptr [rbp-0x28]

0x7f9661109a24: pop rbx
	 -> #2044 = #336 
	 -> #2045 = (bvadd #1951 (_ bv8 64)) ; Aligns stack
	 -> #2046 = (_ bv140283850299941 64) ; RIP

0x7f9661109a25: pop r12
	 -> #2047 = #333 
	 -> #2048 = (bvadd #2045 (_ bv8 64)) ; Aligns stack
	 -> #2049 = (_ bv140283850299943 64) ; RIP

0x7f9661109a27: pop r13
	 -> #2050 = #328 
	 -> #2051 = (bvadd #2048 (_ bv8 64)) ; Aligns stack
	 -> #2052 = (_ bv140283850299945 64) ; RIP

0x7f9661109a29: pop r14
	 -> #2053 = #323 
	 -> #2054 = (bvadd #2051 (_ bv8 64)) ; Aligns stack
	 -> #2055 = (_ bv140283850299947 64) ; RIP

0x7f9661109a2b: pop r15
	 -> #2056 = #318 
	 -> #2057 = (bvadd #2054 (_ bv8 64)) ; Aligns stack
	 -> #2058 = (_ bv140283850299949 64) ; RIP

0x7f9661109a2d: pop rbp
	 -> #2059 = #313 
	 -> #2060 = (bvadd #2057 (_ bv8 64)) ; Aligns stack
	 -> #2061 = (_ bv140283850299950 64) ; RIP

0x7f9661109a2e: ret 
	 -> #2062 = #310 ; RIP
	 -> #2063 = (bvadd #2060 (_ bv8 64)) ; Aligns stack

0x7f966110e0f7: mov rbp, rax
	 -> #2064 = ((_ extract 63 0) #2020) 
	 -> #2065 = (_ bv140283850318074 64) ; RIP

0x7f966110e0fa: mov eax, dword ptr fs:[0x18]
	 -> #2066 = (_ bv0 32) 
	 -> #2067 = (_ bv140283850318082 64) ; RIP

0x7f966110e102: test eax, eax
	 -> #2068 = (bvand ((_ extract 31 0) #2066) ((_ extract 31 0) #2066)) 
	 -> #2069 = (_ bv0 1) ; Clears carry flag
	 -> #2070 = (_ bv0 1) ; Clears overflow flag
	 -> #2071 = (ite (= (parity_flag ((_ extract 7 0) #2068)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2072 = (ite (= ((_ extract 31 31) #2068) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2073 = (ite (= #2068 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2074 = (_ bv140283850318084 64) ; RIP

0x7f966110e104: jnz 0x7f966110e1b0

0x7f966110e10a: mov eax, dword ptr fs:[0x4c]
	 -> #2075 = ((_ extract 31 0) #287) 
	 -> #2076 = (_ bv140283850318098 64) ; RIP

0x7f966110e112: test eax, eax
	 -> #2077 = (bvand ((_ extract 31 0) #2075) ((_ extract 31 0) #2075)) 
	 -> #2078 = (_ bv0 1) ; Clears carry flag
	 -> #2079 = (_ bv0 1) ; Clears overflow flag
	 -> #2080 = (ite (= (parity_flag ((_ extract 7 0) #2077)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2081 = (ite (= ((_ extract 31 31) #2077) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2082 = (ite (= #2077 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2083 = (_ bv140283850318100 64) ; RIP

0x7f966110e114: jz 0x7f966110e160

0x7f966110e116: mov dword ptr fs:[0x4c], r12d
	 -> #2084 = ((_ extract 31 0) #2047) 
	 -> #2085 = (_ bv140283850318111 64) ; RIP

0x7f966110e11f: mov rsi, qword ptr [rsp+0x18]
	 -> #2086 = ((_ extract 63 0) #2042) 
	 -> #2087 = (_ bv140283850318116 64) ; RIP

0x7f966110e124: test rsi, rsi
	 -> #2088 = (bvand ((_ extract 63 0) #2086) ((_ extract 63 0) #2086)) 
	 -> #2089 = (_ bv0 1) ; Clears carry flag
	 -> #2090 = (_ bv0 1) ; Clears overflow flag
	 -> #2091 = (ite (= (parity_flag ((_ extract 7 0) #2088)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2092 = (ite (= ((_ extract 63 63) #2088) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2093 = (ite (= #2088 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2094 = (_ bv140283850318119 64) ; RIP

0x7f966110e127: jz 0x7f966110e180

0x7f966110e129: test rbp, rbp
	 -> #2095 = (bvand ((_ extract 63 0) #2064) ((_ extract 63 0) #2064)) 
	 -> #2096 = (_ bv0 1) ; Clears carry flag
	 -> #2097 = (_ bv0 1) ; Clears overflow flag
	 -> #2098 = (ite (= (parity_flag ((_ extract 7 0) #2095)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2099 = (ite (= ((_ extract 63 63) #2095) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2100 = (ite (= #2095 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2101 = (_ bv140283850318124 64) ; RIP

0x7f966110e12c: jz 0x7f966110e188

0x7f966110e12e: mov rax, qword ptr [rbp]
	 -> #2102 = (_ bv140283480805376 64) 
	 -> #2103 = (_ bv140283850318130 64) ; RIP

0x7f966110e132: movzx edx, byte ptr [rsi+0x4]
	 -> #2104 = ((_ zero_extend 24) (_ bv34 8)) 
	 -> #2105 = (_ bv140283850318134 64) ; RIP

0x7f966110e136: add rax, qword ptr [rsi+0x8]
	 -> #2106 = (bvadd ((_ extract 63 0) #2102) #1200) 
	 -> #2107 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2106 (bvxor ((_ extract 63 0) #2102) #1200)))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2108 = (ite (bvult #2106 ((_ extract 63 0) #2102)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2109 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2102) (bvnot #1200)) (bvxor ((_ extract 63 0) #2102) #2106))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2110 = (ite (= (parity_flag ((_ extract 7 0) #2106)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2111 = (ite (= ((_ extract 63 63) #2106) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2112 = (ite (= #2106 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2113 = (_ bv140283850318138 64) ; RIP

0x7f966110e13a: and edx, 0xf
	 -> #2114 = (bvand ((_ extract 31 0) #2104) (_ bv15 32)) 
	 -> #2115 = (_ bv0 1) ; Clears carry flag
	 -> #2116 = (_ bv0 1) ; Clears overflow flag
	 -> #2117 = (ite (= (parity_flag ((_ extract 7 0) #2114)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2118 = (ite (= ((_ extract 31 31) #2114) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2119 = (ite (= #2114 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2120 = (_ bv140283850318141 64) ; RIP

0x7f966110e13d: cmp dl, 0xa
	 -> #2121 = (bvsub ((_ extract 7 0) #2114) ((_ sign_extend 0) (_ bv10 8))) 
	 -> #2122 = (ite (= (_ bv16 8) (bvand (_ bv16 8) (bvxor #2121 (bvxor ((_ extract 7 0) #2114) ((_ sign_extend 0) (_ bv10 8)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2123 = (ite (bvult ((_ extract 7 0) #2114) ((_ sign_extend 0) (_ bv10 8))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2124 = (ite (= ((_ extract 7 7) (bvand (bvxor ((_ extract 7 0) #2114) ((_ sign_extend 0) (_ bv10 8))) (bvxor ((_ extract 7 0) #2114) #2121))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2125 = (ite (= (parity_flag ((_ extract 7 0) #2121)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2126 = (ite (= ((_ extract 7 7) #2121) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2127 = (ite (= #2121 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2128 = (_ bv140283850318144 64) ; RIP

0x7f966110e140: jz 0x7f966110e1fa

0x7f966110e146: mov edx, dword ptr [rip+0x212b5c]
	 -> #2129 = (_ bv0 32) 
	 -> #2130 = (_ bv140283850318156 64) ; RIP

0x7f966110e14c: test edx, edx
	 -> #2131 = (bvand ((_ extract 31 0) #2129) ((_ extract 31 0) #2129)) 
	 -> #2132 = (_ bv0 1) ; Clears carry flag
	 -> #2133 = (_ bv0 1) ; Clears overflow flag
	 -> #2134 = (ite (= (parity_flag ((_ extract 7 0) #2131)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2135 = (ite (= ((_ extract 31 31) #2131) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2136 = (ite (= #2131 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2137 = (_ bv140283850318158 64) ; RIP

0x7f966110e14e: jnz 0x7f966110e153

0x7f966110e150: mov qword ptr [rbx], rax
	 -> #2138 = ((_ extract 63 0) #2106) 
	 -> #2139 = (_ bv140283850318163 64) ; RIP

0x7f966110e153: add rsp, 0x20
	 -> #2140 = (bvadd ((_ extract 63 0) #2063) (_ bv32 64)) 
	 -> #2141 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2140 (bvxor ((_ extract 63 0) #2063) (_ bv32 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2142 = (ite (bvult #2140 ((_ extract 63 0) #2063)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2143 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2063) (bvnot (_ bv32 64))) (bvxor ((_ extract 63 0) #2063) #2140))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2144 = (ite (= (parity_flag ((_ extract 7 0) #2140)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2145 = (ite (= ((_ extract 63 63) #2140) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2146 = (ite (= #2140 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2147 = (_ bv140283850318167 64) ; RIP

0x7f966110e157: pop rbx
	 -> #2148 = #186 
	 -> #2149 = (bvadd #2140 (_ bv8 64)) ; Aligns stack
	 -> #2150 = (_ bv140283850318168 64) ; RIP

0x7f966110e158: pop rbp
	 -> #2151 = #183 
	 -> #2152 = (bvadd #2149 (_ bv8 64)) ; Aligns stack
	 -> #2153 = (_ bv140283850318169 64) ; RIP

0x7f966110e159: pop r12
	 -> #2154 = #176 
	 -> #2155 = (bvadd #2152 (_ bv8 64)) ; Aligns stack
	 -> #2156 = (_ bv140283850318171 64) ; RIP

0x7f966110e15b: ret 
	 -> #2157 = #173 ; RIP
	 -> #2158 = (bvadd #2155 (_ bv8 64)) ; Aligns stack

0x7f9661114740: mov r11, rax
	 -> #2159 = ((_ extract 63 0) #2106) 
	 -> #2160 = (_ bv140283850344259 64) ; RIP

0x7f9661114743: nop sp, word ptr [rsp+0x30]

0x7f9661114749: nop sp, word ptr [rsp+0x20]

0x7f966111474f: nop sp, word ptr [rsp+0x10]

0x7f9661114755: nop sp, word ptr [rsp]

0x7f966111475a: mov r9, qword ptr [rsp+0x70]
	 -> #2161 = ((_ extract 63 0) #166) 
	 -> #2162 = (_ bv140283850344287 64) ; RIP

0x7f966111475f: mov r8, qword ptr [rsp+0x68]
	 -> #2163 = ((_ extract 63 0) #164) 
	 -> #2164 = (_ bv140283850344292 64) ; RIP

0x7f9661114764: mov rdi, qword ptr [rsp+0x60]
	 -> #2165 = ((_ extract 63 0) #162) 
	 -> #2166 = (_ bv140283850344297 64) ; RIP

0x7f9661114769: mov rsi, qword ptr [rsp+0x58]
	 -> #2167 = ((_ extract 63 0) #160) 
	 -> #2168 = (_ bv140283850344302 64) ; RIP

0x7f966111476e: mov rdx, qword ptr [rsp+0x50]
	 -> #2169 = ((_ extract 63 0) #158) 
	 -> #2170 = (_ bv140283850344307 64) ; RIP

0x7f9661114773: mov rcx, qword ptr [rsp+0x48]
	 -> #2171 = ((_ extract 63 0) #156) 
	 -> #2172 = (_ bv140283850344312 64) ; RIP

0x7f9661114778: mov rax, qword ptr [rsp+0x40]
	 -> #2173 = ((_ extract 63 0) #154) 
	 -> #2174 = (_ bv140283850344317 64) ; RIP

0x7f966111477d: add rsp, 0x88
	 -> #2175 = (bvadd ((_ extract 63 0) #2158) (_ bv136 64)) 
	 -> #2176 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2175 (bvxor ((_ extract 63 0) #2158) (_ bv136 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2177 = (ite (bvult #2175 ((_ extract 63 0) #2158)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2178 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2158) (bvnot (_ bv136 64))) (bvxor ((_ extract 63 0) #2158) #2175))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2179 = (ite (= (parity_flag ((_ extract 7 0) #2175)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2180 = (ite (= ((_ extract 63 63) #2175) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2181 = (ite (= #2175 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2182 = (_ bv140283850344324 64) ; RIP

0x7f9661114784: jmp r11

0x7f964b1142b0: push r12
	 -> #2183 = (bvsub #2175 (_ bv8 64)) ; Aligns stack
	 -> #2184 = #2154 
	 -> #2185 = (_ bv140283481244338 64) ; RIP

0x7f964b1142b2: mov r12, rdi
	 -> #2186 = ((_ extract 63 0) #2165) 
	 -> #2187 = (_ bv140283481244341 64) ; RIP

0x7f964b1142b5: push rbp
	 -> #2188 = (bvsub #2183 (_ bv8 64)) ; Aligns stack
	 -> #2189 = #2151 
	 -> #2190 = (_ bv140283481244342 64) ; RIP

0x7f964b1142b6: push rbx
	 -> #2191 = (bvsub #2188 (_ bv8 64)) ; Aligns stack
	 -> #2192 = #2148 
	 -> #2193 = (_ bv140283481244343 64) ; RIP

0x7f964b1142b7: call 0x7f964b12a4f0
	 -> #2194 = (bvsub #2191 (_ bv8 64)) ; Aligns stack
	 -> #2195 = (_ bv140283481244348 64) ; Saved RIP
	 -> #2196 = (_ bv140283481335024 64) ; RIP

0x7f964b12a4f0: pxor xmm8, xmm8

0x7f964b12a4f5: pxor xmm9, xmm9

0x7f964b12a4fa: pxor xmm10, xmm10

0x7f964b12a4ff: pxor xmm11, xmm11

0x7f964b12a504: mov rax, rdi
	 -> #2197 = ((_ extract 63 0) #2165) 
	 -> #2198 = (_ bv140283481335047 64) ; RIP

0x7f964b12a507: mov rcx, rdi
	 -> #2199 = ((_ extract 63 0) #2165) 
	 -> #2200 = (_ bv140283481335050 64) ; RIP

0x7f964b12a50a: and rcx, 0xfff
	 -> #2201 = (bvand ((_ extract 63 0) #2199) (_ bv4095 64)) 
	 -> #2202 = (_ bv0 1) ; Clears carry flag
	 -> #2203 = (_ bv0 1) ; Clears overflow flag
	 -> #2204 = (ite (= (parity_flag ((_ extract 7 0) #2201)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2205 = (ite (= ((_ extract 63 63) #2201) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2206 = (ite (= #2201 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2207 = (_ bv140283481335057 64) ; RIP

0x7f964b12a511: cmp rcx, 0xfcf
	 -> #2208 = (bvsub ((_ extract 63 0) #2201) ((_ sign_extend 0) (_ bv4047 64))) 
	 -> #2209 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2208 (bvxor ((_ extract 63 0) #2201) ((_ sign_extend 0) (_ bv4047 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2210 = (ite (bvult ((_ extract 63 0) #2201) ((_ sign_extend 0) (_ bv4047 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2211 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2201) ((_ sign_extend 0) (_ bv4047 64))) (bvxor ((_ extract 63 0) #2201) #2208))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2212 = (ite (= (parity_flag ((_ extract 7 0) #2208)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2213 = (ite (= ((_ extract 63 63) #2208) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2214 = (ite (= #2208 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2215 = (_ bv140283481335064 64) ; RIP

0x7f964b12a518: jnbe 0x7f964b12a580

0x7f964b12a51a: movdqu xmm12, xmmword ptr [rax]

0x7f964b12a51f: pcmpeqb xmm12, xmm8

0x7f964b12a524: pmovmskb edx, xmm12

0x7f964b12a529: test edx, edx
	 -> #2216 = (bvand ((_ extract 31 0) #2169) ((_ extract 31 0) #2169)) 
	 -> #2217 = (_ bv0 1) ; Clears carry flag
	 -> #2218 = (_ bv0 1) ; Clears overflow flag
	 -> #2219 = (ite (= (parity_flag ((_ extract 7 0) #2216)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2220 = (ite (= ((_ extract 31 31) #2216) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2221 = (ite (= #2216 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2222 = (_ bv140283481335083 64) ; RIP

0x7f964b12a52b: jz 0x7f964b12a531

0x7f964b12a52d: bsf eax, edx

0x7f964b12a530: ret 
	 -> #2223 = #2195 ; RIP
	 -> #2224 = (bvadd #2194 (_ bv8 64)) ; Aligns stack

0x7f964b1142bc: mov rbx, qword ptr [rip+0x32846d]
	 -> #2225 = (_ bv140283484553920 64) 
	 -> #2226 = (_ bv140283481244355 64) ; RIP

0x7f964b1142c3: mov rbp, rax
	 -> #2227 = ((_ extract 63 0) #2197) 
	 -> #2228 = (_ bv140283481244358 64) ; RIP

0x7f964b1142c6: mov eax, dword ptr [rbx]
	 -> #2229 = (_ bv4222427268 32) 
	 -> #2230 = (_ bv140283481244360 64) ; RIP

0x7f964b1142c8: mov rdi, rbx
	 -> #2231 = ((_ extract 63 0) #2225) 
	 -> #2232 = (_ bv140283481244363 64) ; RIP

0x7f964b1142cb: and eax, 0x8000
	 -> #2233 = (bvand ((_ extract 31 0) #2229) (_ bv32768 32)) 
	 -> #2234 = (_ bv0 1) ; Clears carry flag
	 -> #2235 = (_ bv0 1) ; Clears overflow flag
	 -> #2236 = (ite (= (parity_flag ((_ extract 7 0) #2233)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2237 = (ite (= ((_ extract 31 31) #2233) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2238 = (ite (= #2233 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2239 = (_ bv140283481244368 64) ; RIP

0x7f964b1142d0: jnz 0x7f964b114339

0x7f964b1142d2: mov r8, qword ptr [rbx+0x88]
	 -> #2240 = (_ bv140283484559296 64) 
	 -> #2241 = (_ bv140283481244377 64) ; RIP

0x7f964b1142d9: mov rdx, qword ptr fs:[0x10]
	 -> #2242 = (_ bv140283479598848 64) 
	 -> #2243 = (_ bv140283481244386 64) ; RIP

0x7f964b1142e2: cmp rdx, qword ptr [r8+0x8]
	 -> #2244 = (bvsub ((_ extract 63 0) #2242) (_ bv0 64)) 
	 -> #2245 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2244 (bvxor ((_ extract 63 0) #2242) (_ bv0 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2246 = (ite (bvult ((_ extract 63 0) #2242) (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2247 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2242) (_ bv0 64)) (bvxor ((_ extract 63 0) #2242) #2244))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2248 = (ite (= (parity_flag ((_ extract 7 0) #2244)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2249 = (ite (= ((_ extract 63 63) #2244) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2250 = (ite (= #2244 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2251 = (_ bv140283481244390 64) ; RIP

0x7f964b1142e6: jz 0x7f964b11432d

0x7f964b1142e8: mov esi, 0x1
	 -> #2252 = (_ bv1 32) 
	 -> #2253 = (_ bv140283481244397 64) ; RIP

0x7f964b1142ed: cmp dword ptr [rip+0x32c4c0], 0x0
	 -> #2254 = (bvsub (_ bv0 32) ((_ sign_extend 0) (_ bv0 32))) 
	 -> #2255 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2254 (bvxor (_ bv0 32) ((_ sign_extend 0) (_ bv0 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2256 = (ite (bvult (_ bv0 32) ((_ sign_extend 0) (_ bv0 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2257 = (ite (= ((_ extract 31 31) (bvand (bvxor (_ bv0 32) ((_ sign_extend 0) (_ bv0 32))) (bvxor (_ bv0 32) #2254))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2258 = (ite (= (parity_flag ((_ extract 7 0) #2254)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2259 = (ite (= ((_ extract 31 31) #2254) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2260 = (ite (= #2254 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2261 = (_ bv140283481244404 64) ; RIP

0x7f964b1142ff: cmpxchg dword ptr [r8], esi

0x7f964b11431b: mov rax, qword ptr [rbx+0x88]
	 -> #2262 = (_ bv140283484559296 64) 
	 -> #2263 = (_ bv140283481244450 64) ; RIP

0x7f964b114322: mov qword ptr [rax+0x8], rdx
	 -> #2264 = ((_ extract 63 0) #2244) 
	 -> #2265 = (_ bv140283481244454 64) ; RIP

0x7f964b114326: mov r8, qword ptr [rbx+0x88]
	 -> #2266 = (_ bv140283484559296 64) 
	 -> #2267 = (_ bv140283481244461 64) ; RIP

0x7f964b11432d: add dword ptr [r8+0x4], 0x1
	 -> #2268 = (bvadd (_ bv0 32) (_ bv1 32)) 
	 -> #2269 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2268 (bvxor (_ bv0 32) (_ bv1 32))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2270 = (ite (bvult #2268 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2271 = (ite (= ((_ extract 31 31) (bvand (bvxor (_ bv0 32) (bvnot (_ bv1 32))) (bvxor (_ bv0 32) #2268))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2272 = (ite (= (parity_flag ((_ extract 7 0) #2268)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2273 = (ite (= ((_ extract 31 31) #2268) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2274 = (ite (= #2268 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2275 = (_ bv140283481244466 64) ; RIP

0x7f964b114332: mov rdi, qword ptr [rip+0x3283f7]
	 -> #2276 = (_ bv140283484553920 64) 
	 -> #2277 = (_ bv140283481244473 64) ; RIP

0x7f964b114339: mov eax, dword ptr [rdi+0xc0]
	 -> #2278 = (_ bv0 32) 
	 -> #2279 = (_ bv140283481244479 64) ; RIP

0x7f964b11433f: test eax, eax
	 -> #2280 = (bvand ((_ extract 31 0) #2278) ((_ extract 31 0) #2278)) 
	 -> #2281 = (_ bv0 1) ; Clears carry flag
	 -> #2282 = (_ bv0 1) ; Clears overflow flag
	 -> #2283 = (ite (= (parity_flag ((_ extract 7 0) #2280)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2284 = (ite (= ((_ extract 31 31) #2280) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2285 = (ite (= #2280 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2286 = (_ bv140283481244481 64) ; RIP

0x7f964b114341: jnz 0x7f964b114400

0x7f964b114347: mov dword ptr [rdi+0xc0], 0xffffffff
	 -> #2287 = (_ bv18446744073709551615 32) 
	 -> #2288 = (_ bv140283481244497 64) ; RIP

0x7f964b114351: mov rax, qword ptr [rdi+0xd8]
	 -> #2289 = (_ bv140283484546720 64) 
	 -> #2290 = (_ bv140283481244504 64) ; RIP

0x7f964b114358: mov rdx, rbp
	 -> #2291 = ((_ extract 63 0) #2227) 
	 -> #2292 = (_ bv140283481244507 64) ; RIP

0x7f964b11435b: mov rsi, r12
	 -> #2293 = ((_ extract 63 0) #2186) 
	 -> #2294 = (_ bv140283481244510 64) ; RIP

0x7f964b11435e: call qword ptr [rax+0x38]
	 -> #2295 = (bvsub #2224 (_ bv8 64)) ; Aligns stack
	 -> #2296 = (_ bv140283481244513 64) ; Saved RIP
	 -> #2297 = (_ bv140283484546776 64) ; RIP

0x7f964b11d4d0: push r14
	 -> #2298 = (bvsub #2295 (_ bv8 64)) ; Aligns stack
	 -> #2299 = #2053 
	 -> #2300 = (_ bv140283481281746 64) ; RIP

0x7f964b11d4d2: xor eax, eax
	 -> #2301 = (bvxor ((_ extract 31 0) #2289) ((_ extract 31 0) #2289)) 
	 -> #2302 = (_ bv0 1) ; Clears carry flag
	 -> #2303 = (_ bv0 1) ; Clears overflow flag
	 -> #2304 = (ite (= (parity_flag ((_ extract 7 0) #2301)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2305 = (ite (= ((_ extract 31 31) #2301) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2306 = (ite (= #2301 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2307 = (_ bv140283481281748 64) ; RIP

0x7f964b11d4d4: test rdx, rdx
	 -> #2308 = (bvand ((_ extract 63 0) #2291) ((_ extract 63 0) #2291)) 
	 -> #2309 = (_ bv0 1) ; Clears carry flag
	 -> #2310 = (_ bv0 1) ; Clears overflow flag
	 -> #2311 = (ite (= (parity_flag ((_ extract 7 0) #2308)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2312 = (ite (= ((_ extract 63 63) #2308) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2313 = (ite (= #2308 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2314 = (_ bv140283481281751 64) ; RIP

0x7f964b11d4d7: push r13
	 -> #2315 = (bvsub #2298 (_ bv8 64)) ; Aligns stack
	 -> #2316 = #2050 
	 -> #2317 = (_ bv140283481281753 64) ; RIP

0x7f964b11d4d9: push r12
	 -> #2318 = (bvsub #2315 (_ bv8 64)) ; Aligns stack
	 -> #2319 = #2186 
	 -> #2320 = (_ bv140283481281755 64) ; RIP

0x7f964b11d4db: push rbp
	 -> #2321 = (bvsub #2318 (_ bv8 64)) ; Aligns stack
	 -> #2322 = #2227 
	 -> #2323 = (_ bv140283481281756 64) ; RIP

0x7f964b11d4dc: push rbx
	 -> #2324 = (bvsub #2321 (_ bv8 64)) ; Aligns stack
	 -> #2325 = #2225 
	 -> #2326 = (_ bv140283481281757 64) ; RIP

0x7f964b11d4dd: mov rbx, rdx
	 -> #2327 = ((_ extract 63 0) #2291) 
	 -> #2328 = (_ bv140283481281760 64) ; RIP

0x7f964b11d4e0: jz 0x7f964b11d546

0x7f964b11d4e2: mov eax, dword ptr [rdi]
	 -> #2329 = (_ bv4222427268 32) 
	 -> #2330 = (_ bv140283481281764 64) ; RIP

0x7f964b11d4e4: mov rbp, rdi
	 -> #2331 = ((_ extract 63 0) #2276) 
	 -> #2332 = (_ bv140283481281767 64) ; RIP

0x7f964b11d4e7: mov r12, rsi
	 -> #2333 = ((_ extract 63 0) #2293) 
	 -> #2334 = (_ bv140283481281770 64) ; RIP

0x7f964b11d4ea: and eax, 0xa00
	 -> #2335 = (bvand ((_ extract 31 0) #2329) (_ bv2560 32)) 
	 -> #2336 = (_ bv0 1) ; Clears carry flag
	 -> #2337 = (_ bv0 1) ; Clears overflow flag
	 -> #2338 = (ite (= (parity_flag ((_ extract 7 0) #2335)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2339 = (ite (= ((_ extract 31 31) #2335) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2340 = (ite (= #2335 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2341 = (_ bv140283481281775 64) ; RIP

0x7f964b11d4ef: cmp eax, 0xa00
	 -> #2342 = (bvsub ((_ extract 31 0) #2335) ((_ sign_extend 0) (_ bv2560 32))) 
	 -> #2343 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2342 (bvxor ((_ extract 31 0) #2335) ((_ sign_extend 0) (_ bv2560 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2344 = (ite (bvult ((_ extract 31 0) #2335) ((_ sign_extend 0) (_ bv2560 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2345 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2335) ((_ sign_extend 0) (_ bv2560 32))) (bvxor ((_ extract 31 0) #2335) #2342))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2346 = (ite (= (parity_flag ((_ extract 7 0) #2342)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2347 = (ite (= ((_ extract 31 31) #2342) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2348 = (ite (= #2342 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2349 = (_ bv140283481281780 64) ; RIP

0x7f964b11d4f4: jz 0x7f964b11d5c0

0x7f964b11d4fa: mov rdx, qword ptr [rdi+0x30]
	 -> #2350 = (_ bv0 64) 
	 -> #2351 = (_ bv140283481281790 64) ; RIP

0x7f964b11d4fe: mov rdi, qword ptr [rdi+0x28]
	 -> #2352 = (_ bv0 64) 
	 -> #2353 = (_ bv140283481281794 64) ; RIP

0x7f964b11d502: cmp rdx, rdi
	 -> #2354 = (bvsub ((_ extract 63 0) #2350) ((_ extract 63 0) #2352)) 
	 -> #2355 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2354 (bvxor ((_ extract 63 0) #2350) ((_ extract 63 0) #2352))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2356 = (ite (bvult ((_ extract 63 0) #2350) ((_ extract 63 0) #2352)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2357 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2350) ((_ extract 63 0) #2352)) (bvxor ((_ extract 63 0) #2350) #2354))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2358 = (ite (= (parity_flag ((_ extract 7 0) #2354)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2359 = (ite (= ((_ extract 63 63) #2354) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2360 = (ite (= #2354 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2361 = (_ bv140283481281797 64) ; RIP

0x7f964b11d550: xor r14d, r14d
	 -> #2362 = (bvxor ((_ extract 31 0) #2053) ((_ extract 31 0) #2053)) 
	 -> #2363 = (_ bv0 1) ; Clears carry flag
	 -> #2364 = (_ bv0 1) ; Clears overflow flag
	 -> #2365 = (ite (= (parity_flag ((_ extract 7 0) #2362)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2366 = (ite (= ((_ extract 31 31) #2362) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2367 = (ite (= #2362 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2368 = (_ bv140283481281875 64) ; RIP

0x7f964b11d553: mov r13, rbx
	 -> #2369 = ((_ extract 63 0) #2327) 
	 -> #2370 = (_ bv140283481281878 64) ; RIP

0x7f964b11d556: lea rax, ptr [r14+r13*1]

0x7f964b11d55a: test rax, rax
	 -> #2371 = (bvand ((_ extract 63 0) #2342) ((_ extract 63 0) #2342)) 
	 -> #2372 = (_ bv0 1) ; Clears carry flag
	 -> #2373 = (_ bv0 1) ; Clears overflow flag
	 -> #2374 = (ite (= (parity_flag ((_ extract 7 0) #2371)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2375 = (ite (= ((_ extract 63 63) #2371) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2376 = (ite (= #2371 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2377 = (_ bv140283481281885 64) ; RIP

0x7f964b11d55d: jz 0x7f964b11d540

0x7f964b11d55f: mov rax, qword ptr [rbp+0xd8]
	 -> #2378 = (_ bv140283484546720 64) 
	 -> #2379 = (_ bv140283481281894 64) ; RIP

0x7f964b11d566: mov esi, 0xffffffff
	 -> #2380 = (_ bv4294967295 32) 
	 -> #2381 = (_ bv140283481281899 64) ; RIP

0x7f964b11d56b: mov rdi, rbp
	 -> #2382 = ((_ extract 63 0) #2331) 
	 -> #2383 = (_ bv140283481281902 64) ; RIP

0x7f964b11d56e: call qword ptr [rax+0x18]
	 -> #2384 = (bvsub #2324 (_ bv8 64)) ; Aligns stack
	 -> #2385 = (_ bv140283481281905 64) ; Saved RIP
	 -> #2386 = (_ bv140283484546744 64) ; RIP

0x7f964b11e150: push r12
	 -> #2387 = (bvsub #2384 (_ bv8 64)) ; Aligns stack
	 -> #2388 = #2333 
	 -> #2389 = (_ bv140283481284946 64) ; RIP

0x7f964b11e152: push rbp
	 -> #2390 = (bvsub #2387 (_ bv8 64)) ; Aligns stack
	 -> #2391 = #2331 
	 -> #2392 = (_ bv140283481284947 64) ; RIP

0x7f964b11e153: push rbx
	 -> #2393 = (bvsub #2390 (_ bv8 64)) ; Aligns stack
	 -> #2394 = #2327 
	 -> #2395 = (_ bv140283481284948 64) ; RIP

0x7f964b11e154: mov ecx, dword ptr [rdi]
	 -> #2396 = (_ bv4222427268 32) 
	 -> #2397 = (_ bv140283481284950 64) ; RIP

0x7f964b11e156: mov rbx, rdi
	 -> #2398 = ((_ extract 63 0) #2382) 
	 -> #2399 = (_ bv140283481284953 64) ; RIP

0x7f964b11e159: test cl, 0x8
	 -> #2400 = (bvand ((_ extract 7 0) #2396) (_ bv8 8)) 
	 -> #2401 = (_ bv0 1) ; Clears carry flag
	 -> #2402 = (_ bv0 1) ; Clears overflow flag
	 -> #2403 = (ite (= (parity_flag ((_ extract 7 0) #2400)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2404 = (ite (= ((_ extract 7 7) #2400) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2405 = (ite (= #2400 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2406 = (_ bv140283481284956 64) ; RIP

0x7f964b11e15c: jnz 0x7f964b11e2c0

0x7f964b11e162: test ch, 0x8
	 -> #2407 = (bvand ((_ extract 7 0) #2396) (_ bv8 8)) 
	 -> #2408 = (_ bv0 1) ; Clears carry flag
	 -> #2409 = (_ bv0 1) ; Clears overflow flag
	 -> #2410 = (ite (= (parity_flag ((_ extract 7 0) #2407)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2411 = (ite (= ((_ extract 7 7) #2407) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2412 = (ite (= #2407 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2413 = (_ bv140283481284965 64) ; RIP

0x7f964b11e165: mov ebp, esi
	 -> #2414 = ((_ extract 31 0) #2380) 
	 -> #2415 = (_ bv140283481284967 64) ; RIP

0x7f964b11e1b8: cmp qword ptr [rdi+0x20], 0x0
	 -> #2416 = (bvsub (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) 
	 -> #2417 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2416 (bvxor (_ bv0 64) ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2418 = (ite (bvult (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2419 = (ite (= ((_ extract 63 63) (bvand (bvxor (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) (bvxor (_ bv0 64) #2416))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2420 = (ite (= (parity_flag ((_ extract 7 0) #2416)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2421 = (ite (= ((_ extract 63 63) #2416) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2422 = (ite (= #2416 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2423 = (_ bv140283481285053 64) ; RIP

0x7f964b11e2e0: mov rdi, rbx
	 -> #2424 = ((_ extract 63 0) #2398) 
	 -> #2425 = (_ bv140283481285347 64) ; RIP

0x7f964b11e2e3: call 0x7f964b11ee30
	 -> #2426 = (bvsub #2393 (_ bv8 64)) ; Aligns stack
	 -> #2427 = (_ bv140283481285352 64) ; Saved RIP
	 -> #2428 = (_ bv140283481288240 64) ; RIP

0x7f964b11ee30: push rbx
	 -> #2429 = (bvsub #2426 (_ bv8 64)) ; Aligns stack
	 -> #2430 = #2398 
	 -> #2431 = (_ bv140283481288241 64) ; RIP

0x7f964b11ee31: cmp qword ptr [rdi+0x38], 0x0
	 -> #2432 = (bvsub (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) 
	 -> #2433 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2432 (bvxor (_ bv0 64) ((_ sign_extend 0) (_ bv0 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2434 = (ite (bvult (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2435 = (ite (= ((_ extract 63 63) (bvand (bvxor (_ bv0 64) ((_ sign_extend 0) (_ bv0 64))) (bvxor (_ bv0 64) #2432))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2436 = (ite (= (parity_flag ((_ extract 7 0) #2432)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2437 = (ite (= ((_ extract 63 63) #2432) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2438 = (ite (= #2432 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2439 = (_ bv140283481288246 64) ; RIP

0x7f964b11ee36: mov rbx, rdi
	 -> #2440 = ((_ extract 63 0) #2424) 
	 -> #2441 = (_ bv140283481288249 64) ; RIP

0x7f964b11ee40: test byte ptr [rdi], 0x2
	 -> #2442 = (bvand (_ bv132 8) (_ bv2 8)) 
	 -> #2443 = (_ bv0 1) ; Clears carry flag
	 -> #2444 = (_ bv0 1) ; Clears overflow flag
	 -> #2445 = (ite (= (parity_flag ((_ extract 7 0) #2442)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2446 = (ite (= ((_ extract 7 7) #2442) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2447 = (ite (= #2442 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2448 = (_ bv140283481288259 64) ; RIP

0x7f964b11ee4f: mov rax, qword ptr [rbx+0xd8]
	 -> #2449 = (_ bv140283484546720 64) 
	 -> #2450 = (_ bv140283481288278 64) ; RIP

0x7f964b11ee56: mov rdi, rbx
	 -> #2451 = ((_ extract 63 0) #2440) 
	 -> #2452 = (_ bv140283481288281 64) ; RIP

0x7f964b11ee59: call qword ptr [rax+0x68]
	 -> #2453 = (bvsub #2429 (_ bv8 64)) ; Aligns stack
	 -> #2454 = (_ bv140283481288284 64) ; Saved RIP
	 -> #2455 = (_ bv140283484546824 64) ; RIP

0x7f964b111e40: push r12
	 -> #2456 = (bvsub #2453 (_ bv8 64)) ; Aligns stack
	 -> #2457 = #2333 
	 -> #2458 = (_ bv140283481235010 64) ; RIP

0x7f964b111e42: push rbp
	 -> #2459 = (bvsub #2456 (_ bv8 64)) ; Aligns stack
	 -> #2460 = #2414 
	 -> #2461 = (_ bv140283481235011 64) ; RIP

0x7f964b111e43: push rbx
	 -> #2462 = (bvsub #2459 (_ bv8 64)) ; Aligns stack
	 -> #2463 = #2440 
	 -> #2464 = (_ bv140283481235012 64) ; RIP

0x7f964b111e44: mov rbx, rdi
	 -> #2465 = ((_ extract 63 0) #2451) 
	 -> #2466 = (_ bv140283481235015 64) ; RIP

0x7f964b111e47: sub rsp, 0x90
	 -> #2467 = (bvsub ((_ extract 63 0) #2462) (_ bv144 64)) 
	 -> #2468 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2467 (bvxor ((_ extract 63 0) #2462) (_ bv144 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2469 = (ite (bvult ((_ extract 63 0) #2462) (_ bv144 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2470 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2462) (_ bv144 64)) (bvxor ((_ extract 63 0) #2462) #2467))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2471 = (ite (= (parity_flag ((_ extract 7 0) #2467)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2472 = (ite (= ((_ extract 63 63) #2467) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2473 = (ite (= #2467 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2474 = (_ bv140283481235022 64) ; RIP

0x7f964b111e4e: mov eax, dword ptr [rdi+0x70]
	 -> #2475 = (_ bv1 32) 
	 -> #2476 = (_ bv140283481235025 64) ; RIP

0x7f964b111e51: test eax, eax
	 -> #2477 = (bvand ((_ extract 31 0) #2475) ((_ extract 31 0) #2475)) 
	 -> #2478 = (_ bv0 1) ; Clears carry flag
	 -> #2479 = (_ bv0 1) ; Clears overflow flag
	 -> #2480 = (ite (= (parity_flag ((_ extract 7 0) #2477)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2481 = (ite (= ((_ extract 31 31) #2477) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2482 = (ite (= #2477 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2483 = (_ bv140283481235027 64) ; RIP

0x7f964b111e53: js 0x7f964b111e98

0x7f964b111e55: mov rax, qword ptr [rdi+0xd8]
	 -> #2484 = (_ bv140283484546720 64) 
	 -> #2485 = (_ bv140283481235036 64) ; RIP

0x7f964b111e5c: mov rsi, rsp
	 -> #2486 = ((_ extract 63 0) #2467) 
	 -> #2487 = (_ bv140283481235039 64) ; RIP

0x7f964b111e5f: call qword ptr [rax+0x90]
	 -> #2488 = (bvsub #2467 (_ bv8 64)) ; Aligns stack
	 -> #2489 = (_ bv140283481235045 64) ; Saved RIP
	 -> #2490 = (_ bv140283484546864 64) ; RIP

0x7f964b11cff0: mov rdx, rsi
	 -> #2491 = ((_ extract 63 0) #2486) 
	 -> #2492 = (_ bv140283481280499 64) ; RIP

0x7f964b11cff3: mov esi, dword ptr [rdi+0x70]
	 -> #2493 = (_ bv1 32) 
	 -> #2494 = (_ bv140283481280502 64) ; RIP

0x7f964b11cff6: mov edi, 0x1
	 -> #2495 = (_ bv1 32) 
	 -> #2496 = (_ bv140283481280507 64) ; RIP

0x7f964b11cffb: jmp 0x7f964b1837f0

0x7f964b1837f0: cmp edi, 0x1
	 -> #2497 = (bvsub ((_ extract 31 0) #2495) ((_ sign_extend 0) (_ bv1 32))) 
	 -> #2498 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2497 (bvxor ((_ extract 31 0) #2495) ((_ sign_extend 0) (_ bv1 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2499 = (ite (bvult ((_ extract 31 0) #2495) ((_ sign_extend 0) (_ bv1 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2500 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2495) ((_ sign_extend 0) (_ bv1 32))) (bvxor ((_ extract 31 0) #2495) #2497))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2501 = (ite (= (parity_flag ((_ extract 7 0) #2497)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2502 = (ite (= ((_ extract 31 31) #2497) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2503 = (ite (= #2497 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2504 = (_ bv140283481700339 64) ; RIP

0x7f964b1837f3: mov eax, esi
	 -> #2505 = ((_ extract 31 0) #2493) 
	 -> #2506 = (_ bv140283481700341 64) ; RIP

0x7f964b1837f5: jnbe 0x7f964b183810

0x7f964b1837f7: movsxd rdi, eax
	 -> #2507 = ((_ sign_extend 32) ((_ extract 31 0) #2505)) 
	 -> #2508 = (_ bv140283481700346 64) ; RIP

0x7f964b1837fa: mov rsi, rdx
	 -> #2509 = ((_ extract 63 0) #2491) 
	 -> #2510 = (_ bv140283481700349 64) ; RIP

0x7f964b1837fd: mov eax, 0x5
	 -> #2511 = (_ bv5 32) 
	 -> #2512 = (_ bv140283481700354 64) ; RIP

0x7f964b183804: cmp rax, 0xfffffffffffff000
	 -> #2513 = (bvsub ((_ extract 63 0) #2511) ((_ sign_extend 0) (_ bv18446744073709547520 64))) 
	 -> #2514 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2513 (bvxor ((_ extract 63 0) #2511) ((_ sign_extend 0) (_ bv18446744073709547520 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2515 = (ite (bvult ((_ extract 63 0) #2511) ((_ sign_extend 0) (_ bv18446744073709547520 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2516 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2511) ((_ sign_extend 0) (_ bv18446744073709547520 64))) (bvxor ((_ extract 63 0) #2511) #2513))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2517 = (ite (= (parity_flag ((_ extract 7 0) #2513)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2518 = (ite (= ((_ extract 63 63) #2513) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2519 = (ite (= #2513 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2520 = (_ bv140283481700362 64) ; RIP

0x7f964b18380a: jnbe 0x7f964b183824

0x7f964b18380c: ret 
	 -> #2521 = (_ bv140283481235045 64) ; RIP
	 -> #2522 = (bvadd #2488 (_ bv8 64)) ; Aligns stack

0x7f964b111e65: test eax, eax
	 -> #2523 = (bvand ((_ extract 31 0) #2513) ((_ extract 31 0) #2513)) 
	 -> #2524 = (_ bv0 1) ; Clears carry flag
	 -> #2525 = (_ bv0 1) ; Clears overflow flag
	 -> #2526 = (ite (= (parity_flag ((_ extract 7 0) #2523)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2527 = (ite (= ((_ extract 31 31) #2523) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2528 = (ite (= #2523 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2529 = (_ bv140283481235047 64) ; RIP

0x7f964b111e67: js 0x7f964b111e98

0x7f964b111e69: mov eax, dword ptr [rsp+0x18]
	 -> #2530 = (_ bv33188 32) 
	 -> #2531 = (_ bv140283481235053 64) ; RIP

0x7f964b111e6d: and eax, 0xf000
	 -> #2532 = (bvand ((_ extract 31 0) #2530) (_ bv61440 32)) 
	 -> #2533 = (_ bv0 1) ; Clears carry flag
	 -> #2534 = (_ bv0 1) ; Clears overflow flag
	 -> #2535 = (ite (= (parity_flag ((_ extract 7 0) #2532)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2536 = (ite (= ((_ extract 31 31) #2532) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2537 = (ite (= #2532 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2538 = (_ bv140283481235058 64) ; RIP

0x7f964b111e72: cmp eax, 0x2000
	 -> #2539 = (bvsub ((_ extract 31 0) #2532) ((_ sign_extend 0) (_ bv8192 32))) 
	 -> #2540 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2539 (bvxor ((_ extract 31 0) #2532) ((_ sign_extend 0) (_ bv8192 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2541 = (ite (bvult ((_ extract 31 0) #2532) ((_ sign_extend 0) (_ bv8192 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2542 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2532) ((_ sign_extend 0) (_ bv8192 32))) (bvxor ((_ extract 31 0) #2532) #2539))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2543 = (ite (= (parity_flag ((_ extract 7 0) #2539)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2544 = (ite (= ((_ extract 31 31) #2539) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2545 = (ite (= #2539 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2546 = (_ bv140283481235063 64) ; RIP

0x7f964b111e77: jz 0x7f964b111ef0

0x7f964b111e79: mov rbp, qword ptr [rsp+0x38]
	 -> #2547 = ((_ extract 63 0) #328) 
	 -> #2548 = (_ bv140283481235070 64) ; RIP

0x7f964b111e7e: test rbp, rbp
	 -> #2549 = (bvand ((_ extract 63 0) #2547) ((_ extract 63 0) #2547)) 
	 -> #2550 = (_ bv0 1) ; Clears carry flag
	 -> #2551 = (_ bv0 1) ; Clears overflow flag
	 -> #2552 = (ite (= (parity_flag ((_ extract 7 0) #2549)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2553 = (ite (= ((_ extract 63 63) #2549) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2554 = (ite (= #2549 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2555 = (_ bv140283481235073 64) ; RIP

0x7f964b111e81: jle 0x7f964b111e98

0x7f964b111e83: lea rsi, ptr [rbp+0xfff]

0x7f964b111e8a: and rsi, 0xfffffffffffff000
	 -> #2556 = (bvand ((_ extract 63 0) #2509) (_ bv18446744073709547520 64)) 
	 -> #2557 = (_ bv0 1) ; Clears carry flag
	 -> #2558 = (_ bv0 1) ; Clears overflow flag
	 -> #2559 = (ite (= (parity_flag ((_ extract 7 0) #2556)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2560 = (ite (= ((_ extract 63 63) #2556) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2561 = (ite (= #2556 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2562 = (_ bv140283481235089 64) ; RIP

0x7f964b111e91: jmp 0x7f964b111ea2

0x7f964b111ea2: xor r9d, r9d
	 -> #2563 = (bvxor ((_ extract 31 0) #2161) ((_ extract 31 0) #2161)) 
	 -> #2564 = (_ bv0 1) ; Clears carry flag
	 -> #2565 = (_ bv0 1) ; Clears overflow flag
	 -> #2566 = (ite (= (parity_flag ((_ extract 7 0) #2563)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2567 = (ite (= ((_ extract 31 31) #2563) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2568 = (ite (= #2563 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2569 = (_ bv140283481235109 64) ; RIP

0x7f964b111ea5: xor edi, edi
	 -> #2570 = (bvxor ((_ extract 31 0) #2507) ((_ extract 31 0) #2507)) 
	 -> #2571 = (_ bv0 1) ; Clears carry flag
	 -> #2572 = (_ bv0 1) ; Clears overflow flag
	 -> #2573 = (ite (= (parity_flag ((_ extract 7 0) #2570)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2574 = (ite (= ((_ extract 31 31) #2570) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2575 = (ite (= #2570 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2576 = (_ bv140283481235111 64) ; RIP

0x7f964b111ea7: mov r8d, 0xffffffff
	 -> #2577 = (_ bv4294967295 32) 
	 -> #2578 = (_ bv140283481235117 64) ; RIP

0x7f964b111ead: mov ecx, 0x22
	 -> #2579 = (_ bv34 32) 
	 -> #2580 = (_ bv140283481235122 64) ; RIP

0x7f964b111eb2: mov edx, 0x3
	 -> #2581 = (_ bv3 32) 
	 -> #2582 = (_ bv140283481235127 64) ; RIP

0x7f964b111eb7: call 0x7f964b18c840
	 -> #2583 = (bvsub #2522 (_ bv8 64)) ; Aligns stack
	 -> #2584 = (_ bv140283481235132 64) ; Saved RIP
	 -> #2585 = (_ bv140283481737280 64) ; RIP

0x7f964b18c840: mov r10, rcx
	 -> #2586 = ((_ extract 63 0) #2579) 
	 -> #2587 = (_ bv140283481737283 64) ; RIP

0x7f964b18c843: mov eax, 0x9
	 -> #2588 = (_ bv9 32) 
	 -> #2589 = (_ bv140283481737288 64) ; RIP

0x7f964b18c84a: cmp rax, 0xfffffffffffff001
	 -> #2590 = (bvsub ((_ extract 63 0) #2588) ((_ sign_extend 0) (_ bv18446744073709547521 64))) 
	 -> #2591 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2590 (bvxor ((_ extract 63 0) #2588) ((_ sign_extend 0) (_ bv18446744073709547521 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2592 = (ite (bvult ((_ extract 63 0) #2588) ((_ sign_extend 0) (_ bv18446744073709547521 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2593 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2588) ((_ sign_extend 0) (_ bv18446744073709547521 64))) (bvxor ((_ extract 63 0) #2588) #2590))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2594 = (ite (= (parity_flag ((_ extract 7 0) #2590)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2595 = (ite (= ((_ extract 63 63) #2590) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2596 = (ite (= #2590 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2597 = (_ bv140283481737296 64) ; RIP

0x7f964b18c850: jnb 0x7f964b18c853

0x7f964b18c852: ret 
	 -> #2598 = #2584 ; RIP
	 -> #2599 = (bvadd #2583 (_ bv8 64)) ; Aligns stack

0x7f964b111ebc: cmp rax, 0xffffffffffffffff
	 -> #2600 = (bvsub ((_ extract 63 0) #2590) ((_ sign_extend 0) (_ bv18446744073709551615 64))) 
	 -> #2601 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2600 (bvxor ((_ extract 63 0) #2590) ((_ sign_extend 0) (_ bv18446744073709551615 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2602 = (ite (bvult ((_ extract 63 0) #2590) ((_ sign_extend 0) (_ bv18446744073709551615 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2603 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2590) ((_ sign_extend 0) (_ bv18446744073709551615 64))) (bvxor ((_ extract 63 0) #2590) #2600))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2604 = (ite (= (parity_flag ((_ extract 7 0) #2600)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2605 = (ite (= ((_ extract 63 63) #2600) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2606 = (ite (= #2600 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2607 = (_ bv140283481235136 64) ; RIP

0x7f964b111ec0: jz 0x7f964b111edb

0x7f964b111ec2: lea rdx, ptr [rax+rbp*1]

0x7f964b111ec6: mov rsi, rax
	 -> #2608 = ((_ extract 63 0) #2600) 
	 -> #2609 = (_ bv140283481235145 64) ; RIP

0x7f964b111ec9: mov ecx, 0x1
	 -> #2610 = (_ bv1 32) 
	 -> #2611 = (_ bv140283481235150 64) ; RIP

0x7f964b111ece: mov rdi, rbx
	 -> #2612 = ((_ extract 63 0) #2465) 
	 -> #2613 = (_ bv140283481235153 64) ; RIP

0x7f964b111ed1: call 0x7f964b11edb0
	 -> #2614 = (bvsub #2599 (_ bv8 64)) ; Aligns stack
	 -> #2615 = (_ bv140283481235158 64) ; Saved RIP
	 -> #2616 = (_ bv140283481288112 64) ; RIP

0x7f964b11edb0: push rbp
	 -> #2617 = (bvsub #2614 (_ bv8 64)) ; Aligns stack
	 -> #2618 = #2547 
	 -> #2619 = (_ bv140283481288113 64) ; RIP

0x7f964b11edb1: mov rbp, rsi
	 -> #2620 = ((_ extract 63 0) #2608) 
	 -> #2621 = (_ bv140283481288116 64) ; RIP

0x7f964b11edb4: push rbx
	 -> #2622 = (bvsub #2617 (_ bv8 64)) ; Aligns stack
	 -> #2623 = #2465 
	 -> #2624 = (_ bv140283481288117 64) ; RIP

0x7f964b11edb5: mov rbx, rdi
	 -> #2625 = ((_ extract 63 0) #2612) 
	 -> #2626 = (_ bv140283481288120 64) ; RIP

0x7f964b11edb8: sub rsp, 0x18
	 -> #2627 = (bvsub ((_ extract 63 0) #2622) (_ bv24 64)) 
	 -> #2628 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2627 (bvxor ((_ extract 63 0) #2622) (_ bv24 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2629 = (ite (bvult ((_ extract 63 0) #2622) (_ bv24 64)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2630 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2622) (_ bv24 64)) (bvxor ((_ extract 63 0) #2622) #2627))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2631 = (ite (= (parity_flag ((_ extract 7 0) #2627)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2632 = (ite (= ((_ extract 63 63) #2627) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2633 = (ite (= #2627 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2634 = (_ bv140283481288124 64) ; RIP

0x7f964b11edbc: mov rdi, qword ptr [rdi+0x38]
	 -> #2635 = ((_ extract 63 0) #2432) 
	 -> #2636 = (_ bv140283481288128 64) ; RIP

0x7f964b11edc0: mov eax, dword ptr [rbx]
	 -> #2637 = (_ bv4222427268 32) 
	 -> #2638 = (_ bv140283481288130 64) ; RIP

0x7f964b11edc2: test rdi, rdi
	 -> #2639 = (bvand ((_ extract 63 0) #2635) ((_ extract 63 0) #2635)) 
	 -> #2640 = (_ bv0 1) ; Clears carry flag
	 -> #2641 = (_ bv0 1) ; Clears overflow flag
	 -> #2642 = (ite (= (parity_flag ((_ extract 7 0) #2639)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2643 = (ite (= ((_ extract 63 63) #2639) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2644 = (ite (= #2639 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2645 = (_ bv140283481288133 64) ; RIP

0x7f964b11edcb: test ecx, ecx
	 -> #2646 = (bvand ((_ extract 31 0) #2610) ((_ extract 31 0) #2610)) 
	 -> #2647 = (_ bv0 1) ; Clears carry flag
	 -> #2648 = (_ bv0 1) ; Clears overflow flag
	 -> #2649 = (ite (= (parity_flag ((_ extract 7 0) #2646)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2650 = (ite (= ((_ extract 31 31) #2646) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2651 = (ite (= #2646 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2652 = (_ bv140283481288141 64) ; RIP

0x7f964b11edcd: mov qword ptr [rbx+0x38], rbp
	 -> #2653 = ((_ extract 63 0) #2620) 
	 -> #2654 = (_ bv140283481288145 64) ; RIP

0x7f964b11edd1: mov qword ptr [rbx+0x40], rdx
	 -> #2655 = ((_ extract 63 0) #2581) 
	 -> #2656 = (_ bv140283481288149 64) ; RIP

0x7f964b11ede8: and eax, 0xfffffffe
	 -> #2657 = (bvand ((_ extract 31 0) #2637) (_ bv18446744073709551614 32)) 
	 -> #2658 = (_ bv0 1) ; Clears carry flag
	 -> #2659 = (_ bv0 1) ; Clears overflow flag
	 -> #2660 = (ite (= (parity_flag ((_ extract 7 0) #2657)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2661 = (ite (= ((_ extract 31 31) #2657) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2662 = (ite (= #2657 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2663 = (_ bv140283481288171 64) ; RIP

0x7f964b11edeb: mov dword ptr [rbx], eax
	 -> #2664 = ((_ extract 31 0) #2657) 
	 -> #2665 = (_ bv140283481288173 64) ; RIP

0x7f964b11eded: add rsp, 0x18
	 -> #2666 = (bvadd ((_ extract 63 0) #2627) (_ bv24 64)) 
	 -> #2667 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2666 (bvxor ((_ extract 63 0) #2627) (_ bv24 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2668 = (ite (bvult #2666 ((_ extract 63 0) #2627)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2669 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2627) (bvnot (_ bv24 64))) (bvxor ((_ extract 63 0) #2627) #2666))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2670 = (ite (= (parity_flag ((_ extract 7 0) #2666)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2671 = (ite (= ((_ extract 63 63) #2666) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2672 = (ite (= #2666 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2673 = (_ bv140283481288177 64) ; RIP

0x7f964b11edf1: pop rbx
	 -> #2674 = #2623 
	 -> #2675 = (bvadd #2666 (_ bv8 64)) ; Aligns stack
	 -> #2676 = (_ bv140283481288178 64) ; RIP

0x7f964b11edf2: pop rbp
	 -> #2677 = #2618 
	 -> #2678 = (bvadd #2675 (_ bv8 64)) ; Aligns stack
	 -> #2679 = (_ bv140283481288179 64) ; RIP

0x7f964b11edf3: ret 
	 -> #2680 = #2615 ; RIP
	 -> #2681 = (bvadd #2678 (_ bv8 64)) ; Aligns stack

0x7f964b111ed6: mov eax, 0x1
	 -> #2682 = (_ bv1 32) 
	 -> #2683 = (_ bv140283481235163 64) ; RIP

0x7f964b111edb: add rsp, 0x90
	 -> #2684 = (bvadd ((_ extract 63 0) #2681) (_ bv144 64)) 
	 -> #2685 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2684 (bvxor ((_ extract 63 0) #2681) (_ bv144 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2686 = (ite (bvult #2684 ((_ extract 63 0) #2681)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2687 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2681) (bvnot (_ bv144 64))) (bvxor ((_ extract 63 0) #2681) #2684))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2688 = (ite (= (parity_flag ((_ extract 7 0) #2684)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2689 = (ite (= ((_ extract 63 63) #2684) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2690 = (ite (= #2684 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2691 = (_ bv140283481235170 64) ; RIP

0x7f964b111ee2: pop rbx
	 -> #2692 = #2463 
	 -> #2693 = (bvadd #2684 (_ bv8 64)) ; Aligns stack
	 -> #2694 = (_ bv140283481235171 64) ; RIP

0x7f964b111ee3: pop rbp
	 -> #2695 = #2460 
	 -> #2696 = (bvadd #2693 (_ bv8 64)) ; Aligns stack
	 -> #2697 = (_ bv140283481235172 64) ; RIP

0x7f964b111ee4: pop r12
	 -> #2698 = #2457 
	 -> #2699 = (bvadd #2696 (_ bv8 64)) ; Aligns stack
	 -> #2700 = (_ bv140283481235174 64) ; RIP

0x7f964b111ee6: ret 
	 -> #2701 = (_ bv140283481288284 64) ; RIP
	 -> #2702 = (bvadd #2699 (_ bv8 64)) ; Aligns stack

0x7f964b11ee5c: cmp eax, 0xffffffff
	 -> #2703 = (bvsub ((_ extract 31 0) #2682) ((_ sign_extend 0) (_ bv18446744073709551615 32))) 
	 -> #2704 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2703 (bvxor ((_ extract 31 0) #2682) ((_ sign_extend 0) (_ bv18446744073709551615 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2705 = (ite (bvult ((_ extract 31 0) #2682) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2706 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2682) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (bvxor ((_ extract 31 0) #2682) #2703))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2707 = (ite (= (parity_flag ((_ extract 7 0) #2703)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2708 = (ite (= ((_ extract 31 31) #2703) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2709 = (ite (= #2703 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2710 = (_ bv140283481288287 64) ; RIP

0x7f964b11ee3b: pop rbx
	 -> #2711 = #2430 
	 -> #2712 = (bvadd #2702 (_ bv8 64)) ; Aligns stack
	 -> #2713 = (_ bv140283481288252 64) ; RIP

0x7f964b11ee3c: ret 
	 -> #2714 = #2427 ; RIP
	 -> #2715 = (bvadd #2712 (_ bv8 64)) ; Aligns stack

0x7f964b11e2e8: mov rdx, qword ptr [rbx+0x38]
	 -> #2716 = ((_ extract 63 0) #2653) 
	 -> #2717 = (_ bv140283481285356 64) ; RIP

0x7f964b11e2ec: mov ecx, dword ptr [rbx]
	 -> #2718 = ((_ extract 31 0) #2664) 
	 -> #2719 = (_ bv140283481285358 64) ; RIP

0x7f964b11e2ee: mov qword ptr [rbx+0x18], rdx
	 -> #2720 = ((_ extract 63 0) #2716) 
	 -> #2721 = (_ bv140283481285362 64) ; RIP

0x7f964b11e2f2: mov qword ptr [rbx+0x8], rdx
	 -> #2722 = ((_ extract 63 0) #2716) 
	 -> #2723 = (_ bv140283481285366 64) ; RIP

0x7f964b11e2f6: mov qword ptr [rbx+0x10], rdx
	 -> #2724 = ((_ extract 63 0) #2716) 
	 -> #2725 = (_ bv140283481285370 64) ; RIP

0x7f964b11e2fa: jmp 0x7f964b11e1c7

0x7f964b11e1c7: test ch, 0x1
	 -> #2726 = (bvand ((_ extract 7 0) #2718) (_ bv1 8)) 
	 -> #2727 = (_ bv0 1) ; Clears carry flag
	 -> #2728 = (_ bv0 1) ; Clears overflow flag
	 -> #2729 = (ite (= (parity_flag ((_ extract 7 0) #2726)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2730 = (ite (= ((_ extract 7 7) #2726) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2731 = (ite (= #2726 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2732 = (_ bv140283481285066 64) ; RIP

0x7f964b11e1ca: jnz 0x7f964b11e31a

0x7f964b11e1d0: mov rsi, qword ptr [rbx+0x40]
	 -> #2733 = ((_ extract 63 0) #2655) 
	 -> #2734 = (_ bv140283481285076 64) ; RIP

0x7f964b11e1d4: cmp rsi, rdx
	 -> #2735 = (bvsub ((_ extract 63 0) #2733) ((_ extract 63 0) #2716)) 
	 -> #2736 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2735 (bvxor ((_ extract 63 0) #2733) ((_ extract 63 0) #2716))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2737 = (ite (bvult ((_ extract 63 0) #2733) ((_ extract 63 0) #2716)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2738 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2733) ((_ extract 63 0) #2716)) (bvxor ((_ extract 63 0) #2733) #2735))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2739 = (ite (= (parity_flag ((_ extract 7 0) #2735)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2740 = (ite (= ((_ extract 63 63) #2735) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2741 = (ite (= #2735 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2742 = (_ bv140283481285079 64) ; RIP

0x7f964b11e1d7: jz 0x7f964b11e2a8

0x7f964b11e1dd: mov rax, qword ptr [rbx+0x10]
	 -> #2743 = ((_ extract 63 0) #2724) 
	 -> #2744 = (_ bv140283481285089 64) ; RIP

0x7f964b11e1e1: mov qword ptr [rbx+0x30], rsi
	 -> #2745 = ((_ extract 63 0) #2735) 
	 -> #2746 = (_ bv140283481285093 64) ; RIP

0x7f964b11e1e5: mov esi, dword ptr [rbx+0xc0]
	 -> #2747 = ((_ extract 31 0) #2287) 
	 -> #2748 = (_ bv140283481285099 64) ; RIP

0x7f964b11e1eb: mov qword ptr [rbx+0x8], rax
	 -> #2749 = ((_ extract 63 0) #2743) 
	 -> #2750 = (_ bv140283481285103 64) ; RIP

0x7f964b11e1ef: mov qword ptr [rbx+0x18], rax
	 -> #2751 = ((_ extract 63 0) #2743) 
	 -> #2752 = (_ bv140283481285107 64) ; RIP

0x7f964b11e1f3: mov eax, ecx
	 -> #2753 = ((_ extract 31 0) #2718) 
	 -> #2754 = (_ bv140283481285109 64) ; RIP

0x7f964b11e1f5: or ah, 0x8
	 -> #2755 = (bvor ((_ extract 7 0) #2753) (_ bv8 8)) 
	 -> #2756 = (_ bv0 1) ; Clears carry flag
	 -> #2757 = (_ bv0 1) ; Clears overflow flag
	 -> #2758 = (ite (= (parity_flag ((_ extract 7 0) #2755)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2759 = (ite (= ((_ extract 7 7) #2755) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2760 = (ite (= #2755 (_ bv0 8)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2761 = (_ bv140283481285112 64) ; RIP

0x7f964b11e1f8: mov qword ptr [rbx+0x28], rdx
	 -> #2762 = ((_ extract 63 0) #2716) 
	 -> #2763 = (_ bv140283481285116 64) ; RIP

0x7f964b11e1fc: mov qword ptr [rbx+0x20], rdx
	 -> #2764 = ((_ extract 63 0) #2716) 
	 -> #2765 = (_ bv140283481285120 64) ; RIP

0x7f964b11e200: test esi, esi
	 -> #2766 = (bvand ((_ extract 31 0) #2747) ((_ extract 31 0) #2747)) 
	 -> #2767 = (_ bv0 1) ; Clears carry flag
	 -> #2768 = (_ bv0 1) ; Clears overflow flag
	 -> #2769 = (ite (= (parity_flag ((_ extract 7 0) #2766)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2770 = (ite (= ((_ extract 31 31) #2766) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2771 = (ite (= #2766 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2772 = (_ bv140283481285122 64) ; RIP

0x7f964b11e202: mov dword ptr [rbx], eax
	 -> #2773 = ((_ extract 31 0) #2755) 
	 -> #2774 = (_ bv140283481285124 64) ; RIP

0x7f964b11e204: jnle 0x7f964b11e178

0x7f964b11e20a: and ecx, 0x202
	 -> #2775 = (bvand ((_ extract 31 0) #2718) (_ bv514 32)) 
	 -> #2776 = (_ bv0 1) ; Clears carry flag
	 -> #2777 = (_ bv0 1) ; Clears overflow flag
	 -> #2778 = (ite (= (parity_flag ((_ extract 7 0) #2775)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2779 = (ite (= ((_ extract 31 31) #2775) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2780 = (ite (= #2775 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2781 = (_ bv140283481285136 64) ; RIP

0x7f964b11e178: cmp ebp, 0xffffffff
	 -> #2782 = (bvsub ((_ extract 31 0) #2695) ((_ sign_extend 0) (_ bv18446744073709551615 32))) 
	 -> #2783 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2782 (bvxor ((_ extract 31 0) #2695) ((_ sign_extend 0) (_ bv18446744073709551615 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2784 = (ite (bvult ((_ extract 31 0) #2695) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2785 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2695) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (bvxor ((_ extract 31 0) #2695) #2782))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2786 = (ite (= (parity_flag ((_ extract 7 0) #2782)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2787 = (ite (= ((_ extract 31 31) #2782) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2788 = (ite (= #2782 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2789 = (_ bv140283481284987 64) ; RIP

0x7f964b11e290: mov rsi, qword ptr [rbx+0x20]
	 -> #2790 = ((_ extract 63 0) #2764) 
	 -> #2791 = (_ bv140283481285268 64) ; RIP

0x7f964b11e294: mov rdi, rbx
	 -> #2792 = ((_ extract 63 0) #2711) 
	 -> #2793 = (_ bv140283481285271 64) ; RIP

0x7f964b11e297: pop rbx
	 -> #2794 = #2394 
	 -> #2795 = (bvadd #2715 (_ bv8 64)) ; Aligns stack
	 -> #2796 = (_ bv140283481285272 64) ; RIP

0x7f964b11e298: pop rbp
	 -> #2797 = #2391 
	 -> #2798 = (bvadd #2795 (_ bv8 64)) ; Aligns stack
	 -> #2799 = (_ bv140283481285273 64) ; RIP

0x7f964b11e299: pop r12
	 -> #2800 = #2388 
	 -> #2801 = (bvadd #2798 (_ bv8 64)) ; Aligns stack
	 -> #2802 = (_ bv140283481285275 64) ; RIP

0x7f964b11e29b: sub rdx, rsi
	 -> #2803 = (bvsub ((_ extract 63 0) #2716) ((_ extract 63 0) #2790)) 
	 -> #2804 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2803 (bvxor ((_ extract 63 0) #2716) ((_ extract 63 0) #2790))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2805 = (ite (bvult ((_ extract 63 0) #2716) ((_ extract 63 0) #2790)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2806 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2716) ((_ extract 63 0) #2790)) (bvxor ((_ extract 63 0) #2716) #2803))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2807 = (ite (= (parity_flag ((_ extract 7 0) #2803)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2808 = (ite (= ((_ extract 63 63) #2803) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2809 = (ite (= #2803 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2810 = (_ bv140283481285278 64) ; RIP

0x7f964b11e29e: jmp 0x7f964b11de90

0x7f964b11de90: xor eax, eax
	 -> #2811 = (bvxor ((_ extract 31 0) #2755) ((_ extract 31 0) #2755)) 
	 -> #2812 = (_ bv0 1) ; Clears carry flag
	 -> #2813 = (_ bv0 1) ; Clears overflow flag
	 -> #2814 = (ite (= (parity_flag ((_ extract 7 0) #2811)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2815 = (ite (= ((_ extract 31 31) #2811) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2816 = (ite (= #2811 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2817 = (_ bv140283481284242 64) ; RIP

0x7f964b11de92: test rdx, rdx
	 -> #2818 = (bvand ((_ extract 63 0) #2803) ((_ extract 63 0) #2803)) 
	 -> #2819 = (_ bv0 1) ; Clears carry flag
	 -> #2820 = (_ bv0 1) ; Clears overflow flag
	 -> #2821 = (ite (= (parity_flag ((_ extract 7 0) #2818)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2822 = (ite (= ((_ extract 63 63) #2818) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2823 = (ite (= #2818 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2824 = (_ bv140283481284245 64) ; RIP

0x7f964b11de95: push rbx
	 -> #2825 = (bvsub #2801 (_ bv8 64)) ; Aligns stack
	 -> #2826 = #2794 
	 -> #2827 = (_ bv140283481284246 64) ; RIP

0x7f964b11de96: mov rbx, rdx
	 -> #2828 = ((_ extract 63 0) #2803) 
	 -> #2829 = (_ bv140283481284249 64) ; RIP

0x7f964b11de99: jnz 0x7f964b11dea0

0x7f964b11de9b: pop rbx
	 -> #2830 = #2826 
	 -> #2831 = (bvadd #2825 (_ bv8 64)) ; Aligns stack
	 -> #2832 = (_ bv140283481284252 64) ; RIP

0x7f964b11de9c: ret 
	 -> #2833 = (_ bv140283481281905 64) ; RIP
	 -> #2834 = (bvadd #2831 (_ bv8 64)) ; Aligns stack

0x7f964b11d571: cmp eax, 0xffffffff
	 -> #2835 = (bvsub ((_ extract 31 0) #2811) ((_ sign_extend 0) (_ bv18446744073709551615 32))) 
	 -> #2836 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #2835 (bvxor ((_ extract 31 0) #2811) ((_ sign_extend 0) (_ bv18446744073709551615 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2837 = (ite (bvult ((_ extract 31 0) #2811) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2838 = (ite (= ((_ extract 31 31) (bvand (bvxor ((_ extract 31 0) #2811) ((_ sign_extend 0) (_ bv18446744073709551615 32))) (bvxor ((_ extract 31 0) #2811) #2835))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2839 = (ite (= (parity_flag ((_ extract 7 0) #2835)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2840 = (ite (= ((_ extract 31 31) #2835) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2841 = (ite (= #2835 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2842 = (_ bv140283481281908 64) ; RIP

0x7f964b11d574: jz 0x7f964b11d610

0x7f964b11d57a: mov rcx, qword ptr [rbp+0x40]
	 -> #2843 = ((_ extract 63 0) #2655) 
	 -> #2844 = (_ bv140283481281918 64) ; RIP

0x7f964b11d57e: sub rcx, qword ptr [rbp+0x38]
	 -> #2845 = (bvsub ((_ extract 63 0) #2843) #2653) 
	 -> #2846 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2845 (bvxor ((_ extract 63 0) #2843) #2653)))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2847 = (ite (bvult ((_ extract 63 0) #2843) #2653) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2848 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2843) #2653) (bvxor ((_ extract 63 0) #2843) #2845))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2849 = (ite (= (parity_flag ((_ extract 7 0) #2845)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2850 = (ite (= ((_ extract 63 63) #2845) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2851 = (ite (= #2845 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2852 = (_ bv140283481281922 64) ; RIP

0x7f964b11d582: xor edx, edx
	 -> #2853 = (bvxor ((_ extract 31 0) #2803) ((_ extract 31 0) #2803)) 
	 -> #2854 = (_ bv0 1) ; Clears carry flag
	 -> #2855 = (_ bv0 1) ; Clears overflow flag
	 -> #2856 = (ite (= (parity_flag ((_ extract 7 0) #2853)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2857 = (ite (= ((_ extract 31 31) #2853) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2858 = (ite (= #2853 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2859 = (_ bv140283481281924 64) ; RIP

0x7f964b11d584: cmp rcx, 0x7f
	 -> #2860 = (bvsub ((_ extract 63 0) #2845) ((_ sign_extend 0) (_ bv127 64))) 
	 -> #2861 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2860 (bvxor ((_ extract 63 0) #2845) ((_ sign_extend 0) (_ bv127 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2862 = (ite (bvult ((_ extract 63 0) #2845) ((_ sign_extend 0) (_ bv127 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2863 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2845) ((_ sign_extend 0) (_ bv127 64))) (bvxor ((_ extract 63 0) #2845) #2860))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2864 = (ite (= (parity_flag ((_ extract 7 0) #2860)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2865 = (ite (= ((_ extract 63 63) #2860) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2866 = (ite (= #2860 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2867 = (_ bv140283481281928 64) ; RIP

0x7f964b11d588: jbe 0x7f964b11d592

0x7f964b11d58a: mov rax, r13
	 -> #2868 = ((_ extract 63 0) #2369) 
	 -> #2869 = (_ bv140283481281933 64) ; RIP

0x7f964b11d58d: xor edx, edx
	 -> #2870 = (bvxor ((_ extract 31 0) #2853) ((_ extract 31 0) #2853)) 
	 -> #2871 = (_ bv0 1) ; Clears carry flag
	 -> #2872 = (_ bv0 1) ; Clears overflow flag
	 -> #2873 = (ite (= (parity_flag ((_ extract 7 0) #2870)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2874 = (ite (= ((_ extract 31 31) #2870) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2875 = (ite (= #2870 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2876 = (_ bv140283481281935 64) ; RIP

0x7f964b11d58f: div rcx

0x7f964b11d592: mov r14, r13
	 -> #2877 = ((_ extract 63 0) #2369) 
	 -> #2878 = (_ bv140283481281941 64) ; RIP

0x7f964b11d595: sub r14, rdx
	 -> #2879 = (bvsub ((_ extract 63 0) #2877) ((_ extract 63 0) #2870)) 
	 -> #2880 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2879 (bvxor ((_ extract 63 0) #2877) ((_ extract 63 0) #2870))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2881 = (ite (bvult ((_ extract 63 0) #2877) ((_ extract 63 0) #2870)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2882 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2877) ((_ extract 63 0) #2870)) (bvxor ((_ extract 63 0) #2877) #2879))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2883 = (ite (= (parity_flag ((_ extract 7 0) #2879)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2884 = (ite (= ((_ extract 63 63) #2879) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2885 = (ite (= #2879 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2886 = (_ bv140283481281944 64) ; RIP

0x7f964b11d598: jnz 0x7f964b11d648

0x7f964b11d59e: test r13, r13
	 -> #2887 = (bvand ((_ extract 63 0) #2369) ((_ extract 63 0) #2369)) 
	 -> #2888 = (_ bv0 1) ; Clears carry flag
	 -> #2889 = (_ bv0 1) ; Clears overflow flag
	 -> #2890 = (ite (= (parity_flag ((_ extract 7 0) #2887)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2891 = (ite (= ((_ extract 63 63) #2887) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2892 = (ite (= #2887 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2893 = (_ bv140283481281953 64) ; RIP

0x7f964b11d5a1: jz 0x7f964b11d540

0x7f964b11d5a3: lea rsi, ptr [r12+r14*1]

0x7f964b11d5a7: mov rdx, r13
	 -> #2894 = ((_ extract 63 0) #2369) 
	 -> #2895 = (_ bv140283481281962 64) ; RIP

0x7f964b11d5aa: mov rdi, rbp
	 -> #2896 = ((_ extract 63 0) #2797) 
	 -> #2897 = (_ bv140283481281965 64) ; RIP

0x7f964b11d5ad: call 0x7f964b11eec0
	 -> #2898 = (bvsub #2834 (_ bv8 64)) ; Aligns stack
	 -> #2899 = (_ bv140283481281970 64) ; Saved RIP
	 -> #2900 = (_ bv140283481288384 64) ; RIP

0x7f964b11eec0: push r14
	 -> #2901 = (bvsub #2898 (_ bv8 64)) ; Aligns stack
	 -> #2902 = #2879 
	 -> #2903 = (_ bv140283481288386 64) ; RIP

0x7f964b11eec2: xor eax, eax
	 -> #2904 = (bvxor ((_ extract 31 0) #2868) ((_ extract 31 0) #2868)) 
	 -> #2905 = (_ bv0 1) ; Clears carry flag
	 -> #2906 = (_ bv0 1) ; Clears overflow flag
	 -> #2907 = (ite (= (parity_flag ((_ extract 7 0) #2904)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2908 = (ite (= ((_ extract 31 31) #2904) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2909 = (ite (= #2904 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2910 = (_ bv140283481288388 64) ; RIP

0x7f964b11eec4: test rdx, rdx
	 -> #2911 = (bvand ((_ extract 63 0) #2894) ((_ extract 63 0) #2894)) 
	 -> #2912 = (_ bv0 1) ; Clears carry flag
	 -> #2913 = (_ bv0 1) ; Clears overflow flag
	 -> #2914 = (ite (= (parity_flag ((_ extract 7 0) #2911)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2915 = (ite (= ((_ extract 63 63) #2911) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2916 = (ite (= #2911 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2917 = (_ bv140283481288391 64) ; RIP

0x7f964b11eec7: push r13
	 -> #2918 = (bvsub #2901 (_ bv8 64)) ; Aligns stack
	 -> #2919 = #2369 
	 -> #2920 = (_ bv140283481288393 64) ; RIP

0x7f964b11eec9: mov r13, rdx
	 -> #2921 = ((_ extract 63 0) #2894) 
	 -> #2922 = (_ bv140283481288396 64) ; RIP

0x7f964b11eecc: push r12
	 -> #2923 = (bvsub #2918 (_ bv8 64)) ; Aligns stack
	 -> #2924 = #2800 
	 -> #2925 = (_ bv140283481288398 64) ; RIP

0x7f964b11eece: push rbp
	 -> #2926 = (bvsub #2923 (_ bv8 64)) ; Aligns stack
	 -> #2927 = #2797 
	 -> #2928 = (_ bv140283481288399 64) ; RIP

0x7f964b11eecf: push rbx
	 -> #2929 = (bvsub #2926 (_ bv8 64)) ; Aligns stack
	 -> #2930 = #2830 
	 -> #2931 = (_ bv140283481288400 64) ; RIP

0x7f964b11eed0: jz 0x7f964b11ef7e

0x7f964b11eed6: mov r12, rdi
	 -> #2932 = ((_ extract 63 0) #2896) 
	 -> #2933 = (_ bv140283481288409 64) ; RIP

0x7f964b11eed9: mov rbx, rsi
	 -> #2934 = ((_ extract 63 0) #2790) 
	 -> #2935 = (_ bv140283481288412 64) ; RIP

0x7f964b11eedc: mov rbp, rdx
	 -> #2936 = ((_ extract 63 0) #2894) 
	 -> #2937 = (_ bv140283481288415 64) ; RIP

0x7f964b11eedf: nop 

0x7f964b11eee0: mov rdi, qword ptr [r12+0x28]
	 -> #2938 = ((_ extract 63 0) #2762) 
	 -> #2939 = (_ bv140283481288421 64) ; RIP

0x7f964b11eee5: mov r14, qword ptr [r12+0x30]
	 -> #2940 = ((_ extract 63 0) #2745) 
	 -> #2941 = (_ bv140283481288426 64) ; RIP

0x7f964b11eeea: cmp rdi, r14
	 -> #2942 = (bvsub ((_ extract 63 0) #2938) ((_ extract 63 0) #2940)) 
	 -> #2943 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2942 (bvxor ((_ extract 63 0) #2938) ((_ extract 63 0) #2940))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2944 = (ite (bvult ((_ extract 63 0) #2938) ((_ extract 63 0) #2940)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2945 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2938) ((_ extract 63 0) #2940)) (bvxor ((_ extract 63 0) #2938) #2942))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2946 = (ite (= (parity_flag ((_ extract 7 0) #2942)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2947 = (ite (= ((_ extract 63 63) #2942) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2948 = (ite (= #2942 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2949 = (_ bv140283481288429 64) ; RIP

0x7f964b11eeed: jnb 0x7f964b11ef2f

0x7f964b11eeef: sub r14, rdi
	 -> #2950 = (bvsub ((_ extract 63 0) #2940) ((_ extract 63 0) #2942)) 
	 -> #2951 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2950 (bvxor ((_ extract 63 0) #2940) ((_ extract 63 0) #2942))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2952 = (ite (bvult ((_ extract 63 0) #2940) ((_ extract 63 0) #2942)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2953 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2940) ((_ extract 63 0) #2942)) (bvxor ((_ extract 63 0) #2940) #2950))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2954 = (ite (= (parity_flag ((_ extract 7 0) #2950)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2955 = (ite (= ((_ extract 63 63) #2950) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2956 = (ite (= #2950 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2957 = (_ bv140283481288434 64) ; RIP

0x7f964b11eef2: cmp rbp, r14
	 -> #2958 = (bvsub ((_ extract 63 0) #2936) ((_ extract 63 0) #2950)) 
	 -> #2959 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2958 (bvxor ((_ extract 63 0) #2936) ((_ extract 63 0) #2950))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2960 = (ite (bvult ((_ extract 63 0) #2936) ((_ extract 63 0) #2950)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2961 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2936) ((_ extract 63 0) #2950)) (bvxor ((_ extract 63 0) #2936) #2958))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2962 = (ite (= (parity_flag ((_ extract 7 0) #2958)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2963 = (ite (= ((_ extract 63 63) #2958) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2964 = (ite (= #2958 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2965 = (_ bv140283481288437 64) ; RIP

0x7f964b11eef5: cmovbe r14, rbp

0x7f964b11eef9: cmp r14, 0x14
	 -> #2966 = (bvsub ((_ extract 63 0) #2950) ((_ sign_extend 0) (_ bv20 64))) 
	 -> #2967 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2966 (bvxor ((_ extract 63 0) #2950) ((_ sign_extend 0) (_ bv20 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2968 = (ite (bvult ((_ extract 63 0) #2950) ((_ sign_extend 0) (_ bv20 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2969 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2950) ((_ sign_extend 0) (_ bv20 64))) (bvxor ((_ extract 63 0) #2950) #2966))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2970 = (ite (= (parity_flag ((_ extract 7 0) #2966)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2971 = (ite (= ((_ extract 63 63) #2966) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2972 = (ite (= #2966 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2973 = (_ bv140283481288445 64) ; RIP

0x7f964b11eefd: jnbe 0x7f964b11ef60

0x7f964b11eeff: test r14, r14
	 -> #2974 = (bvand ((_ extract 63 0) #2966) ((_ extract 63 0) #2966)) 
	 -> #2975 = (_ bv0 1) ; Clears carry flag
	 -> #2976 = (_ bv0 1) ; Clears overflow flag
	 -> #2977 = (ite (= (parity_flag ((_ extract 7 0) #2974)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2978 = (ite (= ((_ extract 63 63) #2974) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2979 = (ite (= #2974 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2980 = (_ bv140283481288450 64) ; RIP

0x7f964b11ef02: jz 0x7f964b11ef2c

0x7f964b11ef04: xor eax, eax
	 -> #2981 = (bvxor ((_ extract 31 0) #2904) ((_ extract 31 0) #2904)) 
	 -> #2982 = (_ bv0 1) ; Clears carry flag
	 -> #2983 = (_ bv0 1) ; Clears overflow flag
	 -> #2984 = (ite (= (parity_flag ((_ extract 7 0) #2981)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2985 = (ite (= ((_ extract 31 31) #2981) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2986 = (ite (= #2981 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2987 = (_ bv140283481288454 64) ; RIP

0x7f964b11ef06: nop word ptr [rax+rax*1], ax

0x7f964b11ef10: movzx edx, byte ptr [rbx+rax*1]
	 -> #2988 = ((_ zero_extend 24) (_ bv108 8)) 
	 -> #2989 = (_ bv140283481288468 64) ; RIP

0x7f964b11ef14: mov byte ptr [rdi+rax*1], dl
	 -> #2990 = ((_ extract 7 0) #2988) 
	 -> #2991 = (_ bv140283481288471 64) ; RIP

0x7f964b11ef17: add rax, 0x1
	 -> #2992 = (bvadd ((_ extract 63 0) #2981) (_ bv1 64)) 
	 -> #2993 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #2992 (bvxor ((_ extract 63 0) #2981) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #2994 = (ite (bvult #2992 ((_ extract 63 0) #2981)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #2995 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2981) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #2981) #2992))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #2996 = (ite (= (parity_flag ((_ extract 7 0) #2992)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #2997 = (ite (= ((_ extract 63 63) #2992) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #2998 = (ite (= #2992 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #2999 = (_ bv140283481288475 64) ; RIP

0x7f964b11ef1b: cmp rax, r14
	 -> #3000 = (bvsub ((_ extract 63 0) #2992) ((_ extract 63 0) #2966)) 
	 -> #3001 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3000 (bvxor ((_ extract 63 0) #2992) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3002 = (ite (bvult ((_ extract 63 0) #2992) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3003 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2992) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #2992) #3000))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3004 = (ite (= (parity_flag ((_ extract 7 0) #3000)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3005 = (ite (= ((_ extract 63 63) #3000) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3006 = (ite (= #3000 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3007 = (_ bv140283481288478 64) ; RIP

0x7f964b11ef10: movzx edx, byte ptr [rbx+rax*1]
	 -> #3008 = ((_ zero_extend 24) (_ bv111 8)) 
	 -> #3009 = (_ bv140283481288468 64) ; RIP

0x7f964b11ef14: mov byte ptr [rdi+rax*1], dl
	 -> #3010 = ((_ extract 7 0) #3008) 
	 -> #3011 = (_ bv140283481288471 64) ; RIP

0x7f964b11ef17: add rax, 0x1
	 -> #3012 = (bvadd ((_ extract 63 0) #3000) (_ bv1 64)) 
	 -> #3013 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3012 (bvxor ((_ extract 63 0) #3000) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3014 = (ite (bvult #3012 ((_ extract 63 0) #3000)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3015 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3000) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #3000) #3012))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3016 = (ite (= (parity_flag ((_ extract 7 0) #3012)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3017 = (ite (= ((_ extract 63 63) #3012) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3018 = (ite (= #3012 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3019 = (_ bv140283481288475 64) ; RIP

0x7f964b11ef1b: cmp rax, r14
	 -> #3020 = (bvsub ((_ extract 63 0) #3012) ((_ extract 63 0) #2966)) 
	 -> #3021 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3020 (bvxor ((_ extract 63 0) #3012) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3022 = (ite (bvult ((_ extract 63 0) #3012) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3023 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3012) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #3012) #3020))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3024 = (ite (= (parity_flag ((_ extract 7 0) #3020)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3025 = (ite (= ((_ extract 63 63) #3020) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3026 = (ite (= #3020 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3027 = (_ bv140283481288478 64) ; RIP

0x7f964b11ef10: movzx edx, byte ptr [rbx+rax*1]
	 -> #3028 = ((_ zero_extend 24) (_ bv111 8)) 
	 -> #3029 = (_ bv140283481288468 64) ; RIP

0x7f964b11ef14: mov byte ptr [rdi+rax*1], dl
	 -> #3030 = ((_ extract 7 0) #3028) 
	 -> #3031 = (_ bv140283481288471 64) ; RIP

0x7f964b11ef17: add rax, 0x1
	 -> #3032 = (bvadd ((_ extract 63 0) #3020) (_ bv1 64)) 
	 -> #3033 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3032 (bvxor ((_ extract 63 0) #3020) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3034 = (ite (bvult #3032 ((_ extract 63 0) #3020)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3035 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3020) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #3020) #3032))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3036 = (ite (= (parity_flag ((_ extract 7 0) #3032)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3037 = (ite (= ((_ extract 63 63) #3032) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3038 = (ite (= #3032 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3039 = (_ bv140283481288475 64) ; RIP

0x7f964b11ef1b: cmp rax, r14
	 -> #3040 = (bvsub ((_ extract 63 0) #3032) ((_ extract 63 0) #2966)) 
	 -> #3041 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3040 (bvxor ((_ extract 63 0) #3032) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3042 = (ite (bvult ((_ extract 63 0) #3032) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3043 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3032) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #3032) #3040))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3044 = (ite (= (parity_flag ((_ extract 7 0) #3040)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3045 = (ite (= ((_ extract 63 63) #3040) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3046 = (ite (= #3040 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3047 = (_ bv140283481288478 64) ; RIP

0x7f964b11ef10: movzx edx, byte ptr [rbx+rax*1]
	 -> #3048 = ((_ zero_extend 24) (_ bv115 8)) 
	 -> #3049 = (_ bv140283481288468 64) ; RIP

0x7f964b11ef14: mov byte ptr [rdi+rax*1], dl
	 -> #3050 = ((_ extract 7 0) #3048) 
	 -> #3051 = (_ bv140283481288471 64) ; RIP

0x7f964b11ef17: add rax, 0x1
	 -> #3052 = (bvadd ((_ extract 63 0) #3040) (_ bv1 64)) 
	 -> #3053 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3052 (bvxor ((_ extract 63 0) #3040) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3054 = (ite (bvult #3052 ((_ extract 63 0) #3040)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3055 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3040) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #3040) #3052))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3056 = (ite (= (parity_flag ((_ extract 7 0) #3052)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3057 = (ite (= ((_ extract 63 63) #3052) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3058 = (ite (= #3052 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3059 = (_ bv140283481288475 64) ; RIP

0x7f964b11ef1b: cmp rax, r14
	 -> #3060 = (bvsub ((_ extract 63 0) #3052) ((_ extract 63 0) #2966)) 
	 -> #3061 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3060 (bvxor ((_ extract 63 0) #3052) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3062 = (ite (bvult ((_ extract 63 0) #3052) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3063 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3052) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #3052) #3060))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3064 = (ite (= (parity_flag ((_ extract 7 0) #3060)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3065 = (ite (= ((_ extract 63 63) #3060) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3066 = (ite (= #3060 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3067 = (_ bv140283481288478 64) ; RIP

0x7f964b11ef10: movzx edx, byte ptr [rbx+rax*1]
	 -> #3068 = ((_ zero_extend 24) (_ bv101 8)) 
	 -> #3069 = (_ bv140283481288468 64) ; RIP

0x7f964b11ef14: mov byte ptr [rdi+rax*1], dl
	 -> #3070 = ((_ extract 7 0) #3068) 
	 -> #3071 = (_ bv140283481288471 64) ; RIP

0x7f964b11ef17: add rax, 0x1
	 -> #3072 = (bvadd ((_ extract 63 0) #3060) (_ bv1 64)) 
	 -> #3073 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3072 (bvxor ((_ extract 63 0) #3060) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3074 = (ite (bvult #3072 ((_ extract 63 0) #3060)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3075 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3060) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #3060) #3072))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3076 = (ite (= (parity_flag ((_ extract 7 0) #3072)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3077 = (ite (= ((_ extract 63 63) #3072) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3078 = (ite (= #3072 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3079 = (_ bv140283481288475 64) ; RIP

0x7f964b11ef1b: cmp rax, r14
	 -> #3080 = (bvsub ((_ extract 63 0) #3072) ((_ extract 63 0) #2966)) 
	 -> #3081 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3080 (bvxor ((_ extract 63 0) #3072) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3082 = (ite (bvult ((_ extract 63 0) #3072) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3083 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3072) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #3072) #3080))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3084 = (ite (= (parity_flag ((_ extract 7 0) #3080)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3085 = (ite (= ((_ extract 63 63) #3080) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3086 = (ite (= #3080 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3087 = (_ bv140283481288478 64) ; RIP

0x7f964b11ef1e: jnz 0x7f964b11ef10

0x7f964b11ef20: lea rcx, ptr [rdi+r14*1]

0x7f964b11ef24: add rbx, r14
	 -> #3088 = (bvadd ((_ extract 63 0) #2934) ((_ extract 63 0) #2966)) 
	 -> #3089 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3088 (bvxor ((_ extract 63 0) #2934) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3090 = (ite (bvult #3088 ((_ extract 63 0) #2934)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3091 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2934) (bvnot ((_ extract 63 0) #2966))) (bvxor ((_ extract 63 0) #2934) #3088))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3092 = (ite (= (parity_flag ((_ extract 7 0) #3088)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3093 = (ite (= ((_ extract 63 63) #3088) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3094 = (ite (= #3088 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3095 = (_ bv140283481288487 64) ; RIP

0x7f964b11ef27: mov qword ptr [r12+0x28], rcx
	 -> #3096 = ((_ extract 63 0) #2860) 
	 -> #3097 = (_ bv140283481288492 64) ; RIP

0x7f964b11ef2c: sub rbp, r14
	 -> #3098 = (bvsub ((_ extract 63 0) #2958) ((_ extract 63 0) #2966)) 
	 -> #3099 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3098 (bvxor ((_ extract 63 0) #2958) ((_ extract 63 0) #2966))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3100 = (ite (bvult ((_ extract 63 0) #2958) ((_ extract 63 0) #2966)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3101 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #2958) ((_ extract 63 0) #2966)) (bvxor ((_ extract 63 0) #2958) #3098))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3102 = (ite (= (parity_flag ((_ extract 7 0) #3098)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3103 = (ite (= ((_ extract 63 63) #3098) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3104 = (ite (= #3098 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3105 = (_ bv140283481288495 64) ; RIP

0x7f964b11ef2f: test rbp, rbp
	 -> #3106 = (bvand ((_ extract 63 0) #3098) ((_ extract 63 0) #3098)) 
	 -> #3107 = (_ bv0 1) ; Clears carry flag
	 -> #3108 = (_ bv0 1) ; Clears overflow flag
	 -> #3109 = (ite (= (parity_flag ((_ extract 7 0) #3106)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3110 = (ite (= ((_ extract 63 63) #3106) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3111 = (ite (= #3106 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3112 = (_ bv140283481288498 64) ; RIP

0x7f964b11ef78: mov rax, r13
	 -> #3113 = ((_ extract 63 0) #2921) 
	 -> #3114 = (_ bv140283481288571 64) ; RIP

0x7f964b11ef7b: sub rax, rbp
	 -> #3115 = (bvsub ((_ extract 63 0) #3113) ((_ extract 63 0) #3098)) 
	 -> #3116 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3115 (bvxor ((_ extract 63 0) #3113) ((_ extract 63 0) #3098))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3117 = (ite (bvult ((_ extract 63 0) #3113) ((_ extract 63 0) #3098)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3118 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3113) ((_ extract 63 0) #3098)) (bvxor ((_ extract 63 0) #3113) #3115))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3119 = (ite (= (parity_flag ((_ extract 7 0) #3115)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3120 = (ite (= ((_ extract 63 63) #3115) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3121 = (ite (= #3115 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3122 = (_ bv140283481288574 64) ; RIP

0x7f964b11ef7e: pop rbx
	 -> #3123 = #2930 
	 -> #3124 = (bvadd #2929 (_ bv8 64)) ; Aligns stack
	 -> #3125 = (_ bv140283481288575 64) ; RIP

0x7f964b11ef7f: pop rbp
	 -> #3126 = #2927 
	 -> #3127 = (bvadd #3124 (_ bv8 64)) ; Aligns stack
	 -> #3128 = (_ bv140283481288576 64) ; RIP

0x7f964b11ef80: pop r12
	 -> #3129 = #2924 
	 -> #3130 = (bvadd #3127 (_ bv8 64)) ; Aligns stack
	 -> #3131 = (_ bv140283481288578 64) ; RIP

0x7f964b11ef82: pop r13
	 -> #3132 = #2919 
	 -> #3133 = (bvadd #3130 (_ bv8 64)) ; Aligns stack
	 -> #3134 = (_ bv140283481288580 64) ; RIP

0x7f964b11ef84: pop r14
	 -> #3135 = #2902 
	 -> #3136 = (bvadd #3133 (_ bv8 64)) ; Aligns stack
	 -> #3137 = (_ bv140283481288582 64) ; RIP

0x7f964b11ef86: ret 
	 -> #3138 = #2899 ; RIP
	 -> #3139 = (bvadd #3136 (_ bv8 64)) ; Aligns stack

0x7f964b11d5b2: sub r13, rax
	 -> #3140 = (bvsub ((_ extract 63 0) #3132) ((_ extract 63 0) #3115)) 
	 -> #3141 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3140 (bvxor ((_ extract 63 0) #3132) ((_ extract 63 0) #3115))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3142 = (ite (bvult ((_ extract 63 0) #3132) ((_ extract 63 0) #3115)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3143 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3132) ((_ extract 63 0) #3115)) (bvxor ((_ extract 63 0) #3132) #3140))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3144 = (ite (= (parity_flag ((_ extract 7 0) #3140)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3145 = (ite (= ((_ extract 63 63) #3140) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3146 = (ite (= #3140 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3147 = (_ bv140283481281973 64) ; RIP

0x7f964b11d5b5: jmp 0x7f964b11d540

0x7f964b11d540: mov rax, rbx
	 -> #3148 = ((_ extract 63 0) #3123) 
	 -> #3149 = (_ bv140283481281859 64) ; RIP

0x7f964b11d543: sub rax, r13
	 -> #3150 = (bvsub ((_ extract 63 0) #3148) ((_ extract 63 0) #3140)) 
	 -> #3151 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3150 (bvxor ((_ extract 63 0) #3148) ((_ extract 63 0) #3140))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3152 = (ite (bvult ((_ extract 63 0) #3148) ((_ extract 63 0) #3140)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3153 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3148) ((_ extract 63 0) #3140)) (bvxor ((_ extract 63 0) #3148) #3150))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3154 = (ite (= (parity_flag ((_ extract 7 0) #3150)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3155 = (ite (= ((_ extract 63 63) #3150) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3156 = (ite (= #3150 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3157 = (_ bv140283481281862 64) ; RIP

0x7f964b11d546: pop rbx
	 -> #3158 = #2325 
	 -> #3159 = (bvadd #3139 (_ bv8 64)) ; Aligns stack
	 -> #3160 = (_ bv140283481281863 64) ; RIP

0x7f964b11d547: pop rbp
	 -> #3161 = #2322 
	 -> #3162 = (bvadd #3159 (_ bv8 64)) ; Aligns stack
	 -> #3163 = (_ bv140283481281864 64) ; RIP

0x7f964b11d548: pop r12
	 -> #3164 = #2319 
	 -> #3165 = (bvadd #3162 (_ bv8 64)) ; Aligns stack
	 -> #3166 = (_ bv140283481281866 64) ; RIP

0x7f964b11d54a: pop r13
	 -> #3167 = #2316 
	 -> #3168 = (bvadd #3165 (_ bv8 64)) ; Aligns stack
	 -> #3169 = (_ bv140283481281868 64) ; RIP

0x7f964b11d54c: pop r14
	 -> #3170 = #2299 
	 -> #3171 = (bvadd #3168 (_ bv8 64)) ; Aligns stack
	 -> #3172 = (_ bv140283481281870 64) ; RIP

0x7f964b11d54e: ret 
	 -> #3173 = #2195 ; RIP
	 -> #3174 = (bvadd #3171 (_ bv8 64)) ; Aligns stack

0x7f964b114361: cmp rbp, rax
	 -> #3175 = (bvsub ((_ extract 63 0) #3161) ((_ extract 63 0) #3150)) 
	 -> #3176 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3175 (bvxor ((_ extract 63 0) #3161) ((_ extract 63 0) #3150))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3177 = (ite (bvult ((_ extract 63 0) #3161) ((_ extract 63 0) #3150)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3178 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3161) ((_ extract 63 0) #3150)) (bvxor ((_ extract 63 0) #3161) #3175))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3179 = (ite (= (parity_flag ((_ extract 7 0) #3175)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3180 = (ite (= ((_ extract 63 63) #3175) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3181 = (ite (= #3175 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3182 = (_ bv140283481244516 64) ; RIP

0x7f964b114364: jnz 0x7f964b114409

0x7f964b11436a: mov rdi, qword ptr [rip+0x3283bf]
	 -> #3183 = (_ bv140283484553920 64) 
	 -> #3184 = (_ bv140283481244529 64) ; RIP

0x7f964b114371: mov rax, qword ptr [rdi+0x28]
	 -> #3185 = ((_ extract 63 0) #3096) 
	 -> #3186 = (_ bv140283481244533 64) ; RIP

0x7f964b114375: cmp rax, qword ptr [rdi+0x30]
	 -> #3187 = (bvsub ((_ extract 63 0) #3185) #2745) 
	 -> #3188 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3187 (bvxor ((_ extract 63 0) #3185) #2745)))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3189 = (ite (bvult ((_ extract 63 0) #3185) #2745) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3190 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3185) #2745) (bvxor ((_ extract 63 0) #3185) #3187))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3191 = (ite (= (parity_flag ((_ extract 7 0) #3187)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3192 = (ite (= ((_ extract 63 63) #3187) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3193 = (ite (= #3187 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3194 = (_ bv140283481244537 64) ; RIP

0x7f964b114379: jnb 0x7f964b114410

0x7f964b11437f: lea rdx, ptr [rax+0x1]

0x7f964b114383: mov qword ptr [rdi+0x28], rdx
	 -> #3195 = ((_ extract 63 0) #3068) 
	 -> #3196 = (_ bv140283481244551 64) ; RIP

0x7f964b114387: mov byte ptr [rax], 0xa
	 -> #3197 = (_ bv10 8) 
	 -> #3198 = (_ bv140283481244554 64) ; RIP

0x7f964b11438a: add rbp, 0x1
	 -> #3199 = (bvadd ((_ extract 63 0) #3175) (_ bv1 64)) 
	 -> #3200 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3199 (bvxor ((_ extract 63 0) #3175) (_ bv1 64))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3201 = (ite (bvult #3199 ((_ extract 63 0) #3175)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3202 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3175) (bvnot (_ bv1 64))) (bvxor ((_ extract 63 0) #3175) #3199))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3203 = (ite (= (parity_flag ((_ extract 7 0) #3199)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3204 = (ite (= ((_ extract 63 63) #3199) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3205 = (ite (= #3199 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3206 = (_ bv140283481244558 64) ; RIP

0x7f964b11438e: mov eax, 0x7fffffff
	 -> #3207 = (_ bv2147483647 32) 
	 -> #3208 = (_ bv140283481244563 64) ; RIP

0x7f964b114393: cmp rbp, 0x7fffffff
	 -> #3209 = (bvsub ((_ extract 63 0) #3199) ((_ sign_extend 0) (_ bv2147483647 64))) 
	 -> #3210 = (ite (= (_ bv16 64) (bvand (_ bv16 64) (bvxor #3209 (bvxor ((_ extract 63 0) #3199) ((_ sign_extend 0) (_ bv2147483647 64)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3211 = (ite (bvult ((_ extract 63 0) #3199) ((_ sign_extend 0) (_ bv2147483647 64))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3212 = (ite (= ((_ extract 63 63) (bvand (bvxor ((_ extract 63 0) #3199) ((_ sign_extend 0) (_ bv2147483647 64))) (bvxor ((_ extract 63 0) #3199) #3209))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3213 = (ite (= (parity_flag ((_ extract 7 0) #3209)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3214 = (ite (= ((_ extract 63 63) #3209) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3215 = (ite (= #3209 (_ bv0 64)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3216 = (_ bv140283481244570 64) ; RIP

0x7f964b11439a: cmovnbe rbp, rax

0x7f964b11439e: test dword ptr [rbx], 0x8000
	 -> #3217 = (bvand #2773 (_ bv32768 32)) 
	 -> #3218 = (_ bv0 1) ; Clears carry flag
	 -> #3219 = (_ bv0 1) ; Clears overflow flag
	 -> #3220 = (ite (= (parity_flag ((_ extract 7 0) #3217)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3221 = (ite (= ((_ extract 31 31) #3217) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3222 = (ite (= #3217 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3223 = (_ bv140283481244580 64) ; RIP

0x7f964b1143a4: jnz 0x7f964b1143f3

0x7f964b1143a6: mov rdx, qword ptr [rbx+0x88]
	 -> #3224 = (_ bv140283484559296 64) 
	 -> #3225 = (_ bv140283481244589 64) ; RIP

0x7f964b1143ad: sub dword ptr [rdx+0x4], 0x1
	 -> #3226 = (bvsub #2268 (_ bv1 32)) 
	 -> #3227 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #3226 (bvxor #2268 (_ bv1 32))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3228 = (ite (bvult #2268 (_ bv1 32)) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3229 = (ite (= ((_ extract 31 31) (bvand (bvxor #2268 (_ bv1 32)) (bvxor #2268 #3226))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3230 = (ite (= (parity_flag ((_ extract 7 0) #3226)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3231 = (ite (= ((_ extract 31 31) #3226) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3232 = (ite (= #3226 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3233 = (_ bv140283481244593 64) ; RIP

0x7f964b1143b1: jnz 0x7f964b1143f3

0x7f964b1143b3: mov rax, qword ptr [rbx+0x88]
	 -> #3234 = (_ bv140283484559296 64) 
	 -> #3235 = (_ bv140283481244602 64) ; RIP

0x7f964b1143ba: mov qword ptr [rax+0x8], 0x0
	 -> #3236 = (_ bv0 64) 
	 -> #3237 = (_ bv140283481244610 64) ; RIP

0x7f964b1143c2: mov rdx, qword ptr [rbx+0x88]
	 -> #3238 = (_ bv140283484559296 64) 
	 -> #3239 = (_ bv140283481244617 64) ; RIP

0x7f964b1143c9: cmp dword ptr [rip+0x32c3e4], 0x0
	 -> #3240 = (bvsub #2254 ((_ sign_extend 0) (_ bv0 32))) 
	 -> #3241 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #3240 (bvxor #2254 ((_ sign_extend 0) (_ bv0 32)))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3242 = (ite (bvult #2254 ((_ sign_extend 0) (_ bv0 32))) (_ bv1 1) (_ bv0 1)) ; Carry flag
	 -> #3243 = (ite (= ((_ extract 31 31) (bvand (bvxor #2254 ((_ sign_extend 0) (_ bv0 32))) (bvxor #2254 #3240))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3244 = (ite (= (parity_flag ((_ extract 7 0) #3240)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3245 = (ite (= ((_ extract 31 31) #3240) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3246 = (ite (= #3240 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3247 = (_ bv140283481244624 64) ; RIP

0x7f964b1143d9: dec dword ptr [rdx]
	 -> #3248 = (bvsub (_ bv1 32) (_ bv1 32)) 
	 -> #3249 = (ite (= (_ bv16 32) (bvand (_ bv16 32) (bvxor #3248 (bvxor (_ bv1 32) (_ bv1 32))))) (_ bv1 1) (_ bv0 1)) ; Adjust flag
	 -> #3250 = (ite (= ((_ extract 31 31) (bvand (bvxor (_ bv1 32) (_ bv1 32)) (bvxor (_ bv1 32) #3248))) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Overflow flag
	 -> #3251 = (ite (= (parity_flag ((_ extract 7 0) #3248)) (_ bv0 1)) (_ bv1 1) (_ bv0 1)) ; Parity flag
	 -> #3252 = (ite (= ((_ extract 31 31) #3248) (_ bv1 1)) (_ bv1 1) (_ bv0 1)) ; Sign flag
	 -> #3253 = (ite (= #3248 (_ bv0 32)) (_ bv1 1) (_ bv0 1)) ; Zero flag
	 -> #3254 = (_ bv140283481244635 64) ; RIP

0x7f964b1143f3: pop rbx
	 -> #3255 = #2192 
	 -> #3256 = (bvadd #3174 (_ bv8 64)) ; Aligns stack
	 -> #3257 = (_ bv140283481244660 64) ; RIP

0x7f964b1143f4: mov eax, ebp
	 -> #3258 = ((_ extract 31 0) #3209) 
	 -> #3259 = (_ bv140283481244662 64) ; RIP

0x7f964b1143f6: pop rbp
	 -> #3260 = #2189 
	 -> #3261 = (bvadd #3256 (_ bv8 64)) ; Aligns stack
	 -> #3262 = (_ bv140283481244663 64) ; RIP

0x7f964b1143f7: pop r12
	 -> #3263 = #2184 
	 -> #3264 = (bvadd #3261 (_ bv8 64)) ; Aligns stack
	 -> #3265 = (_ bv140283481244665 64) ; RIP

0x7f964b1143f9: ret 
	 -> #3266 = #138 ; RIP
	 -loose
> #3267 = (bvadd #3264 (_ bv8 64)) ; Aligns stack

0x400618: mov eax, dword ptr [rbp-0x4]
	 -> #3268 = ((_ extract 31 0) #127) 
	 -> #3269 = (_ bv4195867 64) ; RIP

0x40061b: leave 
	 -> #3270 = ((_ extract 63 0) #3260) 
	 -> #3271 = #1 
	 -> #3272 = (bvadd #3270 (_ bv8 64)) ; Aligns stack
	 -> #3273 = (_ bv4195868 64) ; RIP

